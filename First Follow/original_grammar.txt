<program> -> <moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations> -> <moduleDeclaration> <moduleDeclarations> | e
<moduleDeclaration> -> DECLARE MODULE ID SEMICOL
<otherModules> -> <module> <otherModules> | e
<driverModule> -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef> 
<module> -> DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret> ->  RETURNS SQBO <output_plist> SQBC SEMICOL | e

<input_plist> -> ID COLON <dataType> <input_plist_ex> 
<input_plist_ex> -> COMMA ID COLON <dataType> <input_plist_ex> | e

<output_plist> ->  ID COLON <type> <output_plist_ex>
<output_plist_ex> ->  COMMA ID COLON <type> <output_plist_ex> | e

<dataType> -> INTEGER | REAL | BOOLEAN | ARRAY SQBO <range> SQBC OF <type>
<type> -> INTEGER | REAL | BOOLEAN

<moduleDef> ->  START <statements> END

<statements> -> <statement> <statements> | e
<statement> -> <ioStmt> | <simpleStmt> | <declareStmt> | <condionalStmt> | <iterativeStmt>
<ioStmt> -> GET_VALUE BO ID BC SEMICOL | PRINT BO <var> BC SEMICOL
<var> -> ID <whichId> | NUM | RNUM
<whichId> ->  SQBO ID SQBC | e
<simpleStmt> ->  <assignmentStmt> | <moduleReuseStmt>
<assignmentStmt> ->  ID <whichStmt>
<whichStmt> -> <lvalueIDStmt> | <lvalueARRStmt>
<lvalueIDStmt> ->  ASSIGNOP <expression> SEMICOL
<lvalueARRStmt> ->  SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<index> ->  NUM | ID

<moduleReuseStmt> -> <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional> ->  SQBO <idList> SQBC ASSIGNOP | e

<idList> ->  ID <idList_ex>
<idList_ex> ->  COMMA ID <idList_ex> | e

<expression> -> <AOBE> | MINUS <BorNBAE>
<negOrPosAE> -> MINUS <BorNBAE> | <BorNBAE>
<BorNBAE> -> BO <arithmeticExpr> BC | <arithmeticExpr>
<AOBE> -> <AnyTerm> <WithLogOp>
<WithLogOp> -> <logicalOp> <AnyTerm> <WithLogOp> | e
<AnyTerm> -> <arithmeticExpr> <WithRelOp> 
<WithRelOp> -> <relationalOp> <negOrPosAE> <WithRelOp> | e
<AOBE> -> BO <AOBE> BC 

<arithmeticExpr> -> <term> <N4> 
<N4> -> <op1> <term> <N4> | e

<term> -> <factor> <N5>
<N5> -> <op2> <factor> <N5>| e

<factor> -> <var>
<op1> -> PLUS | MINUS 
<op2> -> MUL | DIV

<logicalOp> -> AND | OR

<relationalOp> ->  LT | LE | GT | GE | EQ | NE
<declareStmt> ->  DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt> -> SWITCH BO ID BC START <caseStmts> <default> END

<caseStmts> -> CASE <value> COLON <statements> BREAK SEMICOL <MultiCase>
<MultiCase> -> CASE <value> COLON <statements> BREAK SEMICOL <MultiCase> | e
<value> -> NUM | TRUE | FALSE
<default> -> DEFAULT COLON <statements> BREAK SEMICOL | e
<iterativeStmt> -> FOR BO ID IN <range> BC START <statements> END | WHILE BO <AOBE> BC START <statements> END
<range> -> NUM RANGEOP NUM