<program> -> <moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations> -> <moduleDeclaration> <moduleDeclarations> 
<moduleDeclarations> -> e
<moduleDeclaration> -> DECLARE MODULE ID SEMICOL
<otherModules> -> <module> <otherModules> 
<otherModules> -> e
<driverModule> -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef> 
<module> -> DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret> ->  RETURNS SQBO <output_plist> SQBC SEMICOL 
<ret> -> e
<input_plist> -> ID COLON <dataType> <input_plist_ex> 
<input_plist_ex> -> COMMA ID COLON <dataType> <input_plist_ex> 
<input_plist_ex> -> e
<output_plist> ->  ID COLON <type> <output_plist_ex>
<output_plist_ex> ->  COMMA ID COLON <type> <output_plist_ex> 
<output_plist_ex> -> e
<dataType> -> INTEGER 
<dataType> -> REAL 
<dataType> -> BOOLEAN 
<dataType> -> ARRAY SQBO <range> SQBC OF <type>
<type> -> INTEGER 
<type> -> REAL 
<type> -> BOOLEAN
<moduleDef> ->  START <statements> END
<statements> -> <statement> <statements> 
<statements> -> e
<statement> -> <ioStmt> 
<statement> -> <simpleStmt> 
<statement> -> <declareStmt> 
<statement> -> <condionalStmt> 
<statement> -> <iterativeStmt>
<ioStmt> -> GET_VALUE BO ID BC SEMICOL 
<ioStmt> -> PRINT BO <var> BC SEMICOL
<var> -> ID <whichId> 
<var> -> NUM 
<var> -> RNUM
<whichId> ->  SQBO ID SQBC 
<whichId> -> e
<simpleStmt> ->  <assignmentStmt> 
<simpleStmt> -> <moduleReuseStmt>
<assignmentStmt> ->  ID <whichStmt>
<whichStmt> -> <lvalueIDStmt> 
<whichStmt> -> <lvalueARRStmt>
<lvalueIDStmt> ->  ASSIGNOP <expression> SEMICOL
<lvalueARRStmt> ->  SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<index> ->  NUM 
<index> -> ID
<moduleReuseStmt> -> <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional> ->  SQBO <idList> SQBC ASSIGNOP 
<optional> -> e
<idList> ->  ID <idList_ex>
<idList_ex> ->  COMMA ID <idList_ex> 
<idList_ex> -> e
<expression> -> <AOBE> 
<expression> -> MINUS <BorNBAE>
<negOrPosAE> -> MINUS <BorNBAE> 
<negOrPosAE> -> <BorNBAE>
<BorNBAE> -> BO <arithmeticExpr> BC 
<BorNBAE> -> <arithmeticExpr>
<AOBE> -> <AnyTerm> <WithLogOp>
<WithLogOp> -> <logicalOp> <AnyTerm> <WithLogOp> 
<WithLogOp> -> e
<AnyTerm> -> <arithmeticExpr> <WithRelOp> 
<WithRelOp> -> <relationalOp> <negOrPosAE> <WithRelOp> 
<WithRelOp> -> e
<AOBE> -> BO <AOBE> BC 
<arithmeticExpr> -> <term> <N4> 
<N4> -> <op1> <term> <N4> 
<N4> -> e
<term> -> <factor> <N5>
<N5> -> <op2> <factor> <N5>
<N5> -> e
<factor> -> <var>
<op1> -> PLUS 
<op1> -> MINUS 
<op2> -> MUL 
<op2> -> DIV
<logicalOp> -> AND 
<logicalOp> -> OR
<relationalOp> ->  LT 
<relationalOp> -> LE 
<relationalOp> -> GT 
<relationalOp> -> GE 
<relationalOp> -> EQ 
<relationalOp> -> NE
<declareStmt> ->  DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt> -> SWITCH BO ID BC START <caseStmts> <default> END
<caseStmts> -> CASE <value> COLON <statements> BREAK SEMICOL <MultiCase>
<MultiCase> -> CASE <value> COLON <statements> BREAK SEMICOL <MultiCase> 
<MultiCase> -> e
<value> -> NUM 
<value> -> TRUE 
<value> -> FALSE
<default> -> DEFAULT COLON <statements> BREAK SEMICOL 
<default> -> e
<iterativeStmt> -> FOR BO ID IN <range> BC START <statements> END 
<iterativeStmt> -> WHILE BO <booleanExpr> BC START <statements> END
<range> -> NUM RANGEOP NUM