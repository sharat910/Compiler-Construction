declare module readArr;

**the following function computes the sum of first n elements of the array**
<<module arraySum>>
takes input[list:array[1..15] of    real, n:integer,p:boolean];
returns  [sum:real];
start
	declare index,index2:integer;
	declare t:boolean;
	sum:=0.0;
	declare p:boolean;
	for(index in  1..15)
	start
		declare index3,index4:integer;
		t:= index<=n;
		switch(p)
		start
			case true: print(list[index3]);
				   sum:=sum+list[index4];
				   break;
			case false: print(sum);
				    print(index);
				    **prints the values of sum and index  15-n times**
				    break;
			case false: print(sum);
				    print(index);
				    **prints the values of sum and index  15-n times**
				    break;

			case false: print(sum);
				    print(p);
				    **prints the values of sum and index  15-n times**
				    break;
		end

		** no need to increment the value of index as it will be taken care by the semantic rules associated with for construct, but an increment statement does not make its syntax incorrect**
	end
	
	for(index in  1..15)
	start
		p:=10;
	end
	print(sum);
end
<<module arraySun>>
takes input[list:array[1..15] of    real, n:integer];
returns  [sum:real];
start
	declare index,index2:integer;
	declare t:boolean;
	sum:=3.0e+10;
	for(index in  1..15)
	start
		t:= index<=n;
		switch(t)
		start
			case true: print(list[index]);
				   sum:=sum+list[index2];
				   break;
			case false: print(sum);
				    print(index);
				    **prints the values of sum and index  15-n times**
				    break;
			case false: print(sum);
				    print(index);
				    **prints the values of sum and index  15-n times**
				    break;

			case false: print(sum);
				    print(index);
				    **prints the values of sum and index  15-n times**
				    break;
		end
		** no need to increment the value of index as it will be taken care by the semantic rules associated with for construct, but an increment statement does not make its syntax incorrect**
	end
	print(sum);
end
<<<driver program>>>
start
	declare A:array[1..15] of real;
	declare k:integer;
	declare s:real;
	get_value(k);
	use module readArr with parameters A,k;
	[s]:= use module arraySum with parameters A,k;
	print(s);
end

**The following module reads k  values one by one**
** the array elements are populated with the read values**
**The array variable is not returned as the translation will**
**use the same locations for array elements**



