rule 1: <program> ->  <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> -->
rule 2: <moduleDeclarations> ->  <moduleDeclaration> --> <moduleDeclarations> -->
rule 3: <moduleDeclarations> ->  e -->
rule 4: <moduleDeclaration> ->  DECLARE --> MODULE --> ID --> SEMICOL -->
rule 5: <otherModules> ->  <module> --> <otherModules> -->
rule 6: <otherModules> ->  e -->
rule 7: <driverModule> ->  DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> -->
rule 8: <module> ->  DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> -->
rule 9: <ret> ->  RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL -->
rule 10: <ret> ->  e -->
rule 11: <input_plist> ->  ID --> COLON --> <dataType> --> <input_plist_ex> -->
rule 12: <input_plist_ex> ->  COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> -->
rule 13: <input_plist_ex> ->  e -->
rule 14: <output_plist> ->  ID --> COLON --> <type> --> <output_plist_ex> -->
rule 15: <output_plist_ex> ->  COMMA --> ID --> COLON --> <type> --> <output_plist_ex> -->
rule 16: <output_plist_ex> ->  e -->
rule 17: <dataType> ->  INTEGER -->
rule 18: <dataType> ->  REAL -->
rule 19: <dataType> ->  BOOLEAN -->
rule 20: <dataType> ->  ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> -->
rule 21: <type> ->  INTEGER -->
rule 22: <type> ->  REAL -->
rule 23: <type> ->  BOOLEAN -->
rule 24: <moduleDef> ->  START --> <statements> --> END -->
rule 25: <statements> ->  <statement> --> <statements> -->
rule 26: <statements> ->  e -->
rule 27: <statement> ->  <ioStmt> -->
rule 28: <statement> ->  <simpleStmt> -->
rule 29: <statement> ->  <declareStmt> -->
rule 30: <statement> ->  <condionalStmt> -->
rule 31: <statement> ->  <iterativeStmt> -->
rule 32: <ioStmt> ->  GET_VALUE --> BO --> ID --> BC --> SEMICOL -->
rule 33: <ioStmt> ->  PRINT --> BO --> <var> --> BC --> SEMICOL -->
rule 34: <var> ->  ID --> <whichId> -->
rule 35: <var> ->  NUM -->
rule 36: <var> ->  RNUM -->
rule 37: <var> ->  TRUE -->
rule 38: <var> ->  FALSE -->
rule 39: <whichId> ->  SQBO --> ID --> SQBC -->
rule 40: <whichId> ->  e -->
rule 41: <simpleStmt> ->  <assignmentStmt> -->
rule 42: <simpleStmt> ->  <moduleReuseStmt> -->
rule 43: <assignmentStmt> ->  ID --> <whichStmt> -->
rule 44: <whichStmt> ->  <lvalueIDStmt> -->
rule 45: <whichStmt> ->  <lvalueARRStmt> -->
rule 46: <lvalueIDStmt> ->  ASSIGNOP --> <expression> --> SEMICOL -->
rule 47: <lvalueARRStmt> ->  SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL -->
rule 48: <index> ->  NUM -->
rule 49: <index> ->  ID -->
rule 50: <moduleReuseStmt> ->  <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL -->
rule 51: <optional> ->  SQBO --> <idList> --> SQBC --> ASSIGNOP -->
rule 52: <optional> ->  e -->
rule 53: <idList> ->  ID --> <idList_ex> -->
rule 54: <idList_ex> ->  COMMA --> ID --> <idList_ex> -->
rule 55: <idList_ex> ->  e -->
rule 56: <expression> ->  <AOBE> -->
rule 57: <expression> ->  MINUS --> <BorNBAE> -->
rule 58: <negOrPosAE> ->  MINUS --> <BorNBAE> -->
rule 59: <negOrPosAE> ->  <BorNBAE> -->
rule 60: <BorNBAE> ->  BO --> <arithmeticExpr> --> BC -->
rule 61: <BorNBAE> ->  <arithmeticExpr> -->
rule 62: <AOBE> ->  <AnyTerm> --> <WithLogOp> -->
rule 63: <WithLogOp> ->  <logicalOp> --> <AnyTerm2> --> <WithLogOp> -->
rule 64: <WithLogOp> ->  e -->
rule 65: <AnyTerm> ->  <arithmeticExpr> --> <WithRelOp> -->
rule 66: <AnyTerm2> ->  BO --> <AOBE> --> BC -->
rule 67: <AnyTerm2> ->  <AnyTerm> -->
rule 68: <WithRelOp> ->  <relationalOp> --> <negOrPosAE> --> <WithRelOp> -->
rule 69: <WithRelOp> ->  e -->
rule 70: <AOBE> ->  BO --> <AOBE> --> BC --> <alpha> -->
rule 71: <alpha> ->  <all_ops> --> <AOBE> -->
rule 72: <alpha> ->  e -->
rule 73: <all_ops> ->  <logicalOp> -->
rule 74: <all_ops> ->  <relationalOp> -->
rule 75: <all_ops> ->  <op1> -->
rule 76: <all_ops> ->  <op2> -->
rule 77: <arithmeticExpr> ->  <term> --> <N4> -->
rule 78: <N4> ->  <op1> --> <term> --> <N4> -->
rule 79: <N4> ->  e -->
rule 80: <term> ->  <factor> --> <N5> -->
rule 81: <N5> ->  <op2> --> <factor> --> <N5> -->
rule 82: <N5> ->  e -->
rule 83: <factor> ->  <var> -->
rule 84: <op1> ->  PLUS -->
rule 85: <op1> ->  MINUS -->
rule 86: <op2> ->  MUL -->
rule 87: <op2> ->  DIV -->
rule 88: <logicalOp> ->  AND -->
rule 89: <logicalOp> ->  OR -->
rule 90: <relationalOp> ->  LT -->
rule 91: <relationalOp> ->  LE -->
rule 92: <relationalOp> ->  GT -->
rule 93: <relationalOp> ->  GE -->
rule 94: <relationalOp> ->  EQ -->
rule 95: <relationalOp> ->  NE -->
rule 96: <declareStmt> ->  DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL -->
rule 97: <condionalStmt> ->  SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END -->
rule 98: <caseStmts> ->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
rule 99: <MultiCase> ->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
rule 100: <MultiCase> ->  e -->
rule 101: <value> ->  NUM -->
rule 102: <value> ->  TRUE -->
rule 103: <value> ->  FALSE -->
rule 104: <default> ->  DEFAULT --> COLON --> <statements> --> BREAK --> SEMICOL -->
rule 105: <default> ->  e -->
rule 106: <iterativeStmt> ->  FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END -->
rule 107: <iterativeStmt> ->  WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END -->
rule 108: <range> ->  NUM --> RANGEOP --> NUM -->
FIRSTS



<AOBE>
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->
<output_plist>
 ID -->
<idList>
 ID -->
<statement>
 USE --> SQBO --> ID --> FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT -->
<whichStmt>
 SQBO --> ASSIGNOP -->
<WithLogOp>
 AND --> OR --> e -->
<moduleReuseStmt>
 USE --> SQBO -->
<idList_ex>
 e --> COMMA -->
<declareStmt>
 DECLARE -->
<MultiCase>
 e --> CASE -->
<simpleStmt>
 SQBO --> USE --> ID -->
<expression>
 FALSE --> TRUE --> RNUM --> NUM --> ID --> BO --> MINUS -->
<term>
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<index>
 ID --> NUM -->
<module>
 DEF -->
<lvalueARRStmt>
 SQBO -->
<negOrPosAE>
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO --> MINUS -->
<dataType>
 ARRAY --> BOOLEAN --> REAL --> INTEGER -->
<input_plist>
 ID -->
<var>
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<op2>
 DIV --> MUL -->
<N4>
 PLUS --> MINUS --> e -->
<output_plist_ex>
 e --> COMMA -->
<driverModule>
 DRIVERDEF -->
<program>
 DEF --> DECLARE --> DRIVERDEF -->
<iterativeStmt>
 WHILE --> FOR -->
<caseStmts>
 CASE -->
<logicalOp>
 OR --> AND -->
<whichId>
 e --> SQBO -->
<ioStmt>
 PRINT --> GET_VALUE -->
<input_plist_ex>
 e --> COMMA -->
<ret>
 e --> RETURNS -->
<WithRelOp>
 LT --> LE --> GT --> GE --> EQ --> NE --> e -->
<condionalStmt>
 SWITCH -->
<optional>
 e --> SQBO -->
<op1>
 MINUS --> PLUS -->
<range>
 NUM -->
<relationalOp>
 NE --> EQ --> GE --> GT --> LE --> LT -->
<BorNBAE>
 FALSE --> TRUE --> RNUM --> NUM --> ID --> BO -->
<factor>
 ID --> NUM --> RNUM --> TRUE --> FALSE -->
<value>
 FALSE --> TRUE --> NUM -->
<moduleDeclarations>
 DECLARE --> e -->
<otherModules>
 DEF --> e -->
<type>
 BOOLEAN --> REAL --> INTEGER -->
<moduleDeclaration>
 DECLARE -->
<moduleDef>
 START -->
<default>
 e --> DEFAULT -->
<N5>
 MUL --> DIV --> e -->
<assignmentStmt>
 ID -->
<lvalueIDStmt>
 ASSIGNOP -->
<statements>
 SQBO --> USE --> ID --> PRINT --> GET_VALUE --> DECLARE --> SWITCH --> WHILE --> FOR --> e -->
<arithmeticExpr>
 ID --> NUM --> RNUM --> TRUE --> FALSE -->
<AnyTerm>
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<all_ops>
 MUL --> DIV --> PLUS --> MINUS --> LT --> LE --> GT --> GE --> EQ --> NE --> AND --> OR -->
<alpha>
 OR --> AND --> NE --> EQ --> GE --> GT --> LE --> LT --> MINUS --> PLUS --> DIV --> MUL --> e -->
<AnyTerm2>
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->


FOLLOWS



<AOBE>
 BC --> SEMICOL -->
<output_plist>
 SQBC -->
<idList>
 COLON --> SQBC --> SEMICOL -->
<statement>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<whichStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<WithLogOp>
 BC --> SEMICOL -->
<moduleReuseStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<idList_ex>
 COLON --> SQBC --> SEMICOL -->
<declareStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<MultiCase>
 END --> DEFAULT -->
<simpleStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<expression>
 SEMICOL -->
<term>
 MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<index>
 SQBC -->
<module>
 DEF --> DRIVERDEF --> $ -->
<lvalueARRStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<negOrPosAE>
 NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<dataType>
 SEMICOL --> COMMA --> SQBC -->
<input_plist>
 SQBC -->
<var>
 DIV --> MUL --> MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<op2>
 BO --> ID --> NUM --> RNUM --> TRUE --> FALSE -->
<N4>
 NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<output_plist_ex>
 SQBC -->
<driverModule>
 DEF --> $ -->
<program>
 $ -->
<iterativeStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<caseStmts>
 END --> DEFAULT -->
<logicalOp>
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->
<whichId>
 DIV --> MUL --> MINUS --> PLUS --> LT --> LE --> GT --> GE --> EQ --> NE --> AND --> OR --> BC --> SEMICOL -->
<ioStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<input_plist_ex>
 SQBC -->
<ret>
 START -->
<WithRelOp>
 OR --> AND --> BC --> SEMICOL -->
<condionalStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<optional>
 USE -->
<op1>
 BO --> FALSE --> TRUE --> RNUM --> NUM --> ID -->
<range>
 BC --> SQBC -->
<relationalOp>
 MINUS --> ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->
<BorNBAE>
 LT --> LE --> GT --> GE --> EQ --> NE --> AND --> OR --> BC --> SEMICOL -->
<factor>
 DIV --> MUL --> MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<value>
 COLON -->
<moduleDeclarations>
 DEF --> DRIVERDEF -->
<otherModules>
 DRIVERDEF --> $ -->
<type>
 SEMICOL --> COMMA --> SQBC -->
<moduleDeclaration>
 DECLARE --> DEF --> DRIVERDEF -->
<moduleDef>
 DEF --> DRIVERDEF --> $ -->
<default>
 END -->
<N5>
 MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<assignmentStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<lvalueIDStmt>
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<statements>
 BREAK --> END -->
<arithmeticExpr>
 NE --> EQ --> GE --> GT --> LE --> LT --> OR --> AND --> BC --> SEMICOL -->
<AnyTerm>
 OR --> AND --> BC --> SEMICOL -->
<all_ops>
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->
<alpha>
 BC --> SEMICOL -->
<AnyTerm2>
 OR --> AND --> BC --> SEMICOL -->


-----FIRST AND FOLLOW AUTOMATED-----

Press:
1=> For the clean code
2=> For printing token generated by lexer
3=> For verifying the syntactic correctness
4=> For printing the parse tree
5=> For Exiting


Correct Syntax.


Line 4 ID encountered->readArr 1 Module Declared.DeclaringreadArr
Line 5 ID encountered->arraySum 2 ModuleDefinition.
Line 6 ID encountered->list 6 Declared of type ARRAY. 
REAL.
Line 6 ID encountered->n 6 Declared of type INTEGER. 
error free
Line 7 ID encountered->sum 7 35 0 0
Declared of type REAL.
Line 8 parent offset 0
Line 9 ID encountered->index 4 Nesting:1 Offset:0
index Declared of typeINTEGER in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh index
Line 10 ID encountered->t 4 Nesting:1 Offset:0
t Declared of typeBOOLEAN in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh t
Line 10 ID encountered->a Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 1 and offset 0.
Nesting:1 Offset:0
declared and found a
Line 11 ID encountered->sum 3 Nesting:1 Offset:0
Declared.
Line 12 ID encountered->t 3 Nesting:1 Offset:0
Declared.
Line 12 ID encountered->sum 3 Nesting:1 Offset:0
Declared.
Line 13 ID encountered->sum 3 Nesting:1 Offset:0
Declared.
Line 13 ID encountered->t 3 Nesting:1 Offset:0
Declared.
Line 14 parent offset 0
Line 15 ID encountered->p 4 type of arrayBOOLEAN
Nesting:2 Offset:0
Nesting:1 Offset:0
p Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
Yeahhhhh p
Line 15 ID encountered->q Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
declared and found q
Line 15 ID encountered->r Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
declared and found r
Line 16 ID encountered->newarr 4 type of arrayREAL
Nesting:2 Offset:0
Nesting:1 Offset:0
newarr Declared of typeREAL in nesting 2 and offset 0.
Nesting:2 Offset:0
Yeahhhhh newarr
Line 17 ID encountered->u 4 Nesting:2 Offset:0
Nesting:1 Offset:0
u Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
Yeahhhhh u
Line 17 ID encountered->v Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
declared and found v
Line 18 ID encountered->sum 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 18 ID encountered->sum 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 19 parent offset 0
Line 20 ID encountered->x 4 Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
x Declared of typeINTEGER in nesting 3 and offset 0.
Nesting:3 Offset:0
Yeahhhhh x
Line 20 ID encountered->y Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeINTEGER in nesting 3 and offset 0.
Nesting:3 Offset:0
declared and found y
Line 21 ID encountered->x 3 Nesting:3 Offset:0
Declared.
Line 21 ID encountered->y 3 Nesting:3 Offset:0
Declared.
Line 21 ID encountered->index 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 22 ID encountered->sum 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 22 ID encountered->p 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Declared.
Line 23 ID encountered->t 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 23 ID encountered->y 3 Nesting:3 Offset:0
Declared.
Line 23 ID encountered->x 3 Nesting:3 Offset:0
Declared.
Line 23 ID encountered->newarr 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Declared.
Line 23 ID encountered->v 3 Nesting:3 Offset:0
Nesting:2 Offset:0
Declared.
Line 25 ID encountered->index 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 25 ID encountered->index 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 25 ID encountered->x 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Not declared.
Line 26 ID encountered->r 3 Nesting:2 Offset:0
Declared.
Line 26 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 26 ID encountered->p 3 Nesting:2 Offset:0
Declared.
Line 26 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 26 ID encountered->q 3 Nesting:2 Offset:0
Declared.
Line 26 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 27 ID encountered->r 3 Nesting:2 Offset:0
Declared.
Line 27 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 27 ID encountered->p 3 Nesting:2 Offset:0
Declared.
Line 27 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 27 ID encountered->list 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 27 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 28 ID encountered->newarr 3 Nesting:2 Offset:0
Declared.
Line 28 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 28 ID encountered->list 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 28 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 28 ID encountered->list 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 28 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 29 ID encountered->t 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 29 ID encountered->list 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 29 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 29 ID encountered->newarr 3 Nesting:2 Offset:0
Declared.
Line 29 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 30 ID encountered->a 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 30 ID encountered->t 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 30 ID encountered->list 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 30 ID encountered->v 3 Nesting:2 Offset:0
Declared.
Line 32 ID encountered->index 3 Nesting:1 Offset:0
Declared.
Line 33 parent offset 0
Line 34 ID encountered->y_1 4 Nesting:2 Offset:1
Nesting:1 Offset:0
y_1 Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
Yeahhhhh y_1
Line 34 ID encountered->y_2 Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
declared and found y_2
Line 35 ID encountered->k 4 type of arrayREAL
Nesting:2 Offset:1
Nesting:1 Offset:0
k Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
Yeahhhhh k
Line 35 ID encountered->l Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
declared and found l
Line 35 ID encountered->m Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
declared and found m
Line 36 ID encountered->x 4 Nesting:2 Offset:1
Nesting:1 Offset:0
x Declared of typeREAL in nesting 2 and offset 1.
Nesting:2 Offset:1
Yeahhhhh x
Line 37 ID encountered->t 3 Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 37 ID encountered->index 3 Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 37 ID encountered->n 3 Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 38 ID encountered->t 3 Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 39 parent offset 1
Line 40 ID encountered->list 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 40 ID encountered->index 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 41 ID encountered->m 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Declared.
Line 41 ID encountered->j 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Not declared.
Line 41 ID encountered->k 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Declared.
Line 41 ID encountered->j 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Not declared.
Line 42 ID encountered->sum 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 42 ID encountered->sum 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 42 ID encountered->list 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 42 ID encountered->index 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 42 ID encountered->k 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Declared.
Line 42 ID encountered->index 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 43 ID encountered->value 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Not declared.
Line 43 ID encountered->sum 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 44 ID encountered->x_1 4 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
x_1 Declared of typeINTEGER in nesting 3 and offset 1.
Nesting:3 Offset:1
Yeahhhhh x_1
Line 44 ID encountered->x_2 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeINTEGER in nesting 3 and offset 1.
Nesting:3 Offset:1
declared and found x_2
Line 45 ID encountered->x_1 3 Nesting:3 Offset:1
Declared.
Line 45 ID encountered->index 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 46 ID encountered->x_2 3 Nesting:3 Offset:1
Declared.
Line 46 ID encountered->x_1 3 Nesting:3 Offset:1
Declared.
Line 46 ID encountered->x_2 3 Nesting:3 Offset:1
Declared.
Line 48 ID encountered->u1 4 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
u1 Declared of typeREAL in nesting 3 and offset 1.
Nesting:3 Offset:1
Yeahhhhh u1
Line 48 ID encountered->u2 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeREAL in nesting 3 and offset 1.
Nesting:3 Offset:1
declared and found u2
Line 49 ID encountered->u2 3 Nesting:3 Offset:1
Declared.
Line 49 ID encountered->n 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 49 ID encountered->u1 3 Nesting:3 Offset:1
Declared.
Line 51 ID encountered->sum 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared.
Line 52 ID encountered->x 4 Nesting:3 Offset:1
Nesting:2 Offset:1
Redeclaration.
Line 52 ID encountered->u1 Nesting:3 Offset:1
Redeclaration.
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line 52 ID encountered->x_5 Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Declared of typeINTEGER in nesting 3 and offset 1.
Nesting:3 Offset:1
declared and found x_5
Line 53 ID encountered->y_1 3 Nesting:3 Offset:1
Nesting:2 Offset:1
Declared.
Line 57 ID encountered->x_2 3 Nesting:1 Offset:0
Not declared.
Driver Function seen.
Line 60 parent offset 0
Line 61 ID encountered->A 4 type of arrayREAL
Nesting:1 Offset:0
A Declared of typeREAL in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh A
Line 62 ID encountered->k 4 Nesting:1 Offset:0
k Declared of typeINTEGER in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh k
Line 63 ID encountered->s 4 Nesting:1 Offset:0
s Declared of typeREAL in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh s
Line 64 ID encountered->k 3 Nesting:1 Offset:0
Declared.
Line 66 ID encountered->s 5 Nesting:1 Offset:0
Declared.
Line 66 ID encountered->arraySum Line 66 ID encountered->A 5 Nesting:1 Offset:0
Declared.
ID->k Nesting:1 Offset:0
Declared.
Line 67 ID encountered->s 3 Nesting:1 Offset:0
Declared.
Line 70 ID encountered->readArr 2 ModuleDefinition.
Line 71 ID encountered->arr1 6 Declared of type ARRAY. 
BOOLEAN.
Line 71 ID encountered->k 6 Declared of type INTEGER. 
error free
Line 72 parent offset 0
Line 73 ID encountered->tempvar 4 Nesting:1 Offset:0
tempvar Declared of typeREAL in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh tempvar
Line 74 ID encountered->i 4 Nesting:1 Offset:0
i Declared of typeINTEGER in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh i
Line 75 ID encountered->i 3 Nesting:1 Offset:0
Declared.
Line 76 ID encountered->x_1 3 Nesting:1 Offset:0
Not declared.
Line 76 ID encountered->i 3 Nesting:1 Offset:0
Declared.
Line 76 ID encountered->u1 3 Nesting:1 Offset:0
Not declared.
Line 77 ID encountered->i 4 Nesting:1 Offset:0
Redeclaration.
Line 78 ID encountered->i 3 Nesting:1 Offset:0
Declared.
Line 78 ID encountered->k 3 Nesting:1 Offset:0
Declared.
Line 79 parent offset 0
Line 80 ID encountered->x_1 4 Nesting:2 Offset:0
Nesting:1 Offset:0
x_1 Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
Yeahhhhh x_1
Line 80 ID encountered->x_2 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 2 and offset 0.
Nesting:2 Offset:0
declared and found x_2
Line 81 ID encountered->x_1 3 Nesting:2 Offset:0
Declared.
Line 81 ID encountered->u2 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Not declared.
Line 82 ID encountered->tempvar 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 83 ID encountered->x_1 4 Nesting:2 Offset:0
Redeclaration.
Line 83 ID encountered->x_3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared of typeINTEGER in nesting 2 and offset 0.
Nesting:2 Offset:0
declared and found x_3
Line 84 ID encountered->arr1 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 84 ID encountered->i 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 84 ID encountered->tempvar 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 85 ID encountered->i 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 85 ID encountered->i 3 Nesting:2 Offset:0
Nesting:1 Offset:0
Declared.
Line 87 ID encountered->x_2 4 Nesting:1 Offset:0
x_2 Declared of typeBOOLEAN in nesting 1 and offset 0.
Nesting:1 Offset:0
Yeahhhhh x_2
Line 87 ID encountered->x_1 Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 1 and offset 0.
Nesting:1 Offset:0
declared and found x_1
Line 87 ID encountered->x_3 Nesting:1 Offset:0
Declared of typeBOOLEAN in nesting 1 and offset 0.
Nesting:1 Offset:0
declared and found x_3
Line no. 4 Calling magic_function on DECLARE
0
Line no. 4 Calling magic_function on MODULE
0
Line no. 4 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for readArr whose type is 1
Line no. 4 Calling magic_function on SEMICOL
0
Line no. 4 Calling magic_function on <moduleDeclaration>
4
Line no. 5 Calling magic_function on e
0
Line no. 4 Calling magic_function on <moduleDeclarations>
3
Line no. 4 Calling magic_function on <moduleDeclarations>
2
Creating ast node for <moduleDeclarations>
 with count 2
Line no. 5 Calling magic_function on DEF
0
Line no. 5 Calling magic_function on MODULE
0
Line no. 5 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for arraySum whose type is 1
Line no. 5 Calling magic_function on ENDDEF
0
Line no. 6 Calling magic_function on TAKES
0
Line no. 6 Calling magic_function on INPUT
0
Line no. 6 Calling magic_function on SQBO
0
Line no. 6 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:1 Offset:0
Line no. 6 Calling magic_function on COLON
0
Line no. 6 Calling magic_function on ARRAY
0
Line no. 6 Calling magic_function on SQBO
0
Line no. 6 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 6 Calling magic_function on RANGEOP
0
Line no. 6 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 6 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 15 whose type is 2
Line no. 6 Calling magic_function on SQBC
0
Line no. 6 Calling magic_function on OF
0
Line no. 6 Calling magic_function on REAL
0
Line no. 6 Calling magic_function on <type>
22
Line no. 6 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 6 Calling magic_function on COMMA
0
Line no. 6 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for n whose type is 1
Nesting:1 Offset:0
Line no. 6 Calling magic_function on COLON
0
Line no. 6 Calling magic_function on INTEGER
0
Line no. 6 Calling magic_function on <dataType>
17
Line no. 6 Calling magic_function on e
0
Line no. 6 Calling magic_function on <input_plist_ex>
13
Line no. 6 Calling magic_function on <input_plist_ex>
12
Creating ast node for <input_plist_ex>
 with count 3
Line no. 5 Calling magic_function on <input_plist>
11
Creating ast node for <input_plist>
 with count 3
Line no. 6 Calling magic_function on SQBC
0
Line no. 6 Calling magic_function on SEMICOL
0
Line no. 7 Calling magic_function on RETURNS
0
Line no. 7 Calling magic_function on SQBO
0
Line no. 7 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:1 Offset:0
Line no. 7 Calling magic_function on COLON
0
Line no. 7 Calling magic_function on REAL
0
Line no. 7 Calling magic_function on <type>
22
Line no. 7 Calling magic_function on e
0
Line no. 7 Calling magic_function on <output_plist_ex>
16
Line no. 7 Calling magic_function on <output_plist>
14
Creating ast node for <output_plist>
 with count 3
Line no. 7 Calling magic_function on SQBC
0
Line no. 7 Calling magic_function on SEMICOL
0
Line no. 5 Calling magic_function on <ret>
9
Creating ast node for <ret>
 with count 1
Line no. 8 Calling magic_function on START
0
Line no. 9 Calling magic_function on DECLARE
0
Line no. 9 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:1 Offset:0
Line no. 9 Calling magic_function on e
0
Line no. 9 Calling magic_function on <idList_ex>
55
Line no. 9 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 9 Calling magic_function on COLON
0
Line no. 9 Calling magic_function on INTEGER
0
Line no. 9 Calling magic_function on <dataType>
17
Line no. 9 Calling magic_function on SEMICOL
0
Line no. 9 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 9 Calling magic_function on <statement>
29
Line no. 10 Calling magic_function on DECLARE
0
Line no. 10 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:1 Offset:0
Line no. 10 Calling magic_function on COMMA
0
Line no. 10 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for a whose type is 1
Nesting:1 Offset:0
Line no. 10 Calling magic_function on e
0
Line no. 10 Calling magic_function on <idList_ex>
55
Line no. 10 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 10 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 10 Calling magic_function on COLON
0
Line no. 10 Calling magic_function on BOOLEAN
0
Line no. 10 Calling magic_function on <dataType>
19
Line no. 10 Calling magic_function on SEMICOL
0
Line no. 10 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 10 Calling magic_function on <statement>
29
Line no. 11 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:1 Offset:0
Line no. 11 Calling magic_function on ASSIGNOP
0
Line no. 11 Calling magic_function on RNUM
0
Creating leaf for 0.0 whose type is 2
Line no. 11 Calling magic_function on <var>
36
Line no. 11 Calling magic_function on <factor>
83
Line no. 11 Calling magic_function on e
0
Line no. 11 Calling magic_function on <N5>
82
Line no. 11 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 11 Calling magic_function on e
0
Line no. 11 Calling magic_function on <N4>
79
Line no. 11 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 11 Calling magic_function on e
0
Line no. 11 Calling magic_function on <WithRelOp>
69
Line no. 11 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 11 Calling magic_function on e
0
Line no. 11 Calling magic_function on <WithLogOp>
64
Line no. 11 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 11 Calling magic_function on <expression>
56
Line no. 11 Calling magic_function on SEMICOL
0
Line no. 11 Calling magic_function on <lvalueIDStmt>
46
Line no. 11 Calling magic_function on <whichStmt>
44
Line no. 11 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 11 Calling magic_function on <simpleStmt>
41
Line no. 11 Calling magic_function on <statement>
28
Line no. 12 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:1 Offset:0
Line no. 12 Calling magic_function on ASSIGNOP
0
Line no. 12 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:1 Offset:0
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <whichId>
40
Line no. 12 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 12 Calling magic_function on <factor>
83
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <N5>
82
Line no. 12 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <N4>
79
Line no. 12 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 12 Calling magic_function on GE
0
Line no. 12 Calling magic_function on <relationalOp>
93
Creating leaf for >= whose type is 3
Line no. 12 Calling magic_function on RNUM
0
Creating leaf for 20.0 whose type is 2
Line no. 12 Calling magic_function on <var>
36
Line no. 12 Calling magic_function on <factor>
83
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <N5>
82
Line no. 12 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <N4>
79
Line no. 12 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 12 Calling magic_function on <BorNBAE>
61
Line no. 12 Calling magic_function on <negOrPosAE>
59
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <WithRelOp>
69
Line no. 12 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 12 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 12 Calling magic_function on e
0
Line no. 12 Calling magic_function on <WithLogOp>
64
Line no. 12 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 12 Calling magic_function on <expression>
56
Line no. 12 Calling magic_function on SEMICOL
0
Line no. 12 Calling magic_function on <lvalueIDStmt>
46
Line no. 12 Calling magic_function on <whichStmt>
44
Line no. 12 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 12 Calling magic_function on <simpleStmt>
41
Line no. 12 Calling magic_function on <statement>
28
Line no. 13 Calling magic_function on WHILE
0
Line no. 13 Calling magic_function on BO
0
Line no. 13 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:1 Offset:0
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <whichId>
40
Line no. 13 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 13 Calling magic_function on <factor>
83
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N5>
82
Line no. 13 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N4>
79
Line no. 13 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 13 Calling magic_function on GE
0
Line no. 13 Calling magic_function on <relationalOp>
93
Creating leaf for >= whose type is 3
Line no. 13 Calling magic_function on RNUM
0
Creating leaf for 12.8 whose type is 2
Line no. 13 Calling magic_function on <var>
36
Line no. 13 Calling magic_function on <factor>
83
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N5>
82
Line no. 13 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N4>
79
Line no. 13 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 13 Calling magic_function on <BorNBAE>
61
Line no. 13 Calling magic_function on <negOrPosAE>
59
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <WithRelOp>
69
Line no. 13 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 13 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 13 Calling magic_function on AND
0
Line no. 13 Calling magic_function on <logicalOp>
88
Creating leaf for AND whose type is 3
Line no. 13 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:1 Offset:0
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <whichId>
40
Line no. 13 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 13 Calling magic_function on <factor>
83
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N5>
82
Line no. 13 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <N4>
79
Line no. 13 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <WithRelOp>
69
Line no. 13 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 13 Calling magic_function on <AnyTerm2>
67
Line no. 13 Calling magic_function on e
0
Line no. 13 Calling magic_function on <WithLogOp>
64
Line no. 13 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 13 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 13 Calling magic_function on BC
0
Line no. 14 Calling magic_function on START
0
Line no. 15 Calling magic_function on DECLARE
0
Line no. 15 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for p whose type is 1
Nesting:2 Offset:0
Line no. 15 Calling magic_function on COMMA
0
Line no. 15 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for q whose type is 1
Nesting:2 Offset:0
Line no. 15 Calling magic_function on COMMA
0
Line no. 15 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for r whose type is 1
Nesting:2 Offset:0
Line no. 15 Calling magic_function on e
0
Line no. 15 Calling magic_function on <idList_ex>
55
Line no. 15 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 15 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 15 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 15 Calling magic_function on COLON
0
Line no. 15 Calling magic_function on ARRAY
0
Line no. 15 Calling magic_function on SQBO
0
Line no. 15 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 15 Calling magic_function on RANGEOP
0
Line no. 15 Calling magic_function on NUM
0
Creating leaf for 12 whose type is 2
Line no. 15 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 12 whose type is 2
Line no. 15 Calling magic_function on SQBC
0
Line no. 15 Calling magic_function on OF
0
Line no. 15 Calling magic_function on BOOLEAN
0
Line no. 15 Calling magic_function on <type>
23
Line no. 15 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 15 Calling magic_function on SEMICOL
0
Line no. 15 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 15 Calling magic_function on <statement>
29
Line no. 16 Calling magic_function on DECLARE
0
Line no. 16 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for newarr whose type is 1
Nesting:2 Offset:0
Line no. 16 Calling magic_function on e
0
Line no. 16 Calling magic_function on <idList_ex>
55
Line no. 16 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 16 Calling magic_function on COLON
0
Line no. 16 Calling magic_function on ARRAY
0
Line no. 16 Calling magic_function on SQBO
0
Line no. 16 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 16 Calling magic_function on RANGEOP
0
Line no. 16 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 16 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 15 whose type is 2
Line no. 16 Calling magic_function on SQBC
0
Line no. 16 Calling magic_function on OF
0
Line no. 16 Calling magic_function on REAL
0
Line no. 16 Calling magic_function on <type>
22
Line no. 16 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 16 Calling magic_function on SEMICOL
0
Line no. 16 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 16 Calling magic_function on <statement>
29
Line no. 17 Calling magic_function on DECLARE
0
Line no. 17 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for u whose type is 1
Nesting:2 Offset:0
Line no. 17 Calling magic_function on COMMA
0
Line no. 17 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 17 Calling magic_function on e
0
Line no. 17 Calling magic_function on <idList_ex>
55
Line no. 17 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 17 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 17 Calling magic_function on COLON
0
Line no. 17 Calling magic_function on BOOLEAN
0
Line no. 17 Calling magic_function on <dataType>
19
Line no. 17 Calling magic_function on SEMICOL
0
Line no. 17 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 17 Calling magic_function on <statement>
29
Line no. 18 Calling magic_function on WHILE
0
Line no. 18 Calling magic_function on BO
0
Line no. 18 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <whichId>
40
Line no. 18 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 18 Calling magic_function on <factor>
83
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N5>
82
Line no. 18 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 18 Calling magic_function on MINUS
0
Line no. 18 Calling magic_function on <op1>
85
Creating leaf for - whose type is 3
Line no. 18 Calling magic_function on RNUM
0
Creating leaf for 3.0 whose type is 2
Line no. 18 Calling magic_function on <var>
36
Line no. 18 Calling magic_function on <factor>
83
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N5>
82
Line no. 18 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N4>
79
Line no. 18 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 18 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <WithRelOp>
69
Line no. 18 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 18 Calling magic_function on OR
0
Line no. 18 Calling magic_function on <logicalOp>
89
Creating leaf for OR whose type is 3
Line no. 18 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <whichId>
40
Line no. 18 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 18 Calling magic_function on <factor>
83
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N5>
82
Line no. 18 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N4>
79
Line no. 18 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 18 Calling magic_function on LE
0
Line no. 18 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 18 Calling magic_function on RNUM
0
Creating leaf for 20.3 whose type is 2
Line no. 18 Calling magic_function on <var>
36
Line no. 18 Calling magic_function on <factor>
83
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N5>
82
Line no. 18 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <N4>
79
Line no. 18 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 18 Calling magic_function on <BorNBAE>
61
Line no. 18 Calling magic_function on <negOrPosAE>
59
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <WithRelOp>
69
Line no. 18 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 18 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 18 Calling magic_function on <AnyTerm2>
67
Line no. 18 Calling magic_function on e
0
Line no. 18 Calling magic_function on <WithLogOp>
64
Line no. 18 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 18 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 18 Calling magic_function on BC
0
Line no. 19 Calling magic_function on START
0
Line no. 20 Calling magic_function on DECLARE
0
Line no. 20 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for x whose type is 1
Nesting:3 Offset:0
Line no. 20 Calling magic_function on COMMA
0
Line no. 20 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for y whose type is 1
Nesting:3 Offset:0
Line no. 20 Calling magic_function on e
0
Line no. 20 Calling magic_function on <idList_ex>
55
Line no. 20 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 20 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 20 Calling magic_function on COLON
0
Line no. 20 Calling magic_function on INTEGER
0
Line no. 20 Calling magic_function on <dataType>
17
Line no. 20 Calling magic_function on SEMICOL
0
Line no. 20 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 20 Calling magic_function on <statement>
29
Line no. 21 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for x whose type is 1
Nesting:3 Offset:0
Line no. 21 Calling magic_function on ASSIGNOP
0
Line no. 21 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for y whose type is 1
Nesting:3 Offset:0
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <whichId>
40
Line no. 21 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 21 Calling magic_function on <factor>
83
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <N5>
82
Line no. 21 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 21 Calling magic_function on PLUS
0
Line no. 21 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 21 Calling magic_function on NUM
0
Creating leaf for 3 whose type is 2
Line no. 21 Calling magic_function on <var>
35
Line no. 21 Calling magic_function on <factor>
83
Line no. 21 Calling magic_function on MUL
0
Line no. 21 Calling magic_function on <op2>
86
Creating leaf for * whose type is 3
Line no. 21 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <whichId>
40
Line no. 21 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 21 Calling magic_function on <factor>
83
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <N5>
82
Line no. 21 Calling magic_function on <N5>
81
type_check called on node <N5> with rule no 81
here INTEGER
After type check
Creating ast node for <N5>
 with count 3
Line no. 21 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 21 Calling magic_function on MINUS
0
Line no. 21 Calling magic_function on <op1>
85
Creating leaf for - whose type is 3
Line no. 21 Calling magic_function on NUM
0
Creating leaf for 32 whose type is 2
Line no. 21 Calling magic_function on <var>
35
Line no. 21 Calling magic_function on <factor>
83
Line no. 21 Calling magic_function on MUL
0
Line no. 21 Calling magic_function on <op2>
86
Creating leaf for * whose type is 3
Line no. 21 Calling magic_function on NUM
0
Creating leaf for 5 whose type is 2
Line no. 21 Calling magic_function on <var>
35
Line no. 21 Calling magic_function on <factor>
83
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <N5>
82
Line no. 21 Calling magic_function on <N5>
81
type_check called on node <N5> with rule no 81
here INTEGER
After type check
Creating ast node for <N5>
 with count 3
Line no. 21 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <N4>
79
Line no. 21 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 21 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 21 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <WithRelOp>
69
Line no. 21 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 21 Calling magic_function on e
0
Line no. 21 Calling magic_function on <WithLogOp>
64
Line no. 21 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 21 Calling magic_function on <expression>
56
Line no. 21 Calling magic_function on SEMICOL
0
Line no. 21 Calling magic_function on <lvalueIDStmt>
46
Line no. 21 Calling magic_function on <whichStmt>
44
Line no. 21 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 21 Calling magic_function on <simpleStmt>
41
Line no. 21 Calling magic_function on <statement>
28
Line no. 22 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 22 Calling magic_function on ASSIGNOP
0
Line no. 22 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Creating leaf for p whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <whichId>
40
Line no. 22 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 22 Calling magic_function on <factor>
83
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <N5>
82
Line no. 22 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 22 Calling magic_function on PLUS
0
Line no. 22 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 22 Calling magic_function on RNUM
0
Creating leaf for 23.5 whose type is 2
Line no. 22 Calling magic_function on <var>
36
Line no. 22 Calling magic_function on <factor>
83
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <N5>
82
Line no. 22 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <N4>
79
Line no. 22 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 22 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <WithRelOp>
69
Line no. 22 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 22 Calling magic_function on e
0
Line no. 22 Calling magic_function on <WithLogOp>
64
Line no. 22 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 22 Calling magic_function on <expression>
56
Line no. 22 Calling magic_function on SEMICOL
0
Line no. 22 Calling magic_function on <lvalueIDStmt>
46
Line no. 22 Calling magic_function on <whichStmt>
44
Line no. 22 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 22 Calling magic_function on <simpleStmt>
41
Line no. 22 Calling magic_function on <statement>
28
Line no. 23 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 23 Calling magic_function on ASSIGNOP
0
Line no. 23 Calling magic_function on TRUE
0
Creating leaf for true whose type is 4
Line no. 23 Calling magic_function on <var>
37
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N4>
79
Line no. 23 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <WithRelOp>
69
Line no. 23 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 23 Calling magic_function on OR
0
Line no. 23 Calling magic_function on <logicalOp>
89
Creating leaf for OR whose type is 3
Line no. 23 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for y whose type is 1
Nesting:3 Offset:0
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <whichId>
40
Line no. 23 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 23 Calling magic_function on PLUS
0
Line no. 23 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 23 Calling magic_function on NUM
0
Creating leaf for 23 whose type is 2
Line no. 23 Calling magic_function on <var>
35
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N4>
79
Line no. 23 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 23 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 23 Calling magic_function on GE
0
Line no. 23 Calling magic_function on <relationalOp>
93
Creating leaf for >= whose type is 3
Line no. 23 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Creating leaf for x whose type is 1
Nesting:3 Offset:0
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <whichId>
40
Line no. 23 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N4>
79
Line no. 23 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 23 Calling magic_function on <BorNBAE>
61
Line no. 23 Calling magic_function on <negOrPosAE>
59
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <WithRelOp>
69
Line no. 23 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 23 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 23 Calling magic_function on <AnyTerm2>
67
Line no. 23 Calling magic_function on AND
0
Line no. 23 Calling magic_function on <logicalOp>
88
Creating leaf for AND whose type is 3
Line no. 23 Calling magic_function on RNUM
0
Creating leaf for 23.5 whose type is 2
Line no. 23 Calling magic_function on <var>
36
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N4>
79
Line no. 23 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 23 Calling magic_function on LE
0
Line no. 23 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 23 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Creating leaf for newarr whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Line no. 23 Calling magic_function on SQBO
0
Line no. 23 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:0
Nesting:3 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:3 Offset:0
Nesting:2 Offset:0
Line no. 23 Calling magic_function on SQBC
0
Line no. 23 Calling magic_function on <whichId>
39
Line no. 23 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 23 Calling magic_function on <factor>
83
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N5>
82
Line no. 23 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <N4>
79
Line no. 23 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 23 Calling magic_function on <BorNBAE>
61
Line no. 23 Calling magic_function on <negOrPosAE>
59
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <WithRelOp>
69
Line no. 23 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 23 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 23 Calling magic_function on <AnyTerm2>
67
Line no. 23 Calling magic_function on e
0
Line no. 23 Calling magic_function on <WithLogOp>
64
Line no. 23 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 23 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 23 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 23 Calling magic_function on <expression>
56
Line no. 23 Calling magic_function on SEMICOL
0
Line no. 23 Calling magic_function on <lvalueIDStmt>
46
Line no. 23 Calling magic_function on <whichStmt>
44
Line no. 23 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 23 Calling magic_function on <simpleStmt>
41
Line no. 23 Calling magic_function on <statement>
28
Line no. 24 Calling magic_function on e
0
Line no. 23 Calling magic_function on <statements>
26
Line no. 22 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 21 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 20 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 18 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 24 Calling magic_function on END
0
Line no. 18 Calling magic_function on <iterativeStmt>
107
type_check called on node <iterativeStmt> with rule no 107
After type check
Creating ast node for <iterativeStmt>
 with count 2
Line no. 18 Calling magic_function on <statement>
31
Line no. 25 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 25 Calling magic_function on ASSIGNOP
0
Line no. 25 Calling magic_function on NUM
0
Creating leaf for 34 whose type is 2
Line no. 25 Calling magic_function on <var>
35
Line no. 25 Calling magic_function on <factor>
83
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <N5>
82
Line no. 25 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 25 Calling magic_function on MINUS
0
Line no. 25 Calling magic_function on <op1>
85
Creating leaf for - whose type is 3
Line no. 25 Calling magic_function on NUM
0
Creating leaf for 20 whose type is 2
Line no. 25 Calling magic_function on <var>
35
Line no. 25 Calling magic_function on <factor>
83
Line no. 25 Calling magic_function on MUL
0
Line no. 25 Calling magic_function on <op2>
86
Creating leaf for * whose type is 3
Line no. 25 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <whichId>
40
Line no. 25 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 25 Calling magic_function on <factor>
83
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <N5>
82
Line no. 25 Calling magic_function on <N5>
81
type_check called on node <N5> with rule no 81
here INTEGER
After type check
Creating ast node for <N5>
 with count 3
Line no. 25 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 25 Calling magic_function on PLUS
0
Line no. 25 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 25 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for x whose type is 1
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <whichId>
40
Line no. 25 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 25 Calling magic_function on <factor>
83
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <N5>
82
Line no. 25 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be DUMMY
Line no. 25 Calling magic_function on MINUS
0
Line no. 25 Calling magic_function on <op1>
85
Creating leaf for - whose type is 3
Line no. 25 Calling magic_function on NUM
0
Creating leaf for 12 whose type is 2
Line no. 25 Calling magic_function on <var>
35
Line no. 25 Calling magic_function on <factor>
83
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <N5>
82
Line no. 25 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <N4>
79
Line no. 25 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 25 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here DUMMY
After type check
Creating ast node for <N4>
 with count 3
Line no. 25 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 25 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <WithRelOp>
69
Line no. 25 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 25 Calling magic_function on e
0
Line no. 25 Calling magic_function on <WithLogOp>
64
Line no. 25 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 25 Calling magic_function on <expression>
56
Line no. 25 Calling magic_function on SEMICOL
0
Line no. 25 Calling magic_function on <lvalueIDStmt>
46
Line no. 25 Calling magic_function on <whichStmt>
44
Line no. 25 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 25 Calling magic_function on <simpleStmt>
41
Line no. 25 Calling magic_function on <statement>
28
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for r whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on SQBO
0
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on <index>
49
Line no. 26 Calling magic_function on SQBC
0
Line no. 26 Calling magic_function on ASSIGNOP
0
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for p whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on SQBO
0
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on SQBC
0
Line no. 26 Calling magic_function on <whichId>
39
Line no. 26 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 26 Calling magic_function on <factor>
83
Line no. 26 Calling magic_function on e
0
Line no. 26 Calling magic_function on <N5>
82
Line no. 26 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 26 Calling magic_function on PLUS
0
Line no. 26 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for q whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on SQBO
0
Line no. 26 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 26 Calling magic_function on SQBC
0
Line no. 26 Calling magic_function on <whichId>
39
Line no. 26 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 26 Calling magic_function on <factor>
83
Line no. 26 Calling magic_function on e
0
Line no. 26 Calling magic_function on <N5>
82
Line no. 26 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 26 Calling magic_function on e
0
Line no. 26 Calling magic_function on <N4>
79
Line no. 26 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here BOOLEAN
Type Error in line 26: BOOLEAN type var invalid here
After type check
Creating ast node for <N4>
 with count 3
Line no. 26 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 26 Calling magic_function on e
0
Line no. 26 Calling magic_function on <WithRelOp>
69
Line no. 26 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 26 Calling magic_function on e
0
Line no. 26 Calling magic_function on <WithLogOp>
64
Line no. 26 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 26 Calling magic_function on <expression>
56
Line no. 26 Calling magic_function on SEMICOL
0
Line no. 26 Calling magic_function on <lvalueARRStmt>
47
Creating ast node for <lvalueARRStmt>
 with count 2
Line no. 26 Calling magic_function on <whichStmt>
45
Line no. 26 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 26 Calling magic_function on <simpleStmt>
41
Line no. 26 Calling magic_function on <statement>
28
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for r whose type is 1
Nesting:2 Offset:0
Line no. 27 Calling magic_function on SQBO
0
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 27 Calling magic_function on <index>
49
Line no. 27 Calling magic_function on SQBC
0
Line no. 27 Calling magic_function on ASSIGNOP
0
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for p whose type is 1
Nesting:2 Offset:0
Line no. 27 Calling magic_function on SQBO
0
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 27 Calling magic_function on SQBC
0
Line no. 27 Calling magic_function on <whichId>
39
Line no. 27 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 27 Calling magic_function on <factor>
83
Line no. 27 Calling magic_function on e
0
Line no. 27 Calling magic_function on <N5>
82
Line no. 27 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 27 Calling magic_function on PLUS
0
Line no. 27 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 27 Calling magic_function on SQBO
0
Line no. 27 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 27 Calling magic_function on SQBC
0
Line no. 27 Calling magic_function on <whichId>
39
Line no. 27 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 27 Calling magic_function on <factor>
83
Line no. 27 Calling magic_function on e
0
Line no. 27 Calling magic_function on <N5>
82
Line no. 27 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 27 Calling magic_function on e
0
Line no. 27 Calling magic_function on <N4>
79
Line no. 27 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 27 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 27 Calling magic_function on e
0
Line no. 27 Calling magic_function on <WithRelOp>
69
Line no. 27 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 27 Calling magic_function on e
0
Line no. 27 Calling magic_function on <WithLogOp>
64
Line no. 27 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 27 Calling magic_function on <expression>
56
Line no. 27 Calling magic_function on SEMICOL
0
Line no. 27 Calling magic_function on <lvalueARRStmt>
47
Creating ast node for <lvalueARRStmt>
 with count 2
Line no. 27 Calling magic_function on <whichStmt>
45
Line no. 27 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 27 Calling magic_function on <simpleStmt>
41
Line no. 27 Calling magic_function on <statement>
28
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for newarr whose type is 1
Nesting:2 Offset:0
Line no. 28 Calling magic_function on SQBO
0
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 28 Calling magic_function on <index>
49
Line no. 28 Calling magic_function on SQBC
0
Line no. 28 Calling magic_function on ASSIGNOP
0
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 28 Calling magic_function on SQBO
0
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 28 Calling magic_function on SQBC
0
Line no. 28 Calling magic_function on <whichId>
39
Line no. 28 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 28 Calling magic_function on <factor>
83
Line no. 28 Calling magic_function on e
0
Line no. 28 Calling magic_function on <N5>
82
Line no. 28 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 28 Calling magic_function on PLUS
0
Line no. 28 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 28 Calling magic_function on SQBO
0
Line no. 28 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 28 Calling magic_function on SQBC
0
Line no. 28 Calling magic_function on <whichId>
39
Line no. 28 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 28 Calling magic_function on <factor>
83
Line no. 28 Calling magic_function on e
0
Line no. 28 Calling magic_function on <N5>
82
Line no. 28 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 28 Calling magic_function on e
0
Line no. 28 Calling magic_function on <N4>
79
Line no. 28 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 28 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 28 Calling magic_function on e
0
Line no. 28 Calling magic_function on <WithRelOp>
69
Line no. 28 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 28 Calling magic_function on e
0
Line no. 28 Calling magic_function on <WithLogOp>
64
Line no. 28 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 28 Calling magic_function on <expression>
56
Line no. 28 Calling magic_function on SEMICOL
0
Line no. 28 Calling magic_function on <lvalueARRStmt>
47
Creating ast node for <lvalueARRStmt>
 with count 2
Line no. 28 Calling magic_function on <whichStmt>
45
Line no. 28 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 28 Calling magic_function on <simpleStmt>
41
Line no. 28 Calling magic_function on <statement>
28
Line no. 29 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 29 Calling magic_function on ASSIGNOP
0
Line no. 29 Calling magic_function on FALSE
0
Creating leaf for false whose type is 4
Line no. 29 Calling magic_function on <var>
38
Line no. 29 Calling magic_function on <factor>
83
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N5>
82
Line no. 29 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N4>
79
Line no. 29 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <WithRelOp>
69
Line no. 29 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 29 Calling magic_function on AND
0
Line no. 29 Calling magic_function on <logicalOp>
88
Creating leaf for AND whose type is 3
Line no. 29 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 29 Calling magic_function on SQBO
0
Line no. 29 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 29 Calling magic_function on SQBC
0
Line no. 29 Calling magic_function on <whichId>
39
Line no. 29 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 29 Calling magic_function on <factor>
83
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N5>
82
Line no. 29 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 29 Calling magic_function on PLUS
0
Line no. 29 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 29 Calling magic_function on RNUM
0
Creating leaf for 34.5 whose type is 2
Line no. 29 Calling magic_function on <var>
36
Line no. 29 Calling magic_function on <factor>
83
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N5>
82
Line no. 29 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N4>
79
Line no. 29 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 29 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 29 Calling magic_function on LE
0
Line no. 29 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 29 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for newarr whose type is 1
Nesting:2 Offset:0
Line no. 29 Calling magic_function on SQBO
0
Line no. 29 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 29 Calling magic_function on SQBC
0
Line no. 29 Calling magic_function on <whichId>
39
Line no. 29 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 29 Calling magic_function on <factor>
83
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N5>
82
Line no. 29 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <N4>
79
Line no. 29 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 29 Calling magic_function on <BorNBAE>
61
Line no. 29 Calling magic_function on <negOrPosAE>
59
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <WithRelOp>
69
Line no. 29 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 29 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 29 Calling magic_function on <AnyTerm2>
67
Line no. 29 Calling magic_function on e
0
Line no. 29 Calling magic_function on <WithLogOp>
64
Line no. 29 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 29 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 29 Calling magic_function on <expression>
56
Line no. 29 Calling magic_function on SEMICOL
0
Line no. 29 Calling magic_function on <lvalueIDStmt>
46
Line no. 29 Calling magic_function on <whichStmt>
44
Line no. 29 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 29 Calling magic_function on <simpleStmt>
41
Line no. 29 Calling magic_function on <statement>
28
Line no. 30 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for a whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 30 Calling magic_function on ASSIGNOP
0
Line no. 30 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <whichId>
40
Line no. 30 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 30 Calling magic_function on <factor>
83
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <N5>
82
Line no. 30 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <N4>
79
Line no. 30 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <WithRelOp>
69
Line no. 30 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 30 Calling magic_function on AND
0
Line no. 30 Calling magic_function on <logicalOp>
88
Creating leaf for AND whose type is 3
Line no. 30 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 30 Calling magic_function on SQBO
0
Line no. 30 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for v whose type is 1
Nesting:2 Offset:0
Line no. 30 Calling magic_function on SQBC
0
Line no. 30 Calling magic_function on <whichId>
39
Line no. 30 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 30 Calling magic_function on <factor>
83
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <N5>
82
Line no. 30 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 30 Calling magic_function on PLUS
0
Line no. 30 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 30 Calling magic_function on RNUM
0
Creating leaf for 5.3 whose type is 2
Line no. 30 Calling magic_function on <var>
36
Line no. 30 Calling magic_function on <factor>
83
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <N5>
82
Line no. 30 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <N4>
79
Line no. 30 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 30 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <WithRelOp>
69
Line no. 30 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 30 Calling magic_function on <AnyTerm2>
67
Line no. 30 Calling magic_function on e
0
Line no. 30 Calling magic_function on <WithLogOp>
64
Line no. 30 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
Type Error in line 30: Expecting BOOLEAN type expression here
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 30 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 30 Calling magic_function on <expression>
56
Line no. 30 Calling magic_function on SEMICOL
0
Line no. 30 Calling magic_function on <lvalueIDStmt>
46
Line no. 30 Calling magic_function on <whichStmt>
44
Line no. 30 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 30 Calling magic_function on <simpleStmt>
41
Line no. 30 Calling magic_function on <statement>
28
Line no. 31 Calling magic_function on e
0
Line no. 30 Calling magic_function on <statements>
26
Line no. 29 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 28 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 27 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 26 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 25 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 18 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 17 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 16 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 15 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 13 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 31 Calling magic_function on END
0
Line no. 13 Calling magic_function on <iterativeStmt>
107
type_check called on node <iterativeStmt> with rule no 107
After type check
Creating ast node for <iterativeStmt>
 with count 2
Line no. 13 Calling magic_function on <statement>
31
Line no. 32 Calling magic_function on FOR
0
Line no. 32 Calling magic_function on BO
0
Line no. 32 Calling magic_function on ID
0
Function hash:35 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:1 Offset:0
Line no. 32 Calling magic_function on IN
0
Line no. 32 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 32 Calling magic_function on RANGEOP
0
Line no. 32 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 32 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 15 whose type is 2
Line no. 32 Calling magic_function on BC
0
Line no. 33 Calling magic_function on START
0
Line no. 34 Calling magic_function on DECLARE
0
Line no. 34 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for y_1 whose type is 1
Nesting:2 Offset:1
Line no. 34 Calling magic_function on COMMA
0
Line no. 34 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for y_2 whose type is 1
Nesting:2 Offset:1
Line no. 34 Calling magic_function on e
0
Line no. 34 Calling magic_function on <idList_ex>
55
Line no. 34 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 34 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 34 Calling magic_function on COLON
0
Line no. 34 Calling magic_function on REAL
0
Line no. 34 Calling magic_function on <dataType>
18
Line no. 34 Calling magic_function on SEMICOL
0
Line no. 34 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 34 Calling magic_function on <statement>
29
Line no. 35 Calling magic_function on DECLARE
0
Line no. 35 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for k whose type is 1
Nesting:2 Offset:1
Line no. 35 Calling magic_function on COMMA
0
Line no. 35 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for l whose type is 1
Nesting:2 Offset:1
Line no. 35 Calling magic_function on COMMA
0
Line no. 35 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for m whose type is 1
Nesting:2 Offset:1
Line no. 35 Calling magic_function on e
0
Line no. 35 Calling magic_function on <idList_ex>
55
Line no. 35 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 35 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 35 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 35 Calling magic_function on COLON
0
Line no. 35 Calling magic_function on ARRAY
0
Line no. 35 Calling magic_function on SQBO
0
Line no. 35 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 35 Calling magic_function on RANGEOP
0
Line no. 35 Calling magic_function on NUM
0
Creating leaf for 10 whose type is 2
Line no. 35 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 10 whose type is 2
Line no. 35 Calling magic_function on SQBC
0
Line no. 35 Calling magic_function on OF
0
Line no. 35 Calling magic_function on REAL
0
Line no. 35 Calling magic_function on <type>
22
Line no. 35 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 35 Calling magic_function on SEMICOL
0
Line no. 35 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 35 Calling magic_function on <statement>
29
Line no. 36 Calling magic_function on DECLARE
0
Line no. 36 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Creating leaf for x whose type is 1
Nesting:2 Offset:1
Line no. 36 Calling magic_function on e
0
Line no. 36 Calling magic_function on <idList_ex>
55
Line no. 36 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 36 Calling magic_function on COLON
0
Line no. 36 Calling magic_function on REAL
0
Line no. 36 Calling magic_function on <dataType>
18
Line no. 36 Calling magic_function on SEMICOL
0
Line no. 36 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 36 Calling magic_function on <statement>
29
Line no. 37 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 37 Calling magic_function on ASSIGNOP
0
Line no. 37 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <whichId>
40
Line no. 37 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 37 Calling magic_function on <factor>
83
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <N5>
82
Line no. 37 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <N4>
79
Line no. 37 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 37 Calling magic_function on LE
0
Line no. 37 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 37 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for n whose type is 1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <whichId>
40
Line no. 37 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 37 Calling magic_function on <factor>
83
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <N5>
82
Line no. 37 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <N4>
79
Line no. 37 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 37 Calling magic_function on <BorNBAE>
61
Line no. 37 Calling magic_function on <negOrPosAE>
59
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <WithRelOp>
69
Line no. 37 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 37 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 37 Calling magic_function on e
0
Line no. 37 Calling magic_function on <WithLogOp>
64
Line no. 37 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 37 Calling magic_function on <expression>
56
Line no. 37 Calling magic_function on SEMICOL
0
Line no. 37 Calling magic_function on <lvalueIDStmt>
46
Line no. 37 Calling magic_function on <whichStmt>
44
Line no. 37 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 37 Calling magic_function on <simpleStmt>
41
Line no. 37 Calling magic_function on <statement>
28
Line no. 38 Calling magic_function on SWITCH
0
Line no. 38 Calling magic_function on BO
0
Line no. 38 Calling magic_function on ID
0
Function hash:35 Nest:2 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for t whose type is 1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 38 Calling magic_function on BC
0
Line no. 39 Calling magic_function on START
0
Line no. 40 Calling magic_function on CASE
0
Line no. 40 Calling magic_function on TRUE
0
Creating leaf for true whose type is 4
Line no. 40 Calling magic_function on <value>
102
Line no. 40 Calling magic_function on COLON
0
Line no. 40 Calling magic_function on PRINT
0
Line no. 40 Calling magic_function on BO
0
Line no. 40 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 40 Calling magic_function on SQBO
0
Line no. 40 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 40 Calling magic_function on SQBC
0
Line no. 40 Calling magic_function on <whichId>
39
Line no. 40 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 40 Calling magic_function on BC
0
Line no. 40 Calling magic_function on SEMICOL
0
Line no. 40 Calling magic_function on <ioStmt>
33
Line no. 40 Calling magic_function on <statement>
27
Line no. 41 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Creating leaf for m whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Line no. 41 Calling magic_function on SQBO
0
Line no. 41 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for j whose type is 1
Line no. 41 Calling magic_function on <index>
49
Line no. 41 Calling magic_function on SQBC
0
Line no. 41 Calling magic_function on ASSIGNOP
0
Line no. 41 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Creating leaf for k whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Line no. 41 Calling magic_function on SQBO
0
Line no. 41 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for j whose type is 1
Line no. 41 Calling magic_function on SQBC
0
Line no. 41 Calling magic_function on <whichId>
39
Line no. 41 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 41 Calling magic_function on <factor>
83
Line no. 41 Calling magic_function on e
0
Line no. 41 Calling magic_function on <N5>
82
Line no. 41 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 41 Calling magic_function on PLUS
0
Line no. 41 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 41 Calling magic_function on RNUM
0
Creating leaf for 34.5 whose type is 2
Line no. 41 Calling magic_function on <var>
36
Line no. 41 Calling magic_function on <factor>
83
Line no. 41 Calling magic_function on e
0
Line no. 41 Calling magic_function on <N5>
82
Line no. 41 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 41 Calling magic_function on e
0
Line no. 41 Calling magic_function on <N4>
79
Line no. 41 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 41 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 41 Calling magic_function on e
0
Line no. 41 Calling magic_function on <WithRelOp>
69
Line no. 41 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 41 Calling magic_function on e
0
Line no. 41 Calling magic_function on <WithLogOp>
64
Line no. 41 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 41 Calling magic_function on <expression>
56
Line no. 41 Calling magic_function on SEMICOL
0
Line no. 41 Calling magic_function on <lvalueARRStmt>
47
Creating ast node for <lvalueARRStmt>
 with count 2
Line no. 41 Calling magic_function on <whichStmt>
45
Line no. 41 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 41 Calling magic_function on <simpleStmt>
41
Line no. 41 Calling magic_function on <statement>
28
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 42 Calling magic_function on ASSIGNOP
0
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <whichId>
40
Line no. 42 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 42 Calling magic_function on <factor>
83
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <N5>
82
Line no. 42 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 42 Calling magic_function on PLUS
0
Line no. 42 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for list whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 42 Calling magic_function on SQBO
0
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 42 Calling magic_function on SQBC
0
Line no. 42 Calling magic_function on <whichId>
39
Line no. 42 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 42 Calling magic_function on <factor>
83
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <N5>
82
Line no. 42 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 42 Calling magic_function on PLUS
0
Line no. 42 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Creating leaf for k whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Line no. 42 Calling magic_function on SQBO
0
Line no. 42 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 42 Calling magic_function on SQBC
0
Line no. 42 Calling magic_function on <whichId>
39
Line no. 42 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 42 Calling magic_function on <factor>
83
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <N5>
82
Line no. 42 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <N4>
79
Line no. 42 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 42 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 42 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <WithRelOp>
69
Line no. 42 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 42 Calling magic_function on e
0
Line no. 42 Calling magic_function on <WithLogOp>
64
Line no. 42 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 42 Calling magic_function on <expression>
56
Line no. 42 Calling magic_function on SEMICOL
0
Line no. 42 Calling magic_function on <lvalueIDStmt>
46
Line no. 42 Calling magic_function on <whichStmt>
44
Line no. 42 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 42 Calling magic_function on <simpleStmt>
41
Line no. 42 Calling magic_function on <statement>
28
Line no. 43 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for value whose type is 1
Line no. 43 Calling magic_function on ASSIGNOP
0
Line no. 43 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <whichId>
40
Line no. 43 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 43 Calling magic_function on <factor>
83
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <N5>
82
Line no. 43 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 43 Calling magic_function on PLUS
0
Line no. 43 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 43 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 43 Calling magic_function on <var>
35
Line no. 43 Calling magic_function on <factor>
83
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <N5>
82
Line no. 43 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <N4>
79
Line no. 43 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 43 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <WithRelOp>
69
Line no. 43 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 43 Calling magic_function on e
0
Line no. 43 Calling magic_function on <WithLogOp>
64
Line no. 43 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 43 Calling magic_function on <expression>
56
Line no. 43 Calling magic_function on SEMICOL
0
Line no. 43 Calling magic_function on <lvalueIDStmt>
46
Line no. 43 Calling magic_function on <whichStmt>
44
Line no. 43 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 43 Calling magic_function on <simpleStmt>
41
Line no. 43 Calling magic_function on <statement>
28
Line no. 44 Calling magic_function on DECLARE
0
Line no. 44 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_1 whose type is 1
Nesting:3 Offset:1
Line no. 44 Calling magic_function on COMMA
0
Line no. 44 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_2 whose type is 1
Nesting:3 Offset:1
Line no. 44 Calling magic_function on e
0
Line no. 44 Calling magic_function on <idList_ex>
55
Line no. 44 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 44 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 44 Calling magic_function on COLON
0
Line no. 44 Calling magic_function on INTEGER
0
Line no. 44 Calling magic_function on <dataType>
17
Line no. 44 Calling magic_function on SEMICOL
0
Line no. 44 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 44 Calling magic_function on <statement>
29
Line no. 45 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_1 whose type is 1
Nesting:3 Offset:1
Line no. 45 Calling magic_function on ASSIGNOP
0
Line no. 45 Calling magic_function on NUM
0
Creating leaf for 11 whose type is 2
Line no. 45 Calling magic_function on <var>
35
Line no. 45 Calling magic_function on <factor>
83
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <N5>
82
Line no. 45 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 45 Calling magic_function on PLUS
0
Line no. 45 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 45 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for index whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <whichId>
40
Line no. 45 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 45 Calling magic_function on <factor>
83
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <N5>
82
Line no. 45 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <N4>
79
Line no. 45 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 45 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <WithRelOp>
69
Line no. 45 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 45 Calling magic_function on e
0
Line no. 45 Calling magic_function on <WithLogOp>
64
Line no. 45 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 45 Calling magic_function on <expression>
56
Line no. 45 Calling magic_function on SEMICOL
0
Line no. 45 Calling magic_function on <lvalueIDStmt>
46
Line no. 45 Calling magic_function on <whichStmt>
44
Line no. 45 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 45 Calling magic_function on <simpleStmt>
41
Line no. 45 Calling magic_function on <statement>
28
Line no. 46 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_2 whose type is 1
Nesting:3 Offset:1
Line no. 46 Calling magic_function on ASSIGNOP
0
Line no. 46 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_1 whose type is 1
Nesting:3 Offset:1
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <whichId>
40
Line no. 46 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 46 Calling magic_function on <factor>
83
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <N5>
82
Line no. 46 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 46 Calling magic_function on PLUS
0
Line no. 46 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 46 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_2 whose type is 1
Nesting:3 Offset:1
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <whichId>
40
Line no. 46 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 46 Calling magic_function on <factor>
83
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <N5>
82
Line no. 46 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <N4>
79
Line no. 46 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 46 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <WithRelOp>
69
Line no. 46 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 46 Calling magic_function on e
0
Line no. 46 Calling magic_function on <WithLogOp>
64
Line no. 46 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 46 Calling magic_function on <expression>
56
Line no. 46 Calling magic_function on SEMICOL
0
Line no. 46 Calling magic_function on <lvalueIDStmt>
46
Line no. 46 Calling magic_function on <whichStmt>
44
Line no. 46 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 46 Calling magic_function on <simpleStmt>
41
Line no. 46 Calling magic_function on <statement>
28
Line no. 48 Calling magic_function on DECLARE
0
Line no. 48 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for u1 whose type is 1
Nesting:3 Offset:1
Line no. 48 Calling magic_function on COMMA
0
Line no. 48 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for u2 whose type is 1
Nesting:3 Offset:1
Line no. 48 Calling magic_function on e
0
Line no. 48 Calling magic_function on <idList_ex>
55
Line no. 48 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 48 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 48 Calling magic_function on COLON
0
Line no. 48 Calling magic_function on REAL
0
Line no. 48 Calling magic_function on <dataType>
18
Line no. 48 Calling magic_function on SEMICOL
0
Line no. 48 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 48 Calling magic_function on <statement>
29
Line no. 49 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for u2 whose type is 1
Nesting:3 Offset:1
Line no. 49 Calling magic_function on ASSIGNOP
0
Line no. 49 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for n whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <whichId>
40
Line no. 49 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 49 Calling magic_function on <factor>
83
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <N5>
82
Line no. 49 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 49 Calling magic_function on PLUS
0
Line no. 49 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 49 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for u1 whose type is 1
Nesting:3 Offset:1
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <whichId>
40
Line no. 49 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 49 Calling magic_function on <factor>
83
Line no. 49 Calling magic_function on MUL
0
Line no. 49 Calling magic_function on <op2>
86
Creating leaf for * whose type is 3
Line no. 49 Calling magic_function on RNUM
0
Creating leaf for 23.5 whose type is 2
Line no. 49 Calling magic_function on <var>
36
Line no. 49 Calling magic_function on <factor>
83
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <N5>
82
Line no. 49 Calling magic_function on <N5>
81
type_check called on node <N5> with rule no 81
here REAL
After type check
Creating ast node for <N5>
 with count 3
Line no. 49 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <N4>
79
Line no. 49 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here REAL
After type check
Creating ast node for <N4>
 with count 3
Line no. 49 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <WithRelOp>
69
Line no. 49 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 49 Calling magic_function on e
0
Line no. 49 Calling magic_function on <WithLogOp>
64
Line no. 49 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 49 Calling magic_function on <expression>
56
Line no. 49 Calling magic_function on SEMICOL
0
Line no. 49 Calling magic_function on <lvalueIDStmt>
46
Line no. 49 Calling magic_function on <whichStmt>
44
Line no. 49 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 49 Calling magic_function on <simpleStmt>
41
Line no. 49 Calling magic_function on <statement>
28
Line no. 50 Calling magic_function on e
0
Line no. 49 Calling magic_function on <statements>
26
Line no. 48 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 46 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 45 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 44 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 43 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 42 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 41 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 40 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 40 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 50 Calling magic_function on BREAK
0
Line no. 50 Calling magic_function on SEMICOL
0
Line no. 51 Calling magic_function on CASE
0
Line no. 51 Calling magic_function on FALSE
0
Creating leaf for false whose type is 4
Line no. 51 Calling magic_function on <value>
103
Line no. 51 Calling magic_function on COLON
0
Line no. 51 Calling magic_function on PRINT
0
Line no. 51 Calling magic_function on BO
0
Line no. 51 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Creating leaf for sum whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Nesting:1 Offset:0
Line no. 51 Calling magic_function on e
0
Line no. 51 Calling magic_function on <whichId>
40
Line no. 51 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 51 Calling magic_function on BC
0
Line no. 51 Calling magic_function on SEMICOL
0
Line no. 51 Calling magic_function on <ioStmt>
33
Line no. 51 Calling magic_function on <statement>
27
Line no. 52 Calling magic_function on DECLARE
0
Line no. 52 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for x whose type is 1
Line no. 52 Calling magic_function on COMMA
0
Line no. 52 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for u1 whose type is 1
Line no. 52 Calling magic_function on COMMA
0
Line no. 52 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Creating leaf for x_5 whose type is 1
Nesting:3 Offset:1
Line no. 52 Calling magic_function on e
0
Line no. 52 Calling magic_function on <idList_ex>
55
Line no. 52 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 52 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 52 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 52 Calling magic_function on COLON
0
Line no. 52 Calling magic_function on INTEGER
0
Line no. 52 Calling magic_function on <dataType>
17
Line no. 52 Calling magic_function on SEMICOL
0
Line no. 52 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 52 Calling magic_function on <statement>
29
Line no. 53 Calling magic_function on PRINT
0
Line no. 53 Calling magic_function on BO
0
Line no. 53 Calling magic_function on ID
0
Function hash:35 Nest:3 Offset:1
Nesting:3 Offset:1
Nesting:2 Offset:1
Creating leaf for y_1 whose type is 1
Nesting:3 Offset:1
Nesting:2 Offset:1
Line no. 53 Calling magic_function on e
0
Line no. 53 Calling magic_function on <whichId>
40
Line no. 53 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 53 Calling magic_function on BC
0
Line no. 53 Calling magic_function on SEMICOL
0
Line no. 53 Calling magic_function on <ioStmt>
33
Line no. 53 Calling magic_function on <statement>
27
Line no. 54 Calling magic_function on e
0
Line no. 53 Calling magic_function on <statements>
26
Line no. 52 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 51 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 51 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 54 Calling magic_function on BREAK
0
Line no. 54 Calling magic_function on SEMICOL
0
Line no. 55 Calling magic_function on e
0
Line no. 51 Calling magic_function on <MultiCase>
100
Line no. 40 Calling magic_function on <MultiCase>
99
type_check called on node <MultiCase> with rule no 99
After type check
Creating ast node for <MultiCase>
 with count 3
Line no. 38 Calling magic_function on <caseStmts>
98
type_check called on node <caseStmts> with rule no 98
After type check
Creating ast node for <caseStmts>
 with count 3
Line no. 55 Calling magic_function on e
0
Line no. 38 Calling magic_function on <default>
105
Line no. 55 Calling magic_function on END
0
Line no. 38 Calling magic_function on <condionalStmt>
97
type_check called on node <condionalStmt> with rule no 97
After type check
Creating ast node for <condionalStmt>
 with count 3
Line no. 38 Calling magic_function on <statement>
30
Line no. 56 Calling magic_function on e
0
Line no. 38 Calling magic_function on <statements>
26
Line no. 37 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 36 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 35 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 34 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 32 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 56 Calling magic_function on END
0
Line no. 32 Calling magic_function on <iterativeStmt>
106
Creating ast node for <iterativeStmt>
 with count 3
Line no. 32 Calling magic_function on <statement>
31
Line no. 57 Calling magic_function on PRINT
0
Line no. 57 Calling magic_function on BO
0
Line no. 57 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for x_2 whose type is 1
Line no. 57 Calling magic_function on e
0
Line no. 57 Calling magic_function on <whichId>
40
Line no. 57 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 57 Calling magic_function on BC
0
Line no. 57 Calling magic_function on SEMICOL
0
Line no. 57 Calling magic_function on <ioStmt>
33
Line no. 57 Calling magic_function on <statement>
27
Line no. 58 Calling magic_function on e
0
Line no. 57 Calling magic_function on <statements>
26
Line no. 32 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 13 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 12 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 11 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 10 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 9 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 8 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 58 Calling magic_function on END
0
Line no. 5 Calling magic_function on <moduleDef>
24
Line no. 5 Calling magic_function on <module>
8
Creating ast node for <module>
 with count 4
Line no. 59 Calling magic_function on e
0
Line no. 5 Calling magic_function on <otherModules>
6
Line no. 4 Calling magic_function on <otherModules>
5
Creating ast node for <otherModules>
 with count 2
Line no. 59 Calling magic_function on DRIVERDEF
0
Line no. 59 Calling magic_function on DRIVER
0
Line no. 59 Calling magic_function on PROGRAM
0
Line no. 59 Calling magic_function on DRIVERENDDEF
0
Line no. 60 Calling magic_function on START
0
Line no. 61 Calling magic_function on DECLARE
0
Line no. 61 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for A whose type is 1
Nesting:1 Offset:0
Line no. 61 Calling magic_function on e
0
Line no. 61 Calling magic_function on <idList_ex>
55
Line no. 61 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 61 Calling magic_function on COLON
0
Line no. 61 Calling magic_function on ARRAY
0
Line no. 61 Calling magic_function on SQBO
0
Line no. 61 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 61 Calling magic_function on RANGEOP
0
Line no. 61 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 61 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 15 whose type is 2
Line no. 61 Calling magic_function on SQBC
0
Line no. 61 Calling magic_function on OF
0
Line no. 61 Calling magic_function on REAL
0
Line no. 61 Calling magic_function on <type>
22
Line no. 61 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 61 Calling magic_function on SEMICOL
0
Line no. 61 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 61 Calling magic_function on <statement>
29
Line no. 62 Calling magic_function on DECLARE
0
Line no. 62 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for k whose type is 1
Nesting:1 Offset:0
Line no. 62 Calling magic_function on e
0
Line no. 62 Calling magic_function on <idList_ex>
55
Line no. 62 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 62 Calling magic_function on COLON
0
Line no. 62 Calling magic_function on INTEGER
0
Line no. 62 Calling magic_function on <dataType>
17
Line no. 62 Calling magic_function on SEMICOL
0
Line no. 62 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 62 Calling magic_function on <statement>
29
Line no. 63 Calling magic_function on DECLARE
0
Line no. 63 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for s whose type is 1
Nesting:1 Offset:0
Line no. 63 Calling magic_function on e
0
Line no. 63 Calling magic_function on <idList_ex>
55
Line no. 63 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 63 Calling magic_function on COLON
0
Line no. 63 Calling magic_function on REAL
0
Line no. 63 Calling magic_function on <dataType>
18
Line no. 63 Calling magic_function on SEMICOL
0
Line no. 63 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 63 Calling magic_function on <statement>
29
Line no. 64 Calling magic_function on GET_VALUE
0
Line no. 64 Calling magic_function on BO
0
Line no. 64 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for k whose type is 1
Nesting:1 Offset:0
Line no. 64 Calling magic_function on BC
0
Line no. 64 Calling magic_function on SEMICOL
0
Line no. 64 Calling magic_function on <ioStmt>
32
Line no. 64 Calling magic_function on <statement>
27
Line no. 66 Calling magic_function on SQBO
0
Line no. 66 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for s whose type is 1
Nesting:1 Offset:0
Line no. 66 Calling magic_function on e
0
Line no. 66 Calling magic_function on <idList_ex>
55
Line no. 66 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 66 Calling magic_function on SQBC
0
Line no. 66 Calling magic_function on ASSIGNOP
0
Line no. 66 Calling magic_function on <optional>
51
Line no. 66 Calling magic_function on USE
0
Line no. 66 Calling magic_function on MODULE
0
Line no. 66 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for arraySum whose type is 1
Line no. 66 Calling magic_function on WITH
0
Line no. 66 Calling magic_function on PARAMETERS
0
Line no. 66 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for A whose type is 1
Nesting:1 Offset:0
Line no. 66 Calling magic_function on COMMA
0
Line no. 66 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for k whose type is 1
Nesting:1 Offset:0
Line no. 66 Calling magic_function on e
0
Line no. 66 Calling magic_function on <idList_ex>
55
Line no. 66 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 66 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 66 Calling magic_function on SEMICOL
0
Line no. 66 Calling magic_function on <moduleReuseStmt>
50
type_check called on node <moduleReuseStmt> with rule no 50
arraySum
Fine till here0.1
Fine till here1
Fine till here2
Fine till here3
Nesting:1 Offset:0
Fine till here4
Nesting:1 Offset:0
0 1
Type Mismatch in line 66: Array type mismatch
Error in line 66: More parameters required by function
After type check
Creating ast node for <moduleReuseStmt>
 with count 3
Line no. 66 Calling magic_function on <simpleStmt>
42
Line no. 66 Calling magic_function on <statement>
28
Line no. 67 Calling magic_function on PRINT
0
Line no. 67 Calling magic_function on BO
0
Line no. 67 Calling magic_function on ID
0
Function hash:66 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for s whose type is 1
Nesting:1 Offset:0
Line no. 67 Calling magic_function on e
0
Line no. 67 Calling magic_function on <whichId>
40
Line no. 67 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 67 Calling magic_function on BC
0
Line no. 67 Calling magic_function on SEMICOL
0
Line no. 67 Calling magic_function on <ioStmt>
33
Line no. 67 Calling magic_function on <statement>
27
Line no. 68 Calling magic_function on e
0
Line no. 67 Calling magic_function on <statements>
26
Line no. 66 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 64 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 63 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 62 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 61 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 60 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 68 Calling magic_function on END
0
Line no. 59 Calling magic_function on <moduleDef>
24
Line no. 4 Calling magic_function on <driverModule>
7
Creating ast node for <driverModule>
 with count 1
Line no. 70 Calling magic_function on DEF
0
Line no. 70 Calling magic_function on MODULE
0
Line no. 70 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for readArr whose type is 1
Line no. 70 Calling magic_function on ENDDEF
0
Line no. 71 Calling magic_function on TAKES
0
Line no. 71 Calling magic_function on INPUT
0
Line no. 71 Calling magic_function on SQBO
0
Line no. 71 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for arr1 whose type is 1
Nesting:1 Offset:0
Line no. 71 Calling magic_function on COLON
0
Line no. 71 Calling magic_function on ARRAY
0
Line no. 71 Calling magic_function on SQBO
0
Line no. 71 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 71 Calling magic_function on RANGEOP
0
Line no. 71 Calling magic_function on NUM
0
Creating leaf for 15 whose type is 2
Line no. 71 Calling magic_function on <range>
108
Creating leaf for 1 whose type is 2
Creating leaf for 15 whose type is 2
Line no. 71 Calling magic_function on SQBC
0
Line no. 71 Calling magic_function on OF
0
Line no. 71 Calling magic_function on BOOLEAN
0
Line no. 71 Calling magic_function on <type>
23
Line no. 71 Calling magic_function on <dataType>
20
Creating ast node for <dataType>
 with count 2
Line no. 71 Calling magic_function on COMMA
0
Line no. 71 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for k whose type is 1
Nesting:1 Offset:0
Line no. 71 Calling magic_function on COLON
0
Line no. 71 Calling magic_function on INTEGER
0
Line no. 71 Calling magic_function on <dataType>
17
Line no. 71 Calling magic_function on e
0
Line no. 71 Calling magic_function on <input_plist_ex>
13
Line no. 71 Calling magic_function on <input_plist_ex>
12
Creating ast node for <input_plist_ex>
 with count 3
Line no. 70 Calling magic_function on <input_plist>
11
Creating ast node for <input_plist>
 with count 3
Line no. 71 Calling magic_function on SQBC
0
Line no. 71 Calling magic_function on SEMICOL
0
Line no. 72 Calling magic_function on e
0
Line no. 70 Calling magic_function on <ret>
10
Line no. 72 Calling magic_function on START
0
Line no. 73 Calling magic_function on DECLARE
0
Line no. 73 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for tempvar whose type is 1
Nesting:1 Offset:0
Line no. 73 Calling magic_function on e
0
Line no. 73 Calling magic_function on <idList_ex>
55
Line no. 73 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 73 Calling magic_function on COLON
0
Line no. 73 Calling magic_function on REAL
0
Line no. 73 Calling magic_function on <dataType>
18
Line no. 73 Calling magic_function on SEMICOL
0
Line no. 73 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 73 Calling magic_function on <statement>
29
Line no. 74 Calling magic_function on DECLARE
0
Line no. 74 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:1 Offset:0
Line no. 74 Calling magic_function on e
0
Line no. 74 Calling magic_function on <idList_ex>
55
Line no. 74 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 74 Calling magic_function on COLON
0
Line no. 74 Calling magic_function on INTEGER
0
Line no. 74 Calling magic_function on <dataType>
17
Line no. 74 Calling magic_function on SEMICOL
0
Line no. 74 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 74 Calling magic_function on <statement>
29
Line no. 75 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:1 Offset:0
Line no. 75 Calling magic_function on ASSIGNOP
0
Line no. 75 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 75 Calling magic_function on <var>
35
Line no. 75 Calling magic_function on <factor>
83
Line no. 75 Calling magic_function on e
0
Line no. 75 Calling magic_function on <N5>
82
Line no. 75 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 75 Calling magic_function on e
0
Line no. 75 Calling magic_function on <N4>
79
Line no. 75 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 75 Calling magic_function on e
0
Line no. 75 Calling magic_function on <WithRelOp>
69
Line no. 75 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 75 Calling magic_function on e
0
Line no. 75 Calling magic_function on <WithLogOp>
64
Line no. 75 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 75 Calling magic_function on <expression>
56
Line no. 75 Calling magic_function on SEMICOL
0
Line no. 75 Calling magic_function on <lvalueIDStmt>
46
Line no. 75 Calling magic_function on <whichStmt>
44
Line no. 75 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 75 Calling magic_function on <simpleStmt>
41
Line no. 75 Calling magic_function on <statement>
28
Line no. 76 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for x_1 whose type is 1
Line no. 76 Calling magic_function on ASSIGNOP
0
Line no. 76 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:1 Offset:0
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <whichId>
40
Line no. 76 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 76 Calling magic_function on <factor>
83
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <N5>
82
Line no. 76 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 76 Calling magic_function on PLUS
0
Line no. 76 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 76 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for u1 whose type is 1
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <whichId>
40
Line no. 76 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 76 Calling magic_function on <factor>
83
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <N5>
82
Line no. 76 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be DUMMY
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <N4>
79
Line no. 76 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here DUMMY
After type check
Creating ast node for <N4>
 with count 3
Line no. 76 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <WithRelOp>
69
Line no. 76 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 76 Calling magic_function on e
0
Line no. 76 Calling magic_function on <WithLogOp>
64
Line no. 76 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 76 Calling magic_function on <expression>
56
Line no. 76 Calling magic_function on SEMICOL
0
Line no. 76 Calling magic_function on <lvalueIDStmt>
46
Line no. 76 Calling magic_function on <whichStmt>
44
Line no. 76 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 76 Calling magic_function on <simpleStmt>
41
Line no. 76 Calling magic_function on <statement>
28
Line no. 77 Calling magic_function on DECLARE
0
Line no. 77 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for i whose type is 1
Line no. 77 Calling magic_function on e
0
Line no. 77 Calling magic_function on <idList_ex>
55
Line no. 77 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 77 Calling magic_function on COLON
0
Line no. 77 Calling magic_function on REAL
0
Line no. 77 Calling magic_function on <dataType>
18
Line no. 77 Calling magic_function on SEMICOL
0
Line no. 77 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 77 Calling magic_function on <statement>
29
Line no. 78 Calling magic_function on WHILE
0
Line no. 78 Calling magic_function on BO
0
Line no. 78 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:1 Offset:0
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <whichId>
40
Line no. 78 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 78 Calling magic_function on <factor>
83
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <N5>
82
Line no. 78 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <N4>
79
Line no. 78 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 78 Calling magic_function on LE
0
Line no. 78 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 78 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for k whose type is 1
Nesting:1 Offset:0
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <whichId>
40
Line no. 78 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 78 Calling magic_function on <factor>
83
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <N5>
82
Line no. 78 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <N4>
79
Line no. 78 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 78 Calling magic_function on <BorNBAE>
61
Line no. 78 Calling magic_function on <negOrPosAE>
59
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <WithRelOp>
69
Line no. 78 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 78 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 78 Calling magic_function on e
0
Line no. 78 Calling magic_function on <WithLogOp>
64
Line no. 78 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 78 Calling magic_function on BC
0
Line no. 79 Calling magic_function on START
0
Line no. 80 Calling magic_function on DECLARE
0
Line no. 80 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for x_1 whose type is 1
Nesting:2 Offset:0
Line no. 80 Calling magic_function on COMMA
0
Line no. 80 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for x_2 whose type is 1
Nesting:2 Offset:0
Line no. 80 Calling magic_function on e
0
Line no. 80 Calling magic_function on <idList_ex>
55
Line no. 80 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 80 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 80 Calling magic_function on COLON
0
Line no. 80 Calling magic_function on BOOLEAN
0
Line no. 80 Calling magic_function on <dataType>
19
Line no. 80 Calling magic_function on SEMICOL
0
Line no. 80 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 80 Calling magic_function on <statement>
29
Line no. 81 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for x_1 whose type is 1
Nesting:2 Offset:0
Line no. 81 Calling magic_function on ASSIGNOP
0
Line no. 81 Calling magic_function on TRUE
0
Creating leaf for true whose type is 4
Line no. 81 Calling magic_function on <var>
37
Line no. 81 Calling magic_function on <factor>
83
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N5>
82
Line no. 81 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be BOOLEAN
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N4>
79
Line no. 81 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be BOOLEAN
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <WithRelOp>
69
Line no. 81 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 81 Calling magic_function on AND
0
Line no. 81 Calling magic_function on <logicalOp>
88
Creating leaf for AND whose type is 3
Line no. 81 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for u2 whose type is 1
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <whichId>
40
Line no. 81 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 81 Calling magic_function on <factor>
83
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N5>
82
Line no. 81 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be DUMMY
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N4>
79
Line no. 81 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be DUMMY
Line no. 81 Calling magic_function on LE
0
Line no. 81 Calling magic_function on <relationalOp>
91
Creating leaf for <= whose type is 3
Line no. 81 Calling magic_function on NUM
0
Creating leaf for 10 whose type is 2
Line no. 81 Calling magic_function on <var>
35
Line no. 81 Calling magic_function on <factor>
83
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N5>
82
Line no. 81 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <N4>
79
Line no. 81 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 81 Calling magic_function on <BorNBAE>
61
Line no. 81 Calling magic_function on <negOrPosAE>
59
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <WithRelOp>
69
Line no. 81 Calling magic_function on <WithRelOp>
68
type_check called on node <WithRelOp> with rule no 68
Hererrerere
Hererrererexit
After type check
Creating ast node for <WithRelOp>
 with count 3
Line no. 81 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 81 Calling magic_function on <AnyTerm2>
67
Line no. 81 Calling magic_function on e
0
Line no. 81 Calling magic_function on <WithLogOp>
64
Line no. 81 Calling magic_function on <WithLogOp>
63
type_check called on node <WithLogOp> with rule no 63
After type check
Creating ast node for <WithLogOp>
 with count 3
Line no. 81 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 81 Calling magic_function on <expression>
56
Line no. 81 Calling magic_function on SEMICOL
0
Line no. 81 Calling magic_function on <lvalueIDStmt>
46
Line no. 81 Calling magic_function on <whichStmt>
44
Line no. 81 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 81 Calling magic_function on <simpleStmt>
41
Line no. 81 Calling magic_function on <statement>
28
Line no. 82 Calling magic_function on GET_VALUE
0
Line no. 82 Calling magic_function on BO
0
Line no. 82 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for tempvar whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 82 Calling magic_function on BC
0
Line no. 82 Calling magic_function on SEMICOL
0
Line no. 82 Calling magic_function on <ioStmt>
32
Line no. 82 Calling magic_function on <statement>
27
Line no. 83 Calling magic_function on DECLARE
0
Line no. 83 Calling magic_function on ID
0
Function hash:0 Nest:0 Offset:0
Creating leaf for x_1 whose type is 1
Line no. 83 Calling magic_function on COMMA
0
Line no. 83 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Creating leaf for x_3 whose type is 1
Nesting:2 Offset:0
Line no. 83 Calling magic_function on e
0
Line no. 83 Calling magic_function on <idList_ex>
55
Line no. 83 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 83 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 83 Calling magic_function on COLON
0
Line no. 83 Calling magic_function on INTEGER
0
Line no. 83 Calling magic_function on <dataType>
17
Line no. 83 Calling magic_function on SEMICOL
0
Line no. 83 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 83 Calling magic_function on <statement>
29
Line no. 84 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for arr1 whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 84 Calling magic_function on SQBO
0
Line no. 84 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 84 Calling magic_function on <index>
49
Line no. 84 Calling magic_function on SQBC
0
Line no. 84 Calling magic_function on ASSIGNOP
0
Line no. 84 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for tempvar whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 84 Calling magic_function on e
0
Line no. 84 Calling magic_function on <whichId>
40
Line no. 84 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 84 Calling magic_function on <factor>
83
Line no. 84 Calling magic_function on e
0
Line no. 84 Calling magic_function on <N5>
82
Line no. 84 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be REAL
Line no. 84 Calling magic_function on e
0
Line no. 84 Calling magic_function on <N4>
79
Line no. 84 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be REAL
Line no. 84 Calling magic_function on e
0
Line no. 84 Calling magic_function on <WithRelOp>
69
Line no. 84 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 84 Calling magic_function on e
0
Line no. 84 Calling magic_function on <WithLogOp>
64
Line no. 84 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 84 Calling magic_function on <expression>
56
Line no. 84 Calling magic_function on SEMICOL
0
Line no. 84 Calling magic_function on <lvalueARRStmt>
47
Creating ast node for <lvalueARRStmt>
 with count 2
Line no. 84 Calling magic_function on <whichStmt>
45
Line no. 84 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 84 Calling magic_function on <simpleStmt>
41
Line no. 84 Calling magic_function on <statement>
28
Line no. 85 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 85 Calling magic_function on ASSIGNOP
0
Line no. 85 Calling magic_function on ID
0
Function hash:29 Nest:2 Offset:0
Nesting:2 Offset:0
Nesting:1 Offset:0
Creating leaf for i whose type is 1
Nesting:2 Offset:0
Nesting:1 Offset:0
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <whichId>
40
Line no. 85 Calling magic_function on <var>
34
Creating ast node for <var>
 with count 2
Line no. 85 Calling magic_function on <factor>
83
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <N5>
82
Line no. 85 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 85 Calling magic_function on PLUS
0
Line no. 85 Calling magic_function on <op1>
84
Creating leaf for + whose type is 3
Line no. 85 Calling magic_function on NUM
0
Creating leaf for 1 whose type is 2
Line no. 85 Calling magic_function on <var>
35
Line no. 85 Calling magic_function on <factor>
83
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <N5>
82
Line no. 85 Calling magic_function on <term>
80
Creating ast node for <term>
 with count 2
Setting type of <term> to be INTEGER
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <N4>
79
Line no. 85 Calling magic_function on <N4>
78
type_check called on node <N4> with rule no 78
here INTEGER
After type check
Creating ast node for <N4>
 with count 3
Line no. 85 Calling magic_function on <arithmeticExpr>
77
Creating ast node for <arithmeticExpr>
 with count 2
Setting type of <arithmeticExpr> to be INTEGER
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <WithRelOp>
69
Line no. 85 Calling magic_function on <AnyTerm>
65
Creating ast node for <AnyTerm>
 with count 2
Line no. 85 Calling magic_function on e
0
Line no. 85 Calling magic_function on <WithLogOp>
64
Line no. 85 Calling magic_function on <AOBE>
62
Creating ast node for <AOBE>
 with count 2
Line no. 85 Calling magic_function on <expression>
56
Line no. 85 Calling magic_function on SEMICOL
0
Line no. 85 Calling magic_function on <lvalueIDStmt>
46
Line no. 85 Calling magic_function on <whichStmt>
44
Line no. 85 Calling magic_function on <assignmentStmt>
43
Creating ast node for <assignmentStmt>
 with count 2
Line no. 85 Calling magic_function on <simpleStmt>
41
Line no. 85 Calling magic_function on <statement>
28
Line no. 86 Calling magic_function on e
0
Line no. 85 Calling magic_function on <statements>
26
Line no. 84 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 83 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 82 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 81 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 80 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 78 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 86 Calling magic_function on END
0
Line no. 78 Calling magic_function on <iterativeStmt>
107
type_check called on node <iterativeStmt> with rule no 107
After type check
Creating ast node for <iterativeStmt>
 with count 2
Line no. 78 Calling magic_function on <statement>
31
Line no. 87 Calling magic_function on DECLARE
0
Line no. 87 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for x_2 whose type is 1
Nesting:1 Offset:0
Line no. 87 Calling magic_function on COMMA
0
Line no. 87 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for x_1 whose type is 1
Nesting:1 Offset:0
Line no. 87 Calling magic_function on COMMA
0
Line no. 87 Calling magic_function on ID
0
Function hash:29 Nest:1 Offset:0
Nesting:1 Offset:0
Creating leaf for x_3 whose type is 1
Nesting:1 Offset:0
Line no. 87 Calling magic_function on e
0
Line no. 87 Calling magic_function on <idList_ex>
55
Line no. 87 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 87 Calling magic_function on <idList_ex>
54
Creating ast node for <idList_ex>
 with count 2
Line no. 87 Calling magic_function on <idList>
53
Creating ast node for <idList>
 with count 2
Line no. 87 Calling magic_function on COLON
0
Line no. 87 Calling magic_function on BOOLEAN
0
Line no. 87 Calling magic_function on <dataType>
19
Line no. 87 Calling magic_function on SEMICOL
0
Line no. 87 Calling magic_function on <declareStmt>
96
Creating ast node for <declareStmt>
 with count 2
Line no. 87 Calling magic_function on <statement>
29
Line no. 88 Calling magic_function on e
0
Line no. 87 Calling magic_function on <statements>
26
Line no. 78 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 77 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 76 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 75 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 74 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 73 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 72 Calling magic_function on <statements>
25
Creating ast node for <statements>
 with count 2
Line no. 88 Calling magic_function on END
0
Line no. 70 Calling magic_function on <moduleDef>
24
Line no. 70 Calling magic_function on <module>
8
Creating ast node for <module>
 with count 4
Line no. 88 Calling magic_function on e
0
Line no. 70 Calling magic_function on <otherModules>
6
Line no. 4 Calling magic_function on <otherModules>
5
Creating ast node for <otherModules>
 with count 2
Line no. 1 Calling magic_function on <program>
1
Creating ast node for <program>
 with count 4
Line No. 4 ID_TYPE Name: readArr | ST_PTR (null)
Line No. 5 ID_TYPE Name: arraySum | ST_PTR (null)
Line No. 6 ID_TYPE Name: list | ST_PTR list
Line No. 6 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 6 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 6 ID_TYPE Name: n | ST_PTR n
Line No. 7 ID_TYPE Name: sum | ST_PTR sum
Line No. 9 ID_TYPE Name: index | ST_PTR index
Line No. 10 ID_TYPE Name: t | ST_PTR t
Line No. 10 ID_TYPE Name: a | ST_PTR a
Line No. 11 ID_TYPE Name: sum | ST_PTR sum
Line No. 11 NUM_RNUM_TYPE Name: 0.0 | Value: 0
Line No. 12 ID_TYPE Name: t | ST_PTR t
Line No. 12 ID_TYPE Name: sum | ST_PTR sum
Line No. 12 OP_TYPE Name: >=
Line No. 12 NUM_RNUM_TYPE Name: 20.0 | Value: 20
Line No. 13 ID_TYPE Name: sum | ST_PTR sum
Line No. 13 OP_TYPE Name: >=
Line No. 13 NUM_RNUM_TYPE Name: 12.8 | Value: 12
Line No. 13 OP_TYPE Name: AND
Line No. 13 ID_TYPE Name: t | ST_PTR t
Line No. 15 ID_TYPE Name: p | ST_PTR p
Line No. 15 ID_TYPE Name: q | ST_PTR q
Line No. 15 ID_TYPE Name: r | ST_PTR r
Line No. 15 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 15 NUM_RNUM_TYPE Name: 12 | Value: 12
Line No. 16 ID_TYPE Name: newarr | ST_PTR newarr
Line No. 16 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 16 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 17 ID_TYPE Name: u | ST_PTR u
Line No. 17 ID_TYPE Name: v | ST_PTR v
Line No. 18 ID_TYPE Name: sum | ST_PTR sum
Line No. 18 OP_TYPE Name: -
Line No. 18 NUM_RNUM_TYPE Name: 3.0 | Value: 3
Line No. 18 OP_TYPE Name: OR
Line No. 18 ID_TYPE Name: sum | ST_PTR sum
Line No. 18 OP_TYPE Name: <=
Line No. 18 NUM_RNUM_TYPE Name: 20.3 | Value: 20
Line No. 20 ID_TYPE Name: x | ST_PTR x
Line No. 20 ID_TYPE Name: y | ST_PTR y
Line No. 21 ID_TYPE Name: x | ST_PTR x
Line No. 21 ID_TYPE Name: y | ST_PTR y
Line No. 21 OP_TYPE Name: +
Line No. 21 NUM_RNUM_TYPE Name: 3 | Value: 3
Line No. 21 OP_TYPE Name: *
Line No. 21 ID_TYPE Name: index | ST_PTR index
Line No. 21 OP_TYPE Name: -
Line No. 21 NUM_RNUM_TYPE Name: 32 | Value: 32
Line No. 21 OP_TYPE Name: *
Line No. 21 NUM_RNUM_TYPE Name: 5 | Value: 5
Line No. 22 ID_TYPE Name: sum | ST_PTR sum
Line No. 22 ID_TYPE Name: p | ST_PTR p
Line No. 22 OP_TYPE Name: +
Line No. 22 NUM_RNUM_TYPE Name: 23.5 | Value: 23
Line No. 23 ID_TYPE Name: t | ST_PTR t
Line No. 23 BOOL_TYPE Name: true
Line No. 23 OP_TYPE Name: OR
Line No. 23 ID_TYPE Name: y | ST_PTR y
Line No. 23 OP_TYPE Name: +
Line No. 23 NUM_RNUM_TYPE Name: 23 | Value: 23
Line No. 23 OP_TYPE Name: >=
Line No. 23 ID_TYPE Name: x | ST_PTR x
Line No. 23 OP_TYPE Name: AND
Line No. 23 NUM_RNUM_TYPE Name: 23.5 | Value: 23
Line No. 23 OP_TYPE Name: <=
Line No. 23 ID_TYPE Name: newarr | ST_PTR newarr
Line No. 23 ID_TYPE Name: v | ST_PTR v
Line No. 25 ID_TYPE Name: index | ST_PTR index
Line No. 25 NUM_RNUM_TYPE Name: 34 | Value: 34
Line No. 25 OP_TYPE Name: -
Line No. 25 NUM_RNUM_TYPE Name: 20 | Value: 20
Line No. 25 OP_TYPE Name: *
Line No. 25 ID_TYPE Name: index | ST_PTR index
Line No. 25 OP_TYPE Name: +
Line No. 25 ID_TYPE Name: x | ST_PTR (null)
Line No. 25 OP_TYPE Name: -
Line No. 25 NUM_RNUM_TYPE Name: 12 | Value: 12
Line No. 26 ID_TYPE Name: r | ST_PTR r
Line No. 26 ID_TYPE Name: v | ST_PTR v
Line No. 26 ID_TYPE Name: p | ST_PTR p
Line No. 26 ID_TYPE Name: v | ST_PTR v
Line No. 26 OP_TYPE Name: +
Line No. 26 ID_TYPE Name: q | ST_PTR q
Line No. 26 ID_TYPE Name: v | ST_PTR v
Line No. 27 ID_TYPE Name: r | ST_PTR r
Line No. 27 ID_TYPE Name: v | ST_PTR v
Line No. 27 ID_TYPE Name: p | ST_PTR p
Line No. 27 ID_TYPE Name: v | ST_PTR v
Line No. 27 OP_TYPE Name: +
Line No. 27 ID_TYPE Name: list | ST_PTR list
Line No. 27 ID_TYPE Name: v | ST_PTR v
Line No. 28 ID_TYPE Name: newarr | ST_PTR newarr
Line No. 28 ID_TYPE Name: v | ST_PTR v
Line No. 28 ID_TYPE Name: list | ST_PTR list
Line No. 28 ID_TYPE Name: v | ST_PTR v
Line No. 28 OP_TYPE Name: +
Line No. 28 ID_TYPE Name: list | ST_PTR list
Line No. 28 ID_TYPE Name: v | ST_PTR v
Line No. 29 ID_TYPE Name: t | ST_PTR t
Line No. 29 BOOL_TYPE Name: false
Line No. 29 OP_TYPE Name: AND
Line No. 29 ID_TYPE Name: list | ST_PTR list
Line No. 29 ID_TYPE Name: v | ST_PTR v
Line No. 29 OP_TYPE Name: +
Line No. 29 NUM_RNUM_TYPE Name: 34.5 | Value: 34
Line No. 29 OP_TYPE Name: <=
Line No. 29 ID_TYPE Name: newarr | ST_PTR newarr
Line No. 29 ID_TYPE Name: v | ST_PTR v
Line No. 30 ID_TYPE Name: a | ST_PTR a
Line No. 30 ID_TYPE Name: t | ST_PTR t
Line No. 30 OP_TYPE Name: AND
Line No. 30 ID_TYPE Name: list | ST_PTR list
Line No. 30 ID_TYPE Name: v | ST_PTR v
Line No. 30 OP_TYPE Name: +
Line No. 30 NUM_RNUM_TYPE Name: 5.3 | Value: 5
Line No. 32 ID_TYPE Name: index | ST_PTR index
Line No. 32 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 32 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 34 ID_TYPE Name: y_1 | ST_PTR y_1
Line No. 34 ID_TYPE Name: y_2 | ST_PTR y_2
Line No. 35 ID_TYPE Name: k | ST_PTR k
Line No. 35 ID_TYPE Name: l | ST_PTR l
Line No. 35 ID_TYPE Name: m | ST_PTR m
Line No. 35 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 35 NUM_RNUM_TYPE Name: 10 | Value: 10
Line No. 36 ID_TYPE Name: x | ST_PTR x
Line No. 37 ID_TYPE Name: t | ST_PTR t
Line No. 37 ID_TYPE Name: index | ST_PTR index
Line No. 37 OP_TYPE Name: <=
Line No. 37 ID_TYPE Name: n | ST_PTR n
Line No. 38 ID_TYPE Name: t | ST_PTR t
Line No. 40 BOOL_TYPE Name: true
Line No. 40 ID_TYPE Name: list | ST_PTR list
Line No. 40 ID_TYPE Name: index | ST_PTR index
Line No. 41 ID_TYPE Name: m | ST_PTR m
Line No. 41 ID_TYPE Name: j | ST_PTR (null)
Line No. 41 ID_TYPE Name: k | ST_PTR k
Line No. 41 ID_TYPE Name: j | ST_PTR (null)
Line No. 41 OP_TYPE Name: +
Line No. 41 NUM_RNUM_TYPE Name: 34.5 | Value: 34
Line No. 42 ID_TYPE Name: sum | ST_PTR sum
Line No. 42 ID_TYPE Name: sum | ST_PTR sum
Line No. 42 OP_TYPE Name: +
Line No. 42 ID_TYPE Name: list | ST_PTR list
Line No. 42 ID_TYPE Name: index | ST_PTR index
Line No. 42 OP_TYPE Name: +
Line No. 42 ID_TYPE Name: k | ST_PTR k
Line No. 42 ID_TYPE Name: index | ST_PTR index
Line No. 43 ID_TYPE Name: value | ST_PTR (null)
Line No. 43 ID_TYPE Name: sum | ST_PTR sum
Line No. 43 OP_TYPE Name: +
Line No. 43 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 44 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 44 ID_TYPE Name: x_2 | ST_PTR x_2
Line No. 45 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 45 NUM_RNUM_TYPE Name: 11 | Value: 11
Line No. 45 OP_TYPE Name: +
Line No. 45 ID_TYPE Name: index | ST_PTR index
Line No. 46 ID_TYPE Name: x_2 | ST_PTR x_2
Line No. 46 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 46 OP_TYPE Name: +
Line No. 46 ID_TYPE Name: x_2 | ST_PTR x_2
Line No. 48 ID_TYPE Name: u1 | ST_PTR u1
Line No. 48 ID_TYPE Name: u2 | ST_PTR u2
Line No. 49 ID_TYPE Name: u2 | ST_PTR u2
Line No. 49 ID_TYPE Name: n | ST_PTR n
Line No. 49 OP_TYPE Name: +
Line No. 49 ID_TYPE Name: u1 | ST_PTR u1
Line No. 49 OP_TYPE Name: *
Line No. 49 NUM_RNUM_TYPE Name: 23.5 | Value: 23
Line No. 51 BOOL_TYPE Name: false
Line No. 51 ID_TYPE Name: sum | ST_PTR sum
Line No. 52 ID_TYPE Name: x | ST_PTR (null)
Line No. 52 ID_TYPE Name: u1 | ST_PTR (null)
Line No. 52 ID_TYPE Name: x_5 | ST_PTR x_5
Line No. 53 ID_TYPE Name: y_1 | ST_PTR y_1
Line No. 57 ID_TYPE Name: x_2 | ST_PTR (null)
Line No. 61 ID_TYPE Name: A | ST_PTR A
Line No. 61 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 61 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 62 ID_TYPE Name: k | ST_PTR k
Line No. 63 ID_TYPE Name: s | ST_PTR s
Line No. 64 ID_TYPE Name: k | ST_PTR k
Line No. 66 ID_TYPE Name: s | ST_PTR s
Line No. 66 ID_TYPE Name: arraySum | ST_PTR (null)
Line No. 66 ID_TYPE Name: A | ST_PTR A
Line No. 66 ID_TYPE Name: k | ST_PTR k
Line No. 67 ID_TYPE Name: s | ST_PTR s
Line No. 70 ID_TYPE Name: readArr | ST_PTR (null)
Line No. 71 ID_TYPE Name: arr1 | ST_PTR arr1
Line No. 71 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 71 NUM_RNUM_TYPE Name: 15 | Value: 15
Line No. 71 ID_TYPE Name: k | ST_PTR k
Line No. 73 ID_TYPE Name: tempvar | ST_PTR tempvar
Line No. 74 ID_TYPE Name: i | ST_PTR i
Line No. 75 ID_TYPE Name: i | ST_PTR i
Line No. 75 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 76 ID_TYPE Name: x_1 | ST_PTR (null)
Line No. 76 ID_TYPE Name: i | ST_PTR i
Line No. 76 OP_TYPE Name: +
Line No. 76 ID_TYPE Name: u1 | ST_PTR (null)
Line No. 77 ID_TYPE Name: i | ST_PTR (null)
Line No. 78 ID_TYPE Name: i | ST_PTR i
Line No. 78 OP_TYPE Name: <=
Line No. 78 ID_TYPE Name: k | ST_PTR k
Line No. 80 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 80 ID_TYPE Name: x_2 | ST_PTR x_2
Line No. 81 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 81 BOOL_TYPE Name: true
Line No. 81 OP_TYPE Name: AND
Line No. 81 ID_TYPE Name: u2 | ST_PTR (null)
Line No. 81 OP_TYPE Name: <=
Line No. 81 NUM_RNUM_TYPE Name: 10 | Value: 10
Line No. 82 ID_TYPE Name: tempvar | ST_PTR tempvar
Line No. 83 ID_TYPE Name: x_1 | ST_PTR (null)
Line No. 83 ID_TYPE Name: x_3 | ST_PTR x_3
Line No. 84 ID_TYPE Name: arr1 | ST_PTR arr1
Line No. 84 ID_TYPE Name: i | ST_PTR i
Line No. 84 ID_TYPE Name: tempvar | ST_PTR tempvar
Line No. 85 ID_TYPE Name: i | ST_PTR i
Line No. 85 ID_TYPE Name: i | ST_PTR i
Line No. 85 OP_TYPE Name: +
Line No. 85 NUM_RNUM_TYPE Name: 1 | Value: 1
Line No. 87 ID_TYPE Name: x_2 | ST_PTR x_2
Line No. 87 ID_TYPE Name: x_1 | ST_PTR x_1
Line No. 87 ID_TYPE Name: x_3 | ST_PTR x_3

Press:
1=> For the clean code
2=> For printing token generated by lexer
3=> For verifying the syntactic correctness
4=> For printing the parse tree
5=> For Exiting
