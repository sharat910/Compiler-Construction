<program> -->  <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> -->
<moduleDeclarations> -->  <moduleDeclaration> --> <moduleDeclarations> -->
<moduleDeclarations> -->  e -->
<moduleDeclaration> -->  DECLARE --> MODULE --> ID --> SEMICOL -->
<otherModules> -->  <module> --> <otherModules> -->
<otherModules> -->  e -->
<driverModule> -->  DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> -->
<module> -->  DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> -->
<ret> -->  RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL -->
<ret> -->  e -->
<input_plist> -->  ID --> COLON --> <dataType> --> <input_plist_ex> -->
<input_plist_ex> -->  COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> -->
<input_plist_ex> -->  e -->
<output_plist> -->  ID --> COLON --> <type> --> <output_plist_ex> -->
<output_plist_ex> -->  COMMA --> ID --> COLON --> <type> --> <output_plist_ex> -->
<output_plist_ex> -->  e -->
<dataType> -->  INTEGER -->
<dataType> -->  REAL -->
<dataType> -->  BOOLEAN -->
<dataType> -->  ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> -->
<type> -->  INTEGER -->
<type> -->  REAL -->
<type> -->  BOOLEAN -->
<moduleDef> -->  START --> <statements> --> END -->
<statements> -->  <statement> --> <statements> -->
<statements> -->  e -->
<statement> -->  <ioStmt> -->
<statement> -->  <simpleStmt> -->
<statement> -->  <declareStmt> -->
<statement> -->  <condionalStmt> -->
<statement> -->  <iterativeStmt> -->
<ioStmt> -->  GET_VALUE --> BO --> ID --> BC --> SEMICOL -->
<ioStmt> -->  PRINT --> BO --> <var> --> BC --> SEMICOL -->
<var> -->  ID --> <whichId> -->
<var> -->  NUM -->
<var> -->  RNUM -->
<whichId> -->  SQBO --> ID --> SQBC -->
<whichId> -->  e -->
<simpleStmt> -->  <assignmentStmt> -->
<simpleStmt> -->  <moduleReuseStmt> -->
<assignmentStmt> -->  ID --> <whichStmt> -->
<whichStmt> -->  <lvalueIDStmt> -->
<whichStmt> -->  <lvalueARRStmt> -->
<lvalueIDStmt> -->  ASSIGNOP --> <expression> --> SEMICOL -->
<lvalueARRStmt> -->  SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL -->
<index> -->  NUM -->
<index> -->  ID -->
<moduleReuseStmt> -->  <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL -->
<optional> -->  SQBO --> <idList> --> SQBC --> ASSIGNOP -->
<optional> -->  e -->
<idList> -->  ID --> <idList_ex> -->
<idList_ex> -->  COMMA --> ID --> <idList_ex> -->
<idList_ex> -->  e -->
<expression> -->  <AOBE> -->
<expression> -->  MINUS --> <BorNBAE> -->
<negOrPosAE> -->  MINUS --> <BorNBAE> -->
<negOrPosAE> -->  <BorNBAE> -->
<BorNBAE> -->  BO --> <arithmeticExpr> --> BC -->
<BorNBAE> -->  <arithmeticExpr> -->
<AOBE> -->  <AnyTerm> --> <WithLogOp> -->
<WithLogOp> -->  <logicalOp> --> <AnyTerm> --> <WithLogOp> -->
<WithLogOp> -->  e -->
<AnyTerm> -->  <arithmeticExpr> --> <WithRelOp> -->
<WithRelOp> -->  <relationalOp> --> <negOrPosAE> --> <WithRelOp> -->
<WithRelOp> -->  e -->
<AOBE> -->  BO --> <AOBE> --> BC --> <AnyTerm> --> <WithLogOp> -->
<arithmeticExpr> -->  <term> --> <N4> -->
<N4> -->  <op1> --> <term> --> <N4> -->
<N4> -->  e -->
<term> -->  <factor> --> <N5> -->
<N5> -->  <op2> --> <factor> --> <N5> -->
<N5> -->  e -->
<factor> -->  <var> -->
<op1> -->  PLUS -->
<op1> -->  MINUS -->
<op2> -->  MUL -->
<op2> -->  DIV -->
<logicalOp> -->  AND -->
<logicalOp> -->  OR -->
<relationalOp> -->  LT -->
<relationalOp> -->  LE -->
<relationalOp> -->  GT -->
<relationalOp> -->  GE -->
<relationalOp> -->  EQ -->
<relationalOp> -->  NE -->
<declareStmt> -->  DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL -->
<condionalStmt> -->  SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END -->
<caseStmts> -->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
<MultiCase> -->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
<MultiCase> -->  e -->
<value> -->  NUM -->
<value> -->  TRUE -->
<value> -->  FALSE -->
<default> -->  DEFAULT --> COLON --> <statements> --> BREAK --> SEMICOL -->
<default> -->  e -->
<iterativeStmt> -->  FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END -->
<iterativeStmt> -->  WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END -->
<range> -->  NUM --> RANGEOP --> NUM -->
it's me<AOBE> 
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO -->
<output_plist> 
 ID -->
<idList> 
 ID -->
<statement> 
 USE --> SQBO --> ID --> FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT -->
<whichStmt> 
 SQBO --> ASSIGNOP -->
<WithLogOp> 
 AND --> OR --> e -->
<moduleReuseStmt> 
 USE --> SQBO -->
<idList_ex> 
 e --> COMMA -->
<declareStmt> 
 DECLARE -->
<MultiCase> 
 e --> CASE -->
<simpleStmt> 
 SQBO --> USE --> ID -->
<expression> 
 FALSE --> TRUE --> RNUM --> NUM --> ID --> BO --> MINUS -->
<term> 
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<index> 
 ID --> NUM -->
<module> 
 DEF -->
<lvalueARRStmt> 
 SQBO -->
<negOrPosAE> 
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO --> MINUS -->
<dataType> 
 ARRAY --> BOOLEAN --> REAL --> INTEGER -->
<input_plist> 
 ID -->
<var> 
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<op2> 
 DIV --> MUL -->
<N4> 
 PLUS --> MINUS --> e -->
<output_plist_ex> 
 e --> COMMA -->
<driverModule> 
 DRIVERDEF -->
<program> 
 DEF --> DECLARE --> DRIVERDEF -->
<iterativeStmt> 
 WHILE --> FOR -->
<caseStmts> 
 CASE -->
<logicalOp> 
 OR --> AND -->
<whichId> 
 e --> SQBO -->
<ioStmt> 
 PRINT --> GET_VALUE -->
<input_plist_ex> 
 e --> COMMA -->
<ret> 
 e --> RETURNS -->
<WithRelOp> 
 LT --> LE --> GT --> GE --> EQ --> NE --> e -->
<condionalStmt> 
 SWITCH -->
<optional> 
 e --> SQBO -->
<op1> 
 MINUS --> PLUS -->
<range> 
 NUM -->
<relationalOp> 
 NE --> EQ --> GE --> GT --> LE --> LT -->
<BorNBAE> 
 FALSE --> TRUE --> RNUM --> NUM --> ID --> BO -->
<factor> 
 ID --> NUM --> RNUM --> TRUE --> FALSE -->
<value> 
 FALSE --> TRUE --> NUM -->
<moduleDeclarations> 
 DECLARE --> e -->
<otherModules> 
 DEF --> e -->
<type> 
 BOOLEAN --> REAL --> INTEGER -->
<moduleDeclaration> 
 DECLARE -->
<moduleDef> 
 START -->
<default> 
 e --> DEFAULT -->
<N5> 
 MUL --> DIV --> e -->
<assignmentStmt> 
 ID -->
<lvalueIDStmt> 
 ASSIGNOP -->
<statements> 
 SQBO --> USE --> ID --> PRINT --> GET_VALUE --> DECLARE --> SWITCH --> WHILE --> FOR --> e -->
<arithmeticExpr> 
 ID --> NUM --> RNUM --> TRUE --> FALSE -->
<AnyTerm> 
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<AOBE> 
 BC --> SEMICOL -->
<output_plist> 
 SQBC -->
<idList> 
 COLON --> SQBC --> SEMICOL -->
<statement> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<whichStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<WithLogOp> 
 BC --> SEMICOL -->
<moduleReuseStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<idList_ex> 
 COLON --> SQBC --> SEMICOL -->
<declareStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<MultiCase> 
 END --> DEFAULT -->
<simpleStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<expression> 
 SEMICOL -->
<term> 
 MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<index> 
 SQBC -->
<module> 
 DEF --> DRIVERDEF --> $ -->
<lvalueARRStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<negOrPosAE> 
 NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<dataType> 
 SEMICOL --> COMMA --> SQBC -->
<input_plist> 
 SQBC -->
<var> 
 DIV --> MUL --> MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<op2> 
 ID --> NUM --> RNUM --> TRUE --> FALSE -->
<N4> 
 NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<output_plist_ex> 
 SQBC -->
<driverModule> 
 DEF --> $ -->
<program> 
 $ -->
<iterativeStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<caseStmts> 
 END --> DEFAULT -->
<logicalOp> 
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<whichId> 
 DIV --> MUL --> MINUS --> PLUS --> LT --> LE --> GT --> GE --> EQ --> NE --> OR --> AND --> BC --> SEMICOL -->
<ioStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<input_plist_ex> 
 SQBC -->
<ret> 
 START -->
<WithRelOp> 
 AND --> OR --> BC --> SEMICOL -->
<condionalStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<optional> 
 USE -->
<op1> 
 FALSE --> TRUE --> RNUM --> NUM --> ID -->
<range> 
 BC --> SQBC -->
<relationalOp> 
 ID --> NUM --> RNUM --> TRUE --> FALSE --> BO --> MINUS -->
<BorNBAE> 
 LT --> LE --> GT --> GE --> EQ --> NE --> OR --> AND --> BC --> SEMICOL -->
<factor> 
 DIV --> MUL --> MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<value> 
 COLON -->
<moduleDeclarations> 
 DEF --> DRIVERDEF -->
<otherModules> 
 DRIVERDEF --> $ -->
<type> 
 SEMICOL --> COMMA --> SQBC -->
<moduleDeclaration> 
 DECLARE --> DEF --> DRIVERDEF -->
<moduleDef> 
 DEF --> DRIVERDEF --> $ -->
<default> 
 END -->
<N5> 
 MINUS --> PLUS --> NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<assignmentStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<lvalueIDStmt> 
 FOR --> WHILE --> SWITCH --> DECLARE --> GET_VALUE --> PRINT --> ID --> USE --> SQBO --> BREAK --> END -->
<statements> 
 BREAK --> END -->
<arithmeticExpr> 
 NE --> EQ --> GE --> GT --> LE --> LT --> AND --> OR --> BC --> SEMICOL -->
<AnyTerm> 
 OR --> AND --> BC --> SEMICOL -->
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 60 60 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 66 0 0 60 60 60 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 51 0 0 0 0 
0 0 0 0 0 0 0 29 0 0 0 27 27 28 0 0 0 0 0 0 0 0 0 31 0 30 0 0 0 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 28 0 0 0 0 0 0 28 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 42 43 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 61 61 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 62 0 0 0 0 0 62 0 0 0 0 0 0 62 0 
0 0 0 0 0 0 48 48 0 0 0 48 48 48 0 0 0 0 0 0 0 0 0 48 0 48 0 48 0 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 48 0 0 0 0 0 0 48 0 0 48 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 53 0 53 52 0 0 53 0 0 0 0 0 0 0 0 53 0 
0 0 0 0 0 0 0 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 90 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89 0 90 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 90 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0 0 0 0 0 39 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 54 54 0 0 0 0 0 0 0 0 0 0 0 0 0 55 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 54 0 0 54 54 54 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 70 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 70 70 70 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 46 47 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 57 0 0 0 0 0 0 0 0 0 0 0 0 0 56 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57 0 0 57 57 57 0 0 0 0 
17 18 19 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99 100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 36 35 34 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 76 77 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 69 69 0 0 0 0 0 0 0 68 68 0 0 69 69 69 69 69 69 0 0 0 0 69 0 0 0 0 0 69 0 0 0 0 0 0 69 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 0 0 16 0 0 0 0 0 0 0 0 16 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 0 0 0 0 0 97 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 88 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 78 79 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 38 38 0 0 0 0 0 0 0 38 38 38 38 38 38 38 38 38 38 0 0 0 0 38 0 0 37 0 0 38 0 0 0 0 0 0 38 0 
0 0 0 0 0 0 0 0 0 0 0 32 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 13 0 0 0 0 0 0 0 0 13 0 
0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65 65 0 0 0 0 0 0 0 0 0 0 0 64 64 64 64 64 64 0 0 0 0 65 0 0 0 0 0 65 0 0 0 0 0 0 65 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 87 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 0 0 0 0 0 0 0 0 0 50 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 74 75 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 98 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 80 81 83 82 84 85 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 59 59 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0 0 59 59 59 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 73 73 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 73 73 73 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 92 93 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 91 0 0 0 0 0 
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 6 6 
21 22 23 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 24 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 95 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 94 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 95 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 72 72 0 0 0 0 0 0 0 72 72 71 71 72 72 72 72 72 72 0 0 0 0 72 0 0 0 0 0 72 0 0 0 0 0 0 72 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 41 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 26 25 0 0 0 25 25 25 0 0 0 0 0 0 0 0 0 25 0 25 0 26 0 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 25 0 0 0 0 0 0 25 0 0 26 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 67 67 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 67 67 67 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 63 63 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 63 63 63 0 0 0 0 
over
<program> -->  <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> -->
<moduleDeclarations> -->  <moduleDeclaration> --> <moduleDeclarations> -->
<moduleDeclarations> -->  e -->
<moduleDeclaration> -->  DECLARE --> MODULE --> ID --> SEMICOL -->
<otherModules> -->  <module> --> <otherModules> -->
<otherModules> -->  e -->
<driverModule> -->  DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> -->
<module> -->  DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> -->
<ret> -->  RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL -->
<ret> -->  e -->
<input_plist> -->  ID --> COLON --> <dataType> --> <input_plist_ex> -->
<input_plist_ex> -->  COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> -->
<input_plist_ex> -->  e -->
<output_plist> -->  ID --> COLON --> <type> --> <output_plist_ex> -->
<output_plist_ex> -->  COMMA --> ID --> COLON --> <type> --> <output_plist_ex> -->
<output_plist_ex> -->  e -->
<dataType> -->  INTEGER -->
<dataType> -->  REAL -->
<dataType> -->  BOOLEAN -->
<dataType> -->  ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> -->
<type> -->  INTEGER -->
<type> -->  REAL -->
<type> -->  BOOLEAN -->
<moduleDef> -->  START --> <statements> --> END -->
<statements> -->  <statement> --> <statements> -->
<statements> -->  e -->
<statement> -->  <ioStmt> -->
<statement> -->  <simpleStmt> -->
<statement> -->  <declareStmt> -->
<statement> -->  <condionalStmt> -->
<statement> -->  <iterativeStmt> -->
<ioStmt> -->  GET_VALUE --> BO --> ID --> BC --> SEMICOL -->
<ioStmt> -->  PRINT --> BO --> <var> --> BC --> SEMICOL -->
<var> -->  ID --> <whichId> -->
<var> -->  NUM -->
<var> -->  RNUM -->
<whichId> -->  SQBO --> ID --> SQBC -->
<whichId> -->  e -->
<simpleStmt> -->  <assignmentStmt> -->
<simpleStmt> -->  <moduleReuseStmt> -->
<assignmentStmt> -->  ID --> <whichStmt> -->
<whichStmt> -->  <lvalueIDStmt> -->
<whichStmt> -->  <lvalueARRStmt> -->
<lvalueIDStmt> -->  ASSIGNOP --> <expression> --> SEMICOL -->
<lvalueARRStmt> -->  SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL -->
<index> -->  NUM -->
<index> -->  ID -->
<moduleReuseStmt> -->  <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL -->
<optional> -->  SQBO --> <idList> --> SQBC --> ASSIGNOP -->
<optional> -->  e -->
<idList> -->  ID --> <idList_ex> -->
<idList_ex> -->  COMMA --> ID --> <idList_ex> -->
<idList_ex> -->  e -->
<expression> -->  <AOBE> -->
<expression> -->  MINUS --> <BorNBAE> -->
<negOrPosAE> -->  MINUS --> <BorNBAE> -->
<negOrPosAE> -->  <BorNBAE> -->
<BorNBAE> -->  BO --> <arithmeticExpr> --> BC -->
<BorNBAE> -->  <arithmeticExpr> -->
<AOBE> -->  <AnyTerm> --> <WithLogOp> -->
<WithLogOp> -->  <logicalOp> --> <AnyTerm> --> <WithLogOp> -->
<WithLogOp> -->  e -->
<AnyTerm> -->  <arithmeticExpr> --> <WithRelOp> -->
<WithRelOp> -->  <relationalOp> --> <negOrPosAE> --> <WithRelOp> -->
<WithRelOp> -->  e -->
<AOBE> -->  BO --> <AOBE> --> BC --> <AnyTerm> --> <WithLogOp> -->
<arithmeticExpr> -->  <term> --> <N4> -->
<N4> -->  <op1> --> <term> --> <N4> -->
<N4> -->  e -->
<term> -->  <factor> --> <N5> -->
<N5> -->  <op2> --> <factor> --> <N5> -->
<N5> -->  e -->
<factor> -->  <var> -->
<op1> -->  PLUS -->
<op1> -->  MINUS -->
<op2> -->  MUL -->
<op2> -->  DIV -->
<logicalOp> -->  AND -->
<logicalOp> -->  OR -->
<relationalOp> -->  LT -->
<relationalOp> -->  LE -->
<relationalOp> -->  GT -->
<relationalOp> -->  GE -->
<relationalOp> -->  EQ -->
<relationalOp> -->  NE -->
<declareStmt> -->  DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL -->
<condionalStmt> -->  SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END -->
<caseStmts> -->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
<MultiCase> -->  CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> -->
<MultiCase> -->  e -->
<value> -->  NUM -->
<value> -->  TRUE -->
<value> -->  FALSE -->
<default> -->  DEFAULT --> COLON --> <statements> --> BREAK --> SEMICOL -->
<default> -->  e -->
<iterativeStmt> -->  FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END -->
<iterativeStmt> -->  WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END -->
<range> -->  NUM --> RANGEOP --> NUM -->
<var> -->  TRUE -->
<var> -->  FALSE -->
In while
NEW TOKEN: DECLARE
Before popping: <program> --> 
After popping: 
inside<program>
24 7
1 4
 <otherModules> --> <driverModule> --> <otherModules> --> <moduleDeclarations> -->
Current NT <otherModules>
Before pushing: 
<program>yo baby
here
<otherModules> --> 
Hi
<otherModules>
After pushing: <otherModules> --> 
 <otherModules> --> <driverModule> --> <otherModules> --> <moduleDeclarations> -->
Current NT <driverModule>
Before pushing: <otherModules> --> 
<program>yo baby
here
<driverModule> --> <otherModules> --> 
Sibling of <driverModule> is <otherModules>
Hi
<driverModule>
After pushing: <driverModule> --> <otherModules> --> 
 <otherModules> --> <driverModule> --> <otherModules> --> <moduleDeclarations> -->
Current NT <otherModules>
Before pushing: <driverModule> --> <otherModules> --> 
<program>yo baby
here
<otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <otherModules> is <driverModule>
Hi
<otherModules>
After pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
 <otherModules> --> <driverModule> --> <otherModules> --> <moduleDeclarations> -->
Current NT <moduleDeclarations>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<program>yo baby
here
<moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <moduleDeclarations> is <otherModules>
Hi
<moduleDeclarations>
Sibling(child) of <program> is <moduleDeclarations>
After pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDeclarations>
41 7
2 2
 <moduleDeclarations> --> <moduleDeclaration> -->
Current NT <moduleDeclarations>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclarations>yo baby
here
<moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<moduleDeclarations>
After pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDeclarations> --> <moduleDeclaration> -->
Current NT <moduleDeclaration>
Before pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclarations>yo baby
here
<moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <moduleDeclaration> is <moduleDeclarations>
Hi
<moduleDeclaration>
Sibling(child) of <moduleDeclarations> is <moduleDeclaration>
After pushing: <moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDeclaration>
44 7
4 4
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT SEMICOL
Before pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT ID
Before pushing: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is SEMICOL
Hi
ID
After pushing: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT MODULE
Before pushing: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT DECLARE
Before pushing: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is MODULE
Hi
DECLARE
Sibling(child) of <moduleDeclaration> is DECLARE
After pushing: DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:2 DECLARE
DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:2 MODULE
MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:2 ID
ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:2 SEMICOL
SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDeclarations>
41 7
2 2
 <moduleDeclarations> --> <moduleDeclaration> -->
Current NT <moduleDeclarations>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclarations>yo baby
here
<moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<moduleDeclarations>
After pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDeclarations> --> <moduleDeclaration> -->
Current NT <moduleDeclaration>
Before pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclarations>yo baby
here
<moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <moduleDeclaration> is <moduleDeclarations>
Hi
<moduleDeclaration>
Sibling(child) of <moduleDeclarations> is <moduleDeclaration>
After pushing: <moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <moduleDeclaration> --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDeclaration>
44 7
4 4
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT SEMICOL
Before pushing: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT ID
Before pushing: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is SEMICOL
Hi
ID
After pushing: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT MODULE
Before pushing: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> ID --> MODULE --> DECLARE -->
Current NT DECLARE
Before pushing: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclaration>yo baby
here
DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is MODULE
Hi
DECLARE
Sibling(child) of <moduleDeclaration> is DECLARE
After pushing: DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:3 DECLARE
DECLARE --> MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:3 MODULE
MODULE --> ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:3 ID
ID --> SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:3 SEMICOL
SEMICOL --> <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DEF
Before popping: <moduleDeclarations> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDeclarations>
41 40
3 1
 e -->
Current NT e
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDeclarations>yo baby
here
e --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <moduleDeclarations> is e
After pushing: e --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DEF line:6 e
e --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <driverModule> --> <otherModules> --> 
inside<otherModules>
42 40
5 2
 <otherModules> --> <module> -->
Current NT <otherModules>
Before pushing: <driverModule> --> <otherModules> --> 
<otherModules>yo baby
here
<otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<otherModules>
After pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
 <otherModules> --> <module> -->
Current NT <module>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<otherModules>yo baby
here
<module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <module> is <otherModules>
Hi
<module>
Sibling(child) of <otherModules> is <module>
After pushing: <module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<module>
14 40
8 12
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <moduleDef>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<moduleDef>
After pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <ret>
Before pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <ret> is <moduleDef>
Hi
<ret>
After pushing: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SEMICOL
Before pushing: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <ret>
Hi
SEMICOL
After pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBC
Before pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <input_plist>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <input_plist> is SQBC
Hi
<input_plist>
After pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBO
Before pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <input_plist>
Hi
SQBO
After pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT INPUT
Before pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of INPUT is SQBO
Hi
INPUT
After pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT TAKES
Before pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of TAKES is INPUT
Hi
TAKES
After pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ENDDEF
Before pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ENDDEF is TAKES
Hi
ENDDEF
After pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ID
Before pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is ENDDEF
Hi
ID
After pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT MODULE
Before pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT DEF
Before pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DEF is MODULE
Hi
DEF
Sibling(child) of <module> is DEF
After pushing: DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DEF line:6 DEF
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:6 MODULE
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:6 ID
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ENDDEF
Matching ENDDEF line:6 ENDDEF
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: TAKES
Matching TAKES line:7 TAKES
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INPUT
Matching INPUT line:7 INPUT
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:7 SQBO
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist>
18 54
11 4
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <input_plist> is ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:7 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:7 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ARRAY
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 4
20 6
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <type>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
<type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<type>
After pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT OF
Before pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of OF is <type>
Hi
OF
After pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBC
Before pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is OF
Hi
SQBC
After pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <range>
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
<range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <range> is SQBC
Hi
<range>
After pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBO
Before pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <range>
Hi
SQBO
After pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT ARRAY
Before pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ARRAY is SQBO
Hi
ARRAY
Sibling(child) of <dataType> is ARRAY
After pushing: ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ARRAY line:7 ARRAY
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:7 SQBO
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching NUM line:7 NUM
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:7 RANGEOP
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:7 NUM
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:7 SQBC
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: OF
Matching OF line:7 OF
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<type>yo baby
here
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching REAL line:7 REAL
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist_ex>
30 45
12 5
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <input_plist_ex> is COMMA
After pushing: COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COMMA line:7 COMMA
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:7 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:7 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching INTEGER line:7 INTEGER
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist_ex>
30 48
13 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <input_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:7 e
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:7 SQBC
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:7 SEMICOL
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RETURNS
Before popping: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ret>
31 20
9 5
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SEMICOL
Before pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SQBC
Before pushing: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT <output_plist>
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
<output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <output_plist> is SQBC
Hi
<output_plist>
After pushing: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SQBO
Before pushing: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <output_plist>
Hi
SQBO
After pushing: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT RETURNS
Before pushing: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RETURNS is SQBO
Hi
RETURNS
Sibling(child) of <ret> is RETURNS
After pushing: RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching RETURNS line:8 RETURNS
RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:8 SQBO
SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<output_plist>
1 54
14 4
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT <output_plist_ex>
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
<output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<output_plist_ex>
After pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT <type>
Before pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
<type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <type> is <output_plist_ex>
Hi
<type>
After pushing: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT COLON
Before pushing: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <type>
Hi
COLON
After pushing: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <output_plist> is ID
After pushing: ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:8 ID
ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:8 COLON
COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<type>yo baby
here
REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching REAL line:8 REAL
REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<output_plist_ex>
22 48
16 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <output_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:8 e
e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:8 SQBC
SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:8 SEMICOL
SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Before popping: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDef>
45 5
24 3
 END --> <statements> --> START -->
Current NT END
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
END
After pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT START
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
Sibling(child) of <moduleDef> is START
After pushing: START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching START line:9 START
START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:10 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:10 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:10 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:10 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching INTEGER line:10 INTEGER
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:10 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:11 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:11 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:11 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:11 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BOOLEAN
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 2
19 1
 BOOLEAN -->
Current NT BOOLEAN
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
BOOLEAN
Sibling(child) of <dataType> is BOOLEAN
After pushing: BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BOOLEAN line:11 BOOLEAN
BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:11 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:12 ID
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:12 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RNUM
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 52
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 52
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 52
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 52
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 52
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 52
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 52
36 1
 RNUM -->
Current NT RNUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
RNUM
Sibling(child) of <var> is RNUM
After pushing: RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching RNUM line:12 RNUM
RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:12 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:12 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:12 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:12 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:12 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: FOR
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 23
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 23
31 1
 <iterativeStmt> -->
Current NT <iterativeStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<iterativeStmt>
Sibling(child) of <statement> is <iterativeStmt>
After pushing: <iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<iterativeStmt>
25 23
96 9
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT END
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
END
After pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT START
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
After pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT BC
Before pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is START
Hi
BC
After pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT <range>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
<range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <range> is BC
Hi
<range>
After pushing: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT IN
Before pushing: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of IN is <range>
Hi
IN
After pushing: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT ID
Before pushing: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is IN
Hi
ID
After pushing: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT BO
Before pushing: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT FOR
Before pushing: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of FOR is BO
Hi
FOR
Sibling(child) of <iterativeStmt> is FOR
After pushing: FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching FOR line:13 FOR
FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:13 BO
BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:13 ID
ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: IN
Matching IN line:13 IN
IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching NUM line:13 NUM
NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:13 RANGEOP
RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:13 NUM
NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:13 BC
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Matching START line:14 START
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:15 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:15 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:15 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: LE
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 35
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:15 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 35
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:15 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 35
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:15 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 35
64 3
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <negOrPosAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <negOrPosAE> is <WithRelOp>
Hi
<negOrPosAE>
After pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <relationalOp>
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <relationalOp> is <negOrPosAE>
Hi
<relationalOp>
Sibling(child) of <WithRelOp> is <relationalOp>
After pushing: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<relationalOp>
37 35
81 1
 LE -->
Current NT LE
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<relationalOp>yo baby
here
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
LE
Sibling(child) of <relationalOp> is LE
After pushing: LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:15 LE
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<negOrPosAE>
16 54
57 1
 <BorNBAE> -->
Current NT <BorNBAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<negOrPosAE>yo baby
here
<BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<BorNBAE>
Sibling(child) of <negOrPosAE> is <BorNBAE>
After pushing: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<BorNBAE>
38 54
59 1
 <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<BorNBAE>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<arithmeticExpr>
Sibling(child) of <BorNBAE> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:15 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SWITCH
error: rule not found 404 NT: <whichId> and T: SWITCH
In while
NEW TOKEN: BO
error: rule not found 404 NT: <whichId> and T: BO
In while
NEW TOKEN: ID
error: rule not found 404 NT: <whichId> and T: ID
In while
NEW TOKEN: BC
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 50
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 50
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 50
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 50
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:16 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: BC
In while
NEW TOKEN: START
Matching START line:17 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: START
In while
NEW TOKEN: CASE
Matching CASE line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: CASE
In while
NEW TOKEN: TRUE
Matching TRUE line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: TRUE
In while
NEW TOKEN: COLON
Matching COLON line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: COLON
In while
NEW TOKEN: PRINT
Matching PRINT line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: ID
In while
NEW TOKEN: SQBO
Matching SQBO line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: SQBO
In while
NEW TOKEN: ID
Matching ID line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: ID
In while
NEW TOKEN: SQBC
Matching SQBC line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: SQBC
In while
NEW TOKEN: BC
Matching BC line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: SEMICOL and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:18 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:19 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:19 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:19 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PLUS
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 30
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:19 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 30
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:19 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 30
68 3
 <N4> --> <term> --> <op1> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <op1>
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <op1> is <term>
Hi
<op1>
Sibling(child) of <N4> is <op1>
After pushing: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<op1>
35 30
74 1
 PLUS -->
Current NT PLUS
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<op1>yo baby
here
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
PLUS
Sibling(child) of <op1> is PLUS
After pushing: PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:19 PLUS
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:19 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 47
37 3
 SQBC --> ID --> SQBO -->
Current NT SQBC
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SQBC
After pushing: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT ID
Before pushing: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is SQBC
Hi
ID
After pushing: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT SQBO
Before pushing: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is ID
Hi
SQBO
Sibling(child) of <whichId> is SQBO
After pushing: SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBO line:19 SQBO
SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:19 ID
ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:19 SQBC
SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:19 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:19 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:19 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:19 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:19 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BREAK
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 27
26 1
 e -->
Current NT e
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:20 e
e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:20 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BREAK
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:20 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: CASE
Matching CASE line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: CASE
In while
NEW TOKEN: FALSE
Matching FALSE line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: FALSE
In while
NEW TOKEN: COLON
Matching COLON line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: COLON
In while
NEW TOKEN: PRINT
Matching PRINT line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:21 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: PRINT
Matching PRINT line:22 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:22 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:22 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:22 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:22 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: BREAK
Matching BREAK line:24 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BREAK
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:24 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: CASE
Matching CASE line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: CASE
In while
NEW TOKEN: FALSE
Matching FALSE line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: FALSE
In while
NEW TOKEN: COLON
Matching COLON line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: COLON
In while
NEW TOKEN: PRINT
Matching PRINT line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:25 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: PRINT
Matching PRINT line:26 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:26 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:26 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:26 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:26 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: BREAK
Matching BREAK line:28 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BREAK
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:28 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: CASE
Matching CASE line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: CASE
In while
NEW TOKEN: FALSE
Matching FALSE line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: FALSE
In while
NEW TOKEN: COLON
Matching COLON line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: COLON
In while
NEW TOKEN: PRINT
Matching PRINT line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:30 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: PRINT
Matching PRINT line:31 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: PRINT
In while
NEW TOKEN: BO
Matching BO line:31 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BO
In while
NEW TOKEN: ID
Matching ID line:31 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: ID
In while
NEW TOKEN: BC
Matching BC line:31 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BC
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:31 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: BREAK
Matching BREAK line:33 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: BREAK
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:33 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
error 404 in matching terminal: END and terminal: SEMICOL
In while
NEW TOKEN: END
Matching END line:34 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:36 e
e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:36 END
END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
error: rule not found 404 NT: <otherModules> and T: PRINT
In while
NEW TOKEN: BO
error: rule not found 404 NT: <otherModules> and T: BO
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: BC
error: rule not found 404 NT: <otherModules> and T: BC
In while
NEW TOKEN: SEMICOL
error: rule not found 404 NT: <otherModules> and T: SEMICOL
In while
NEW TOKEN: END
error: rule not found 404 NT: <otherModules> and T: END
In while
NEW TOKEN: DEF
Before popping: <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <driverModule> --> <otherModules> --> 
inside<otherModules>
42 40
5 2
 <otherModules> --> <module> -->
Current NT <otherModules>
Before pushing: <driverModule> --> <otherModules> --> 
<otherModules>yo baby
here
<otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<otherModules>
After pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
 <otherModules> --> <module> -->
Current NT <module>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<otherModules>yo baby
here
<module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <module> is <otherModules>
Hi
<module>
Sibling(child) of <otherModules> is <module>
After pushing: <module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <module> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<module>
14 40
8 12
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <moduleDef>
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<moduleDef>
After pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <ret>
Before pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <ret> is <moduleDef>
Hi
<ret>
After pushing: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SEMICOL
Before pushing: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <ret>
Hi
SEMICOL
After pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBC
Before pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <input_plist>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
<input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <input_plist> is SQBC
Hi
<input_plist>
After pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBO
Before pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <input_plist>
Hi
SQBO
After pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT INPUT
Before pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of INPUT is SQBO
Hi
INPUT
After pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT TAKES
Before pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of TAKES is INPUT
Hi
TAKES
After pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ENDDEF
Before pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ENDDEF is TAKES
Hi
ENDDEF
After pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ID
Before pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is ENDDEF
Hi
ID
After pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT MODULE
Before pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT DEF
Before pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<module>yo baby
here
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DEF is MODULE
Hi
DEF
Sibling(child) of <module> is DEF
After pushing: DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DEF line:39 DEF
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:39 MODULE
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:39 ID
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ENDDEF
Matching ENDDEF line:39 ENDDEF
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: TAKES
Matching TAKES line:40 TAKES
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INPUT
Matching INPUT line:40 INPUT
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:40 SQBO
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist>
18 54
11 4
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <input_plist> is ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:40 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:40 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ARRAY
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 4
20 6
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <type>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
<type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<type>
After pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT OF
Before pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of OF is <type>
Hi
OF
After pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBC
Before pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is OF
Hi
SQBC
After pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <range>
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
<range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <range> is SQBC
Hi
<range>
After pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBO
Before pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <range>
Hi
SQBO
After pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT ARRAY
Before pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ARRAY is SQBO
Hi
ARRAY
Sibling(child) of <dataType> is ARRAY
After pushing: ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ARRAY line:40 ARRAY
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:40 SQBO
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching NUM line:40 NUM
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:40 RANGEOP
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:40 NUM
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:40 SQBC
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: OF
Matching OF line:40 OF
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<type>yo baby
here
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching REAL line:40 REAL
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist_ex>
30 45
12 5
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <input_plist_ex> is COMMA
After pushing: COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COMMA line:40 COMMA
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:40 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:40 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching INTEGER line:40 INTEGER
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<input_plist_ex>
30 48
13 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<input_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <input_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:40 e
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:40 SQBC
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:40 SEMICOL
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RETURNS
Before popping: <ret> --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ret>
31 20
9 5
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SEMICOL
Before pushing: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SQBC
Before pushing: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT <output_plist>
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
<output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <output_plist> is SQBC
Hi
<output_plist>
After pushing: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT SQBO
Before pushing: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is <output_plist>
Hi
SQBO
After pushing: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> SQBC --> <output_plist> --> SQBO --> RETURNS -->
Current NT RETURNS
Before pushing: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ret>yo baby
here
RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RETURNS is SQBO
Hi
RETURNS
Sibling(child) of <ret> is RETURNS
After pushing: RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching RETURNS line:41 RETURNS
RETURNS --> SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:41 SQBO
SQBO --> <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <output_plist> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<output_plist>
1 54
14 4
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT <output_plist_ex>
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
<output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<output_plist_ex>
After pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT <type>
Before pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
<type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <type> is <output_plist_ex>
Hi
<type>
After pushing: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT COLON
Before pushing: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <type>
Hi
COLON
After pushing: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <output_plist_ex> --> <type> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist>yo baby
here
ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <output_plist> is ID
After pushing: ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:41 ID
ID --> COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:41 COLON
COLON --> <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<type>yo baby
here
REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching REAL line:41 REAL
REAL --> <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <output_plist_ex> --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<output_plist_ex>
22 48
16 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
<output_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <output_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:41 e
e --> SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBC line:41 SQBC
SQBC --> SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:41 SEMICOL
SEMICOL --> <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Before popping: <moduleDef> --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> <driverModule> --> <otherModules> --> 
inside<moduleDef>
45 5
24 3
 END --> <statements> --> START -->
Current NT END
Before pushing: <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
END
After pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT START
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<moduleDef>yo baby
here
START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
Sibling(child) of <moduleDef> is START
After pushing: START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching START line:42 START
START --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:43 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:43 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:43 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:43 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching INTEGER line:43 INTEGER
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:43 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching DECLARE line:44 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:44 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:44 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching COLON line:44 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BOOLEAN
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<dataType>
17 2
19 1
 BOOLEAN -->
Current NT BOOLEAN
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<dataType>yo baby
here
BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
BOOLEAN
Sibling(child) of <dataType> is BOOLEAN
After pushing: BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BOOLEAN line:44 BOOLEAN
BOOLEAN --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:44 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:45 ID
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:45 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RNUM
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 52
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 52
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 52
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 52
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 52
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 52
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 52
36 1
 RNUM -->
Current NT RNUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
RNUM
Sibling(child) of <var> is RNUM
After pushing: RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching RNUM line:45 RNUM
RNUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:45 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:45 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:45 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:45 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:45 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: FOR
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 23
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 23
31 1
 <iterativeStmt> -->
Current NT <iterativeStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<iterativeStmt>
Sibling(child) of <statement> is <iterativeStmt>
After pushing: <iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <iterativeStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<iterativeStmt>
25 23
96 9
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT END
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
END
After pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT START
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
After pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT BC
Before pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is START
Hi
BC
After pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT <range>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
<range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <range> is BC
Hi
<range>
After pushing: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT IN
Before pushing: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of IN is <range>
Hi
IN
After pushing: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT ID
Before pushing: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is IN
Hi
ID
After pushing: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT BO
Before pushing: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <range> --> IN --> ID --> BO --> FOR -->
Current NT FOR
Before pushing: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<iterativeStmt>yo baby
here
FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of FOR is BO
Hi
FOR
Sibling(child) of <iterativeStmt> is FOR
After pushing: FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching FOR line:46 FOR
FOR --> BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:46 BO
BO --> ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:46 ID
ID --> IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: IN
Matching IN line:46 IN
IN --> <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching NUM line:46 NUM
NUM --> RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:46 RANGEOP
RANGEOP --> NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:46 NUM
NUM --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:46 BC
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Matching START line:47 START
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:48 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:48 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:48 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: LE
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 35
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:48 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 35
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:48 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 35
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:48 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 35
64 3
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <negOrPosAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <negOrPosAE> is <WithRelOp>
Hi
<negOrPosAE>
After pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <relationalOp>
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
<relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <relationalOp> is <negOrPosAE>
Hi
<relationalOp>
Sibling(child) of <WithRelOp> is <relationalOp>
After pushing: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<relationalOp>
37 35
81 1
 LE -->
Current NT LE
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<relationalOp>yo baby
here
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
LE
Sibling(child) of <relationalOp> is LE
After pushing: LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching LE line:48 LE
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<negOrPosAE>
16 54
57 1
 <BorNBAE> -->
Current NT <BorNBAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<negOrPosAE>yo baby
here
<BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<BorNBAE>
Sibling(child) of <negOrPosAE> is <BorNBAE>
After pushing: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<BorNBAE>
38 54
59 1
 <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<BorNBAE>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<arithmeticExpr>
Sibling(child) of <BorNBAE> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:48 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 44
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:48 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SWITCH
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 25
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 25
30 1
 <condionalStmt> -->
Current NT <condionalStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<condionalStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<condionalStmt>
Sibling(child) of <statement> is <condionalStmt>
After pushing: <condionalStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <condionalStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<condionalStmt>
33 25
87 8
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT END
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
END
After pushing: END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT <default>
Before pushing: END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
<default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <default> is END
Hi
<default>
After pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT <caseStmts>
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
<caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <caseStmts> is <default>
Hi
<caseStmts>
After pushing: <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT START
Before pushing: <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of START is <caseStmts>
Hi
START
After pushing: START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT BC
Before pushing: START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is START
Hi
BC
After pushing: BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT ID
Before pushing: BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is BC
Hi
ID
After pushing: ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT BO
Before pushing: ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 END --> <default> --> <caseStmts> --> START --> BC --> ID --> BO --> SWITCH -->
Current NT SWITCH
Before pushing: BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<condionalStmt>yo baby
here
SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SWITCH is BO
Hi
SWITCH
Sibling(child) of <condionalStmt> is SWITCH
After pushing: SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SWITCH line:49 SWITCH
SWITCH --> BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:49 BO
BO --> ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:49 ID
ID --> BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:49 BC
BC --> START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Matching START line:50 START
START --> <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: CASE
Before popping: <caseStmts> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<caseStmts>
26 26
88 7
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <MultiCase>
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
<MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<MultiCase>
After pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT SEMICOL
Before pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <MultiCase>
Hi
SEMICOL
After pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT BREAK
Before pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BREAK is SEMICOL
Hi
BREAK
After pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is BREAK
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT COLON
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <statements>
Hi
COLON
After pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <value>
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
<value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <value> is COLON
Hi
<value>
After pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT CASE
Before pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<caseStmts>yo baby
here
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of CASE is <value>
Hi
CASE
Sibling(child) of <caseStmts> is CASE
After pushing: CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching CASE line:51 CASE
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: TRUE
Before popping: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<value>
40 16
92 1
 TRUE -->
Current NT TRUE
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<value>yo baby
here
TRUE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
TRUE
Sibling(child) of <value> is TRUE
After pushing: TRUE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching TRUE line:51 TRUE
TRUE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:51 COLON
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:51 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:51 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:51 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 47
37 3
 SQBC --> ID --> SQBO -->
Current NT SQBC
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SQBC
After pushing: SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT ID
Before pushing: SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is SQBC
Hi
ID
After pushing: ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT SQBO
Before pushing: ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBO --> ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is ID
Hi
SQBO
Sibling(child) of <whichId> is SQBO
After pushing: SQBO --> ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBO line:51 SQBO
SQBO --> ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:51 ID
ID --> SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:51 SQBC
SQBC --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:51 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:51 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:52 ID
ID --> <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ASSIGNOP line:52 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:52 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PLUS
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 30
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:52 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 30
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:52 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 30
68 3
 <N4> --> <term> --> <op1> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <op1>
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
<op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <op1> is <term>
Hi
<op1>
Sibling(child) of <N4> is <op1>
After pushing: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<op1>
35 30
74 1
 PLUS -->
Current NT PLUS
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<op1>yo baby
here
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
PLUS
Sibling(child) of <op1> is PLUS
After pushing: PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PLUS line:52 PLUS
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:52 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 47
37 3
 SQBC --> ID --> SQBO -->
Current NT SQBC
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SQBC
After pushing: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT ID
Before pushing: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is SQBC
Hi
ID
After pushing: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SQBC --> ID --> SQBO -->
Current NT SQBO
Before pushing: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SQBO is ID
Hi
SQBO
Sibling(child) of <whichId> is SQBO
After pushing: SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SQBO line:52 SQBO
SQBO --> ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:52 ID
ID --> SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:52 SQBC
SQBC --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:52 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:52 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:52 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:52 e
e --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching SEMICOL line:52 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BREAK
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 27
26 1
 e -->
Current NT e
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:53 e
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:53 BREAK
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:53 SEMICOL
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: CASE
Before popping: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<MultiCase>
9 26
89 7
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <MultiCase>
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<MultiCase>
After pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT SEMICOL
Before pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <MultiCase>
Hi
SEMICOL
After pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT BREAK
Before pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BREAK is SEMICOL
Hi
BREAK
After pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is BREAK
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT COLON
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <statements>
Hi
COLON
After pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <value>
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <value> is COLON
Hi
<value>
After pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT CASE
Before pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of CASE is <value>
Hi
CASE
Sibling(child) of <MultiCase> is CASE
After pushing: CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching CASE line:54 CASE
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: FALSE
Before popping: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<value>
40 17
93 1
 FALSE -->
Current NT FALSE
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<value>yo baby
here
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
FALSE
Sibling(child) of <value> is FALSE
After pushing: FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching FALSE line:54 FALSE
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:54 COLON
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:54 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:54 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:54 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:54 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:54 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:54 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:55 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:55 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:55 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:55 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:55 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:55 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BREAK
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 27
26 1
 e -->
Current NT e
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:57 e
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:57 BREAK
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:57 SEMICOL
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: CASE
Before popping: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<MultiCase>
9 26
89 7
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <MultiCase>
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<MultiCase>
After pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT SEMICOL
Before pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <MultiCase>
Hi
SEMICOL
After pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT BREAK
Before pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BREAK is SEMICOL
Hi
BREAK
After pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is BREAK
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT COLON
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <statements>
Hi
COLON
After pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <value>
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <value> is COLON
Hi
<value>
After pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT CASE
Before pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of CASE is <value>
Hi
CASE
Sibling(child) of <MultiCase> is CASE
After pushing: CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching CASE line:58 CASE
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: FALSE
Before popping: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<value>
40 17
93 1
 FALSE -->
Current NT FALSE
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<value>yo baby
here
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
FALSE
Sibling(child) of <value> is FALSE
After pushing: FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching FALSE line:58 FALSE
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:58 COLON
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:58 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:58 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:58 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:58 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:58 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:58 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:59 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:59 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:59 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:59 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:59 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:59 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BREAK
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 27
26 1
 e -->
Current NT e
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:61 e
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:61 BREAK
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:61 SEMICOL
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: CASE
Before popping: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<MultiCase>
9 26
89 7
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <MultiCase>
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<MultiCase>
After pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT SEMICOL
Before pushing: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of SEMICOL is <MultiCase>
Hi
SEMICOL
After pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT BREAK
Before pushing: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BREAK is SEMICOL
Hi
BREAK
After pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statements> is BREAK
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT COLON
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of COLON is <statements>
Hi
COLON
After pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT <value>
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
<value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <value> is COLON
Hi
<value>
After pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <MultiCase> --> SEMICOL --> BREAK --> <statements> --> COLON --> <value> --> CASE -->
Current NT CASE
Before pushing: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of CASE is <value>
Hi
CASE
Sibling(child) of <MultiCase> is CASE
After pushing: CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching CASE line:63 CASE
CASE --> <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: FALSE
Before popping: <value> --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<value>
40 17
93 1
 FALSE -->
Current NT FALSE
Before pushing: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<value>yo baby
here
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
FALSE
Sibling(child) of <value> is FALSE
After pushing: FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching FALSE line:63 FALSE
FALSE --> COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:63 COLON
COLON --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:63 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:63 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:63 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:63 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:63 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:63 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:64 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:64 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:64 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:64 e
e --> BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:64 BC
BC --> SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:64 SEMICOL
SEMICOL --> <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BREAK
Before popping: <statements> --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 27
26 1
 e -->
Current NT e
Before pushing: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:66 e
e --> BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BREAK line:66 BREAK
BREAK --> SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:66 SEMICOL
SEMICOL --> <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <MultiCase> --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<MultiCase>
9 6
90 1
 e -->
Current NT e
Before pushing: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<MultiCase>yo baby
here
e --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <MultiCase> is e
After pushing: e --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:67 e
e --> <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <default> --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<default>
46 6
95 1
 e -->
Current NT e
Before pushing: END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<default>yo baby
here
e --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <default> is e
After pushing: e --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:67 e
e --> END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:67 END
END --> <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:69 e
e --> END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:69 END
END --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching PRINT line:70 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:70 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching ID line:70 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:70 e
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching BC line:70 BC
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:70 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:71 e
e --> END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching e case: END --> <otherModules> --> <driverModule> --> <otherModules> --> 
In while
Matching END line:71 END
END --> <otherModules> --> <driverModule> --> <otherModules> --> 
After matching normal: <otherModules> --> <driverModule> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DRIVERDEF
Before popping: <otherModules> --> <driverModule> --> <otherModules> --> 
After popping: <driverModule> --> <otherModules> --> 
inside<otherModules>
42 55
6 1
 e -->
Current NT e
Before pushing: <driverModule> --> <otherModules> --> 
<otherModules>yo baby
here
e --> <driverModule> --> <otherModules> --> 
Hi
e
Sibling(child) of <otherModules> is e
After pushing: e --> <driverModule> --> <otherModules> --> 
In while
Matching DRIVERDEF line:72 e
e --> <driverModule> --> <otherModules> --> 
After matching e case: <driverModule> --> <otherModules> --> 
In while
Before popping: <driverModule> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<driverModule>
23 55
7 5
 <moduleDef> --> DRIVERENDDEF --> PROGRAM --> DRIVER --> DRIVERDEF -->
Current NT <moduleDef>
Before pushing: <otherModules> --> 
<driverModule>yo baby
here
<moduleDef> --> <otherModules> --> 
Hi
<moduleDef>
After pushing: <moduleDef> --> <otherModules> --> 
 <moduleDef> --> DRIVERENDDEF --> PROGRAM --> DRIVER --> DRIVERDEF -->
Current NT DRIVERENDDEF
Before pushing: <moduleDef> --> <otherModules> --> 
<driverModule>yo baby
here
DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
Sibling of DRIVERENDDEF is <moduleDef>
Hi
DRIVERENDDEF
After pushing: DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> DRIVERENDDEF --> PROGRAM --> DRIVER --> DRIVERDEF -->
Current NT PROGRAM
Before pushing: DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
<driverModule>yo baby
here
PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
Sibling of PROGRAM is DRIVERENDDEF
Hi
PROGRAM
After pushing: PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> DRIVERENDDEF --> PROGRAM --> DRIVER --> DRIVERDEF -->
Current NT DRIVER
Before pushing: PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
<driverModule>yo baby
here
DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
Sibling of DRIVER is PROGRAM
Hi
DRIVER
After pushing: DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> DRIVERENDDEF --> PROGRAM --> DRIVER --> DRIVERDEF -->
Current NT DRIVERDEF
Before pushing: DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
<driverModule>yo baby
here
DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
Sibling of DRIVERDEF is DRIVER
Hi
DRIVERDEF
Sibling(child) of <driverModule> is DRIVERDEF
After pushing: DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
In while
Matching DRIVERDEF line:72 DRIVERDEF
DRIVERDEF --> DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
After matching normal: DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DRIVER
Matching DRIVER line:72 DRIVER
DRIVER --> PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
After matching normal: PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: PROGRAM
Matching PROGRAM line:72 PROGRAM
PROGRAM --> DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
After matching normal: DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: DRIVERENDDEF
Matching DRIVERENDDEF line:72 DRIVERENDDEF
DRIVERENDDEF --> <moduleDef> --> <otherModules> --> 
After matching normal: <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Before popping: <moduleDef> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<moduleDef>
45 5
24 3
 END --> <statements> --> START -->
Current NT END
Before pushing: <otherModules> --> 
<moduleDef>yo baby
here
END --> <otherModules> --> 
Hi
END
After pushing: END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<moduleDef>yo baby
here
<statements> --> END --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT START
Before pushing: <statements> --> END --> <otherModules> --> 
<moduleDef>yo baby
here
START --> <statements> --> END --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
Sibling(child) of <moduleDef> is START
After pushing: START --> <statements> --> END --> <otherModules> --> 
In while
Matching START line:73 START
START --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:74 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:74 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:74 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:74 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ARRAY
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 4
20 6
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <type>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
<type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<type>
After pushing: <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT OF
Before pushing: <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of OF is <type>
Hi
OF
After pushing: OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBC
Before pushing: OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of SQBC is OF
Hi
SQBC
After pushing: SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <range>
Before pushing: SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
<range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <range> is SQBC
Hi
<range>
After pushing: <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBO
Before pushing: <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of SQBO is <range>
Hi
SQBO
After pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT ARRAY
Before pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ARRAY is SQBO
Hi
ARRAY
Sibling(child) of <dataType> is ARRAY
After pushing: ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ARRAY line:74 ARRAY
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:74 SQBO
SQBO --> <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<range>yo baby
here
NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching NUM line:74 NUM
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:74 RANGEOP
RANGEOP --> NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:74 NUM
NUM --> SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:74 SQBC
SQBC --> OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: OF
Matching OF line:74 OF
OF --> <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<type>yo baby
here
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching REAL line:74 REAL
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:74 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:75 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:75 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:75 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:75 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching INTEGER line:75 INTEGER
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:75 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:76 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:76 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:76 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:76 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 1
18 1
 REAL -->
Current NT REAL
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
REAL
Sibling(child) of <dataType> is REAL
After pushing: REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching REAL line:76 REAL
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:76 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: GET_VALUE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 11
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 11
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 11
32 5
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT ID
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is BC
Hi
ID
After pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BO
Before pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT GET_VALUE
Before pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of GET_VALUE is BO
Hi
GET_VALUE
Sibling(child) of <ioStmt> is GET_VALUE
After pushing: GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching GET_VALUE line:77 GET_VALUE
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:77 BO
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:77 ID
ID --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:77 BC
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:77 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: USE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 13
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 13
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 13
40 1
 <moduleReuseStmt> -->
Current NT <moduleReuseStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<moduleReuseStmt>
Sibling(child) of <simpleStmt> is <moduleReuseStmt>
After pushing: <moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<moduleReuseStmt>
6 13
48 8
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT <idList>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
<idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is SEMICOL
Hi
<idList>
After pushing: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT PARAMETERS
Before pushing: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of PARAMETERS is <idList>
Hi
PARAMETERS
After pushing: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT WITH
Before pushing: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of WITH is PARAMETERS
Hi
WITH
After pushing: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT ID
Before pushing: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is WITH
Hi
ID
After pushing: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT MODULE
Before pushing: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT USE
Before pushing: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of USE is MODULE
Hi
USE
After pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT <optional>
Before pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
<optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <optional> is USE
Hi
<optional>
Sibling(child) of <moduleReuseStmt> is <optional>
After pushing: <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<optional>
34 13
50 1
 e -->
Current NT e
Before pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<optional>yo baby
here
e --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <optional> is e
After pushing: e --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching USE line:78 e
e --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching USE line:78 USE
USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:78 MODULE
MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:78 ID
ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: WITH
Matching WITH line:78 WITH
WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PARAMETERS
Matching PARAMETERS line:78 PARAMETERS
PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:78 ID
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 45
52 3
 <idList_ex> --> ID --> COMMA -->
Current NT <idList_ex>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
<idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID --> COMMA -->
Current NT ID
Before pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
After pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <idList_ex> is COMMA
After pushing: COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COMMA line:78 COMMA
COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:78 ID
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 44
53 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:78 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:78 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 47
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 47
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 47
40 1
 <moduleReuseStmt> -->
Current NT <moduleReuseStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<moduleReuseStmt>
Sibling(child) of <simpleStmt> is <moduleReuseStmt>
After pushing: <moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <moduleReuseStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<moduleReuseStmt>
6 47
48 8
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT <idList>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
<idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is SEMICOL
Hi
<idList>
After pushing: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT PARAMETERS
Before pushing: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of PARAMETERS is <idList>
Hi
PARAMETERS
After pushing: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT WITH
Before pushing: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of WITH is PARAMETERS
Hi
WITH
After pushing: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT ID
Before pushing: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is WITH
Hi
ID
After pushing: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT MODULE
Before pushing: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT USE
Before pushing: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of USE is MODULE
Hi
USE
After pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <idList> --> PARAMETERS --> WITH --> ID --> MODULE --> USE --> <optional> -->
Current NT <optional>
Before pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<moduleReuseStmt>yo baby
here
<optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <optional> is USE
Hi
<optional>
Sibling(child) of <moduleReuseStmt> is <optional>
After pushing: <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <optional> --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<optional>
34 47
49 4
 ASSIGNOP --> SQBC --> <idList> --> SQBO -->
Current NT ASSIGNOP
Before pushing: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<optional>yo baby
here
ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
ASSIGNOP
After pushing: ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 ASSIGNOP --> SQBC --> <idList> --> SQBO -->
Current NT SQBC
Before pushing: ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<optional>yo baby
here
SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of SQBC is ASSIGNOP
Hi
SQBC
After pushing: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 ASSIGNOP --> SQBC --> <idList> --> SQBO -->
Current NT <idList>
Before pushing: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<optional>yo baby
here
<idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is SQBC
Hi
<idList>
After pushing: <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 ASSIGNOP --> SQBC --> <idList> --> SQBO -->
Current NT SQBO
Before pushing: <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<optional>yo baby
here
SQBO --> <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of SQBO is <idList>
Hi
SQBO
Sibling(child) of <optional> is SQBO
After pushing: SQBO --> <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SQBO line:79 SQBO
SQBO --> <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:79 ID
ID --> <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <idList_ex> --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 48
53 1
 e -->
Current NT e
Before pushing: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SQBC line:79 e
e --> SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SQBC line:79 SQBC
SQBC --> ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Matching ASSIGNOP line:79 ASSIGNOP
ASSIGNOP --> USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: USE
Matching USE line:79 USE
USE --> MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:79 MODULE
MODULE --> ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:79 ID
ID --> WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: WITH
Matching WITH line:79 WITH
WITH --> PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PARAMETERS
Matching PARAMETERS line:79 PARAMETERS
PARAMETERS --> <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:79 ID
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 45
52 3
 <idList_ex> --> ID --> COMMA -->
Current NT <idList_ex>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
<idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID --> COMMA -->
Current NT ID
Before pushing: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
After pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <idList_ex> is COMMA
After pushing: COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COMMA line:79 COMMA
COMMA --> ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:79 ID
ID --> <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <idList_ex> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 44
53 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:79 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:79 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching PRINT line:80 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:80 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:80 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:80 e
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:80 BC
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:80 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <otherModules> --> 
In while
Matching END line:81 e
e --> END --> <otherModules> --> 
After matching e case: END --> <otherModules> --> 
In while
Matching END line:81 END
END --> <otherModules> --> 
After matching normal: <otherModules> --> 
pop done
In while
NEW TOKEN: DEF
Before popping: <otherModules> --> 
After popping: 
inside<otherModules>
42 40
5 2
 <otherModules> --> <module> -->
Current NT <otherModules>
Before pushing: 
<otherModules>yo baby
here
<otherModules> --> 
Hi
<otherModules>
After pushing: <otherModules> --> 
 <otherModules> --> <module> -->
Current NT <module>
Before pushing: <otherModules> --> 
<otherModules>yo baby
here
<module> --> <otherModules> --> 
Sibling of <module> is <otherModules>
Hi
<module>
Sibling(child) of <otherModules> is <module>
After pushing: <module> --> <otherModules> --> 
In while
Before popping: <module> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<module>
14 40
8 12
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <moduleDef>
Before pushing: <otherModules> --> 
<module>yo baby
here
<moduleDef> --> <otherModules> --> 
Hi
<moduleDef>
After pushing: <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <ret>
Before pushing: <moduleDef> --> <otherModules> --> 
<module>yo baby
here
<ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <ret> is <moduleDef>
Hi
<ret>
After pushing: <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SEMICOL
Before pushing: <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SEMICOL is <ret>
Hi
SEMICOL
After pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBC
Before pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <input_plist>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
<input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <input_plist> is SQBC
Hi
<input_plist>
After pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBO
Before pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBO is <input_plist>
Hi
SQBO
After pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT INPUT
Before pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of INPUT is SQBO
Hi
INPUT
After pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT TAKES
Before pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of TAKES is INPUT
Hi
TAKES
After pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ENDDEF
Before pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ENDDEF is TAKES
Hi
ENDDEF
After pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ID
Before pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is ENDDEF
Hi
ID
After pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT MODULE
Before pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT DEF
Before pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of DEF is MODULE
Hi
DEF
Sibling(child) of <module> is DEF
After pushing: DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching DEF line:88 DEF
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:88 MODULE
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:88 ID
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ENDDEF
Matching ENDDEF line:88 ENDDEF
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: TAKES
Matching TAKES line:89 TAKES
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INPUT
Matching INPUT line:89 INPUT
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:89 SQBO
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist>
18 54
11 4
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <input_plist> is ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching ID line:89 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:89 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ARRAY
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<dataType>
17 4
20 6
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <type>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
<type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<type>
After pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT OF
Before pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of OF is <type>
Hi
OF
After pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBC
Before pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBC is OF
Hi
SQBC
After pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <range>
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
<range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <range> is SQBC
Hi
<range>
After pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBO
Before pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBO is <range>
Hi
SQBO
After pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT ARRAY
Before pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ARRAY is SQBO
Hi
ARRAY
Sibling(child) of <dataType> is ARRAY
After pushing: ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching ARRAY line:89 ARRAY
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:89 SQBO
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching NUM line:89 NUM
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:89 RANGEOP
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:89 NUM
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:89 SQBC
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: OF
Matching OF line:89 OF
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<type>yo baby
here
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching REAL line:89 REAL
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist_ex>
30 45
12 5
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <input_plist_ex> is COMMA
After pushing: COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching COMMA line:89 COMMA
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:89 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:89 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching INTEGER line:89 INTEGER
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist_ex>
30 48
13 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
e
Sibling(child) of <input_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching SQBC line:89 e
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching SQBC line:89 SQBC
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:89 SEMICOL
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Before popping: <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <moduleDef> --> <otherModules> --> 
inside<ret>
31 5
10 1
 e -->
Current NT e
Before pushing: <moduleDef> --> <otherModules> --> 
<ret>yo baby
here
e --> <moduleDef> --> <otherModules> --> 
Hi
e
Sibling(child) of <ret> is e
After pushing: e --> <moduleDef> --> <otherModules> --> 
In while
Matching START line:90 e
e --> <moduleDef> --> <otherModules> --> 
After matching e case: <moduleDef> --> <otherModules> --> 
In while
Before popping: <moduleDef> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<moduleDef>
45 5
24 3
 END --> <statements> --> START -->
Current NT END
Before pushing: <otherModules> --> 
<moduleDef>yo baby
here
END --> <otherModules> --> 
Hi
END
After pushing: END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<moduleDef>yo baby
here
<statements> --> END --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT START
Before pushing: <statements> --> END --> <otherModules> --> 
<moduleDef>yo baby
here
START --> <statements> --> END --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
Sibling(child) of <moduleDef> is START
After pushing: START --> <statements> --> END --> <otherModules> --> 
In while
Matching START line:90 START
START --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:91 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:91 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:91 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:91 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 1
18 1
 REAL -->
Current NT REAL
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
REAL
Sibling(child) of <dataType> is REAL
After pushing: REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching REAL line:91 REAL
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:91 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:92 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:92 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:92 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:92 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching INTEGER line:92 INTEGER
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:92 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:93 ID
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ASSIGNOP line:93 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 53
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 53
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 53
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 53
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<term>
12 53
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 53
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<var>
19 53
35 1
 NUM -->
Current NT NUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
NUM
Sibling(child) of <var> is NUM
After pushing: NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching NUM line:93 NUM
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:93 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:93 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:93 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:93 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:93 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: WHILE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 29
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 29
31 1
 <iterativeStmt> -->
Current NT <iterativeStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<iterativeStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<iterativeStmt>
Sibling(child) of <statement> is <iterativeStmt>
After pushing: <iterativeStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <iterativeStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<iterativeStmt>
25 29
97 7
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT END
Before pushing: <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
END --> <statements> --> END --> <otherModules> --> 
Hi
END
After pushing: END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT START
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
After pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT BC
Before pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BC is START
Hi
BC
After pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT <AOBE>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
<AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AOBE> is BC
Hi
<AOBE>
After pushing: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT BO
Before pushing: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BO is <AOBE>
Hi
BO
After pushing: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT WHILE
Before pushing: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of WHILE is BO
Hi
WHILE
Sibling(child) of <iterativeStmt> is WHILE
After pushing: WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching WHILE line:94 WHILE
WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:94 BO
BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:94 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: LE
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 35
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:94 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 35
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:94 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 35
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:94 e
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 35
64 3
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <negOrPosAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <negOrPosAE> is <WithRelOp>
Hi
<negOrPosAE>
After pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <relationalOp>
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <relationalOp> is <negOrPosAE>
Hi
<relationalOp>
Sibling(child) of <WithRelOp> is <relationalOp>
After pushing: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<relationalOp>
37 35
81 1
 LE -->
Current NT LE
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<relationalOp>yo baby
here
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
LE
Sibling(child) of <relationalOp> is LE
After pushing: LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:94 LE
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<negOrPosAE>
16 54
57 1
 <BorNBAE> -->
Current NT <BorNBAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<negOrPosAE>yo baby
here
<BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<BorNBAE>
Sibling(child) of <negOrPosAE> is <BorNBAE>
After pushing: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<BorNBAE>
38 54
59 1
 <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<BorNBAE>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<arithmeticExpr>
Sibling(child) of <BorNBAE> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:94 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 50
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 50
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 e
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 50
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 e
e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 50
62 1
 e -->
Current NT e
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 e
e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:94 BC
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Matching START line:95 START
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: GET_VALUE
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 11
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 11
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 11
32 5
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT ID
Before pushing: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is BC
Hi
ID
After pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BO
Before pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT GET_VALUE
Before pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of GET_VALUE is BO
Hi
GET_VALUE
Sibling(child) of <ioStmt> is GET_VALUE
After pushing: GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching GET_VALUE line:96 GET_VALUE
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:96 BO
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:96 ID
ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:96 BC
BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:96 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:97 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 47
43 1
 <lvalueARRStmt> -->
Current NT <lvalueARRStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueARRStmt>
Sibling(child) of <whichStmt> is <lvalueARRStmt>
After pushing: <lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<lvalueARRStmt>
15 47
45 6
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SQBC
Before pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of SQBC is ASSIGNOP
Hi
SQBC
After pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT <index>
Before pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
<index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <index> is SQBC
Hi
<index>
After pushing: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SQBO
Before pushing: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of SQBO is <index>
Hi
SQBO
Sibling(child) of <lvalueARRStmt> is SQBO
After pushing: SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SQBO line:97 SQBO
SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<index>
13 54
47 1
 ID -->
Current NT ID
Before pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<index>yo baby
here
ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
ID
Sibling(child) of <index> is ID
After pushing: ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:97 ID
ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:97 SQBC
SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Matching ASSIGNOP line:97 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:97 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 44
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:97 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:98 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ASSIGNOP line:98 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:98 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PLUS
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 30
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:98 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 30
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:98 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 30
68 3
 <N4> --> <term> --> <op1> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <op1>
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <op1> is <term>
Hi
<op1>
Sibling(child) of <N4> is <op1>
After pushing: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<op1>
35 30
74 1
 PLUS -->
Current NT PLUS
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<op1>yo baby
here
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
PLUS
Sibling(child) of <op1> is PLUS
After pushing: PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:98 PLUS
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 53
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 53
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 53
35 1
 NUM -->
Current NT NUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
NUM
Sibling(child) of <var> is NUM
After pushing: NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching NUM line:98 NUM
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:98 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:98 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:98 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:98 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:98 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching END line:100 e
e --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: END --> <statements> --> END --> <otherModules> --> 
In while
Matching END line:100 END
END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching PRINT line:101 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:101 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:101 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:101 e
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:101 BC
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:101 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <otherModules> --> 
In while
Matching END line:104 e
e --> END --> <otherModules> --> 
After matching e case: END --> <otherModules> --> 
In while
Matching END line:104 END
END --> <otherModules> --> 
After matching normal: <otherModules> --> 
pop done
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
semantics: This Identifier is too long
NEW TOKEN: OF
error: rule not found 404 NT: <otherModules> and T: OF
In while
NEW TOKEN: WHILE
error: rule not found 404 NT: <otherModules> and T: WHILE
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
increment: This Identifier is too long
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: OF
error: rule not found 404 NT: <otherModules> and T: OF
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
Inappropriate symbol k in line no. 108
NEW TOKEN: ID
error: rule not found 404 NT: <otherModules> and T: ID
In while
bakdfenldsf: This Identifier is too long
NEW TOKEN: DEF
Before popping: <otherModules> --> 
After popping: 
inside<otherModules>
42 40
5 2
 <otherModules> --> <module> -->
Current NT <otherModules>
Before pushing: 
<otherModules>yo baby
here
<otherModules> --> 
Hi
<otherModules>
After pushing: <otherModules> --> 
 <otherModules> --> <module> -->
Current NT <module>
Before pushing: <otherModules> --> 
<otherModules>yo baby
here
<module> --> <otherModules> --> 
Sibling of <module> is <otherModules>
Hi
<module>
Sibling(child) of <otherModules> is <module>
After pushing: <module> --> <otherModules> --> 
In while
Before popping: <module> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<module>
14 40
8 12
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <moduleDef>
Before pushing: <otherModules> --> 
<module>yo baby
here
<moduleDef> --> <otherModules> --> 
Hi
<moduleDef>
After pushing: <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <ret>
Before pushing: <moduleDef> --> <otherModules> --> 
<module>yo baby
here
<ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <ret> is <moduleDef>
Hi
<ret>
After pushing: <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SEMICOL
Before pushing: <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SEMICOL is <ret>
Hi
SEMICOL
After pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBC
Before pushing: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBC is SEMICOL
Hi
SQBC
After pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT <input_plist>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
<input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <input_plist> is SQBC
Hi
<input_plist>
After pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT SQBO
Before pushing: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBO is <input_plist>
Hi
SQBO
After pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT INPUT
Before pushing: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of INPUT is SQBO
Hi
INPUT
After pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT TAKES
Before pushing: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of TAKES is INPUT
Hi
TAKES
After pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ENDDEF
Before pushing: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ENDDEF is TAKES
Hi
ENDDEF
After pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT ID
Before pushing: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is ENDDEF
Hi
ID
After pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT MODULE
Before pushing: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of MODULE is ID
Hi
MODULE
After pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <moduleDef> --> <ret> --> SEMICOL --> SQBC --> <input_plist> --> SQBO --> INPUT --> TAKES --> ENDDEF --> ID --> MODULE --> DEF -->
Current NT DEF
Before pushing: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<module>yo baby
here
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of DEF is MODULE
Hi
DEF
Sibling(child) of <module> is DEF
After pushing: DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching DEF line:110 DEF
DEF --> MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: MODULE
Matching MODULE line:110 MODULE
MODULE --> ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:110 ID
ID --> ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ENDDEF
Matching ENDDEF line:110 ENDDEF
ENDDEF --> TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: TAKES
Matching TAKES line:111 TAKES
TAKES --> INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INPUT
Matching INPUT line:111 INPUT
INPUT --> SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:111 SQBO
SQBO --> <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <input_plist> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist>
18 54
11 4
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
Sibling(child) of <input_plist> is ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching ID line:111 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:111 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ARRAY
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<dataType>
17 4
20 6
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <type>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
<type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<type>
After pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT OF
Before pushing: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of OF is <type>
Hi
OF
After pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBC
Before pushing: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBC is OF
Hi
SQBC
After pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT <range>
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
<range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <range> is SQBC
Hi
<range>
After pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT SQBO
Before pushing: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of SQBO is <range>
Hi
SQBO
After pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <type> --> OF --> SQBC --> <range> --> SQBO --> ARRAY -->
Current NT ARRAY
Before pushing: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ARRAY is SQBO
Hi
ARRAY
Sibling(child) of <dataType> is ARRAY
After pushing: ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching ARRAY line:111 ARRAY
ARRAY --> SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Matching SQBO line:111 SQBO
SQBO --> <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <range> --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<range>
36 53
98 3
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
NUM
After pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT RANGEOP
Before pushing: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of RANGEOP is NUM
Hi
RANGEOP
After pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 NUM --> RANGEOP --> NUM -->
Current NT NUM
Before pushing: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<range>yo baby
here
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of NUM is RANGEOP
Hi
NUM
Sibling(child) of <range> is NUM
After pushing: NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching NUM line:111 NUM
NUM --> RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: RANGEOP
Matching RANGEOP line:111 RANGEOP
RANGEOP --> NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Matching NUM line:111 NUM
NUM --> SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:111 SQBC
SQBC --> OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: OF
Matching OF line:111 OF
OF --> <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <type> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<type>
43 1
22 1
 REAL -->
Current NT REAL
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<type>yo baby
here
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
REAL
Sibling(child) of <type> is REAL
After pushing: REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching REAL line:111 REAL
REAL --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COMMA
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist_ex>
30 45
12 5
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <input_plist_ex>
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
<input_plist_ex>
After pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT <dataType>
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
<dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of <dataType> is <input_plist_ex>
Hi
<dataType>
After pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COLON
Before pushing: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT ID
Before pushing: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of ID is COLON
Hi
ID
After pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
 <input_plist_ex> --> <dataType> --> COLON --> ID --> COMMA -->
Current NT COMMA
Before pushing: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Sibling of COMMA is ID
Hi
COMMA
Sibling(child) of <input_plist_ex> is COMMA
After pushing: COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching COMMA line:111 COMMA
COMMA --> ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:111 ID
ID --> COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Matching COLON line:111 COLON
COLON --> <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching INTEGER line:111 INTEGER
INTEGER --> <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Before popping: <input_plist_ex> --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After popping: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
inside<input_plist_ex>
30 48
13 1
 e -->
Current NT e
Before pushing: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
<input_plist_ex>yo baby
here
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
Hi
e
Sibling(child) of <input_plist_ex> is e
After pushing: e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching SQBC line:111 e
e --> SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching e case: SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
In while
Matching SQBC line:111 SQBC
SQBC --> SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:111 SEMICOL
SEMICOL --> <ret> --> <moduleDef> --> <otherModules> --> 
After matching normal: <ret> --> <moduleDef> --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Before popping: <ret> --> <moduleDef> --> <otherModules> --> 
After popping: <moduleDef> --> <otherModules> --> 
inside<ret>
31 5
10 1
 e -->
Current NT e
Before pushing: <moduleDef> --> <otherModules> --> 
<ret>yo baby
here
e --> <moduleDef> --> <otherModules> --> 
Hi
e
Sibling(child) of <ret> is e
After pushing: e --> <moduleDef> --> <otherModules> --> 
In while
Matching START line:112 e
e --> <moduleDef> --> <otherModules> --> 
After matching e case: <moduleDef> --> <otherModules> --> 
In while
Before popping: <moduleDef> --> <otherModules> --> 
After popping: <otherModules> --> 
inside<moduleDef>
45 5
24 3
 END --> <statements> --> START -->
Current NT END
Before pushing: <otherModules> --> 
<moduleDef>yo baby
here
END --> <otherModules> --> 
Hi
END
After pushing: END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<moduleDef>yo baby
here
<statements> --> END --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START -->
Current NT START
Before pushing: <statements> --> END --> <otherModules> --> 
<moduleDef>yo baby
here
START --> <statements> --> END --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
Sibling(child) of <moduleDef> is START
After pushing: START --> <statements> --> END --> <otherModules> --> 
In while
Matching START line:112 START
START --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:113 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:113 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:113 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:113 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: REAL
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 1
18 1
 REAL -->
Current NT REAL
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
REAL
Sibling(child) of <dataType> is REAL
After pushing: REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching REAL line:113 REAL
REAL --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:113 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: DECLARE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 7
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 7
29 1
 <declareStmt> -->
Current NT <declareStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<declareStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<declareStmt>
Sibling(child) of <statement> is <declareStmt>
After pushing: <declareStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <declareStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<declareStmt>
8 7
86 5
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <dataType>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <dataType> is SEMICOL
Hi
<dataType>
After pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT COLON
Before pushing: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of COLON is <dataType>
Hi
COLON
After pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT <idList>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
<idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <idList> is COLON
Hi
<idList>
After pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <dataType> --> COLON --> <idList> --> DECLARE -->
Current NT DECLARE
Before pushing: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<declareStmt>yo baby
here
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of DECLARE is <idList>
Hi
DECLARE
Sibling(child) of <declareStmt> is DECLARE
After pushing: DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching DECLARE line:114 DECLARE
DECLARE --> <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <idList> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList>
2 54
51 2
 <idList_ex> --> ID -->
Current NT <idList_ex>
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
<idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<idList_ex>
After pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <idList_ex> --> ID -->
Current NT ID
Before pushing: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList>yo baby
here
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <idList_ex>
Hi
ID
Sibling(child) of <idList> is ID
After pushing: ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:114 ID
ID --> <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: COLON
Before popping: <idList_ex> --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<idList_ex>
7 42
53 1
 e -->
Current NT e
Before pushing: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<idList_ex>yo baby
here
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <idList_ex> is e
After pushing: e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:114 e
e --> COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching COLON line:114 COLON
COLON --> <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: INTEGER
Before popping: <dataType> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<dataType>
17 0
17 1
 INTEGER -->
Current NT INTEGER
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<dataType>yo baby
here
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
INTEGER
Sibling(child) of <dataType> is INTEGER
After pushing: INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching INTEGER line:114 INTEGER
INTEGER --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:114 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:115 ID
ID --> <whichStmt> --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ASSIGNOP line:115 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 53
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 53
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 53
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 53
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<term>
12 53
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 53
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<var>
19 53
35 1
 NUM -->
Current NT NUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
NUM
Sibling(child) of <var> is NUM
After pushing: NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching NUM line:115 NUM
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:115 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:115 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:115 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:115 e
e --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:115 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: WHILE
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 29
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 29
31 1
 <iterativeStmt> -->
Current NT <iterativeStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<iterativeStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<iterativeStmt>
Sibling(child) of <statement> is <iterativeStmt>
After pushing: <iterativeStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <iterativeStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<iterativeStmt>
25 29
97 7
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT END
Before pushing: <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
END --> <statements> --> END --> <otherModules> --> 
Hi
END
After pushing: END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statements> is END
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT START
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of START is <statements>
Hi
START
After pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT BC
Before pushing: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BC is START
Hi
BC
After pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT <AOBE>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
<AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AOBE> is BC
Hi
<AOBE>
After pushing: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT BO
Before pushing: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BO is <AOBE>
Hi
BO
After pushing: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 END --> <statements> --> START --> BC --> <AOBE> --> BO --> WHILE -->
Current NT WHILE
Before pushing: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<iterativeStmt>yo baby
here
WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of WHILE is BO
Hi
WHILE
Sibling(child) of <iterativeStmt> is WHILE
After pushing: WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching WHILE line:116 WHILE
WHILE --> BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:116 BO
BO --> <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <AOBE> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:116 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: LE
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 35
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:116 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 35
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:116 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 35
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:116 e
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 35
64 3
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <negOrPosAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <negOrPosAE> is <WithRelOp>
Hi
<negOrPosAE>
After pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <negOrPosAE> --> <relationalOp> -->
Current NT <relationalOp>
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
<relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <relationalOp> is <negOrPosAE>
Hi
<relationalOp>
Sibling(child) of <WithRelOp> is <relationalOp>
After pushing: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <relationalOp> --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<relationalOp>
37 35
81 1
 LE -->
Current NT LE
Before pushing: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<relationalOp>yo baby
here
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
LE
Sibling(child) of <relationalOp> is LE
After pushing: LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching LE line:116 LE
LE --> <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <negOrPosAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<negOrPosAE>
16 54
57 1
 <BorNBAE> -->
Current NT <BorNBAE>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<negOrPosAE>yo baby
here
<BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<BorNBAE>
Sibling(child) of <negOrPosAE> is <BorNBAE>
After pushing: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <BorNBAE> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<BorNBAE>
38 54
59 1
 <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<BorNBAE>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<arithmeticExpr>
Sibling(child) of <BorNBAE> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:116 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 50
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 50
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 e
e --> <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 50
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 e
e --> <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 50
62 1
 e -->
Current NT e
Before pushing: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 e
e --> BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:116 BC
BC --> START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: START
Matching START line:117 START
START --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: GET_VALUE
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 11
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 11
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 11
32 5
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT ID
Before pushing: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is BC
Hi
ID
After pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT BO
Before pushing: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of BO is ID
Hi
BO
After pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> ID --> BO --> GET_VALUE -->
Current NT GET_VALUE
Before pushing: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of GET_VALUE is BO
Hi
GET_VALUE
Sibling(child) of <ioStmt> is GET_VALUE
After pushing: GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching GET_VALUE line:118 GET_VALUE
GET_VALUE --> BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:118 BO
BO --> ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Matching ID line:118 ID
ID --> BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Matching BC line:118 BC
BC --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:118 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:119 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBO
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 47
43 1
 <lvalueARRStmt> -->
Current NT <lvalueARRStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueARRStmt>
Sibling(child) of <whichStmt> is <lvalueARRStmt>
After pushing: <lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueARRStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<lvalueARRStmt>
15 47
45 6
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SQBC
Before pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of SQBC is ASSIGNOP
Hi
SQBC
After pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT <index>
Before pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
<index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <index> is SQBC
Hi
<index>
After pushing: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP --> SQBC --> <index> --> SQBO -->
Current NT SQBO
Before pushing: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueARRStmt>yo baby
here
SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of SQBO is <index>
Hi
SQBO
Sibling(child) of <lvalueARRStmt> is SQBO
After pushing: SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SQBO line:119 SQBO
SQBO --> <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <index> --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<index>
13 54
47 1
 ID -->
Current NT ID
Before pushing: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<index>yo baby
here
ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
ID
Sibling(child) of <index> is ID
After pushing: ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:119 ID
ID --> SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SQBC
Matching SQBC line:119 SQBC
SQBC --> ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Matching ASSIGNOP line:119 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:119 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 44
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:119 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 54
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<statement>
3 54
28 1
 <simpleStmt> -->
Current NT <simpleStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<simpleStmt>
Sibling(child) of <statement> is <simpleStmt>
After pushing: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <simpleStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<simpleStmt>
10 54
39 1
 <assignmentStmt> -->
Current NT <assignmentStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<simpleStmt>yo baby
here
<assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<assignmentStmt>
Sibling(child) of <simpleStmt> is <assignmentStmt>
After pushing: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <assignmentStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<assignmentStmt>
48 54
41 2
 <whichStmt> --> ID -->
Current NT <whichStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
<whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichStmt>
After pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichStmt> --> ID -->
Current NT ID
Before pushing: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<assignmentStmt>yo baby
here
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichStmt>
Hi
ID
Sibling(child) of <assignmentStmt> is ID
After pushing: ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:120 ID
ID --> <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ASSIGNOP
Before popping: <whichStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichStmt>
4 46
42 1
 <lvalueIDStmt> -->
Current NT <lvalueIDStmt>
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichStmt>yo baby
here
<lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<lvalueIDStmt>
Sibling(child) of <whichStmt> is <lvalueIDStmt>
After pushing: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <lvalueIDStmt> --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<lvalueIDStmt>
49 46
44 3
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT <expression>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
<expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <expression> is SEMICOL
Hi
<expression>
After pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> <expression> --> ASSIGNOP -->
Current NT ASSIGNOP
Before pushing: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<lvalueIDStmt>yo baby
here
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ASSIGNOP is <expression>
Hi
ASSIGNOP
Sibling(child) of <lvalueIDStmt> is ASSIGNOP
After pushing: ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ASSIGNOP line:120 ASSIGNOP
ASSIGNOP --> <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <expression> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<expression>
11 54
54 1
 <AOBE> -->
Current NT <AOBE>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<expression>yo baby
here
<AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<AOBE>
Sibling(child) of <expression> is <AOBE>
After pushing: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AOBE> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AOBE>
0 54
60 2
 <WithLogOp> --> <AnyTerm> -->
Current NT <WithLogOp>
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithLogOp>
After pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithLogOp> --> <AnyTerm> -->
Current NT <AnyTerm>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AOBE>yo baby
here
<AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <AnyTerm> is <WithLogOp>
Hi
<AnyTerm>
Sibling(child) of <AOBE> is <AnyTerm>
After pushing: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <AnyTerm> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<AnyTerm>
52 54
63 2
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <WithRelOp>
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<WithRelOp>
After pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <WithRelOp> --> <arithmeticExpr> -->
Current NT <arithmeticExpr>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<AnyTerm>yo baby
here
<arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <arithmeticExpr> is <WithRelOp>
Hi
<arithmeticExpr>
Sibling(child) of <AnyTerm> is <arithmeticExpr>
After pushing: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <arithmeticExpr> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<arithmeticExpr>
51 54
67 2
 <N4> --> <term> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<arithmeticExpr>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
Sibling(child) of <arithmeticExpr> is <term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 54
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 54
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:120 ID
ID --> <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PLUS
Before popping: <whichId> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 30
38 1
 e -->
Current NT e
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:120 e
e --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 30
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:120 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 30
68 3
 <N4> --> <term> --> <op1> -->
Current NT <N4>
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N4>
After pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <term>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <term> is <N4>
Hi
<term>
After pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N4> --> <term> --> <op1> -->
Current NT <op1>
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
<op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <op1> is <term>
Hi
<op1>
Sibling(child) of <N4> is <op1>
After pushing: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <op1> --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<op1>
35 30
74 1
 PLUS -->
Current NT PLUS
Before pushing: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<op1>yo baby
here
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
PLUS
Sibling(child) of <op1> is PLUS
After pushing: PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching PLUS line:120 PLUS
PLUS --> <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: NUM
Before popping: <term> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<term>
12 53
70 2
 <N5> --> <factor> -->
Current NT <N5>
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<N5>
After pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
 <N5> --> <factor> -->
Current NT <factor>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<term>yo baby
here
<factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Sibling of <factor> is <N5>
Hi
<factor>
Sibling(child) of <term> is <factor>
After pushing: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <factor> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<factor>
39 53
73 1
 <var> -->
Current NT <var>
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<factor>yo baby
here
<var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
<var>
Sibling(child) of <factor> is <var>
After pushing: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <var> --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<var>
19 53
35 1
 NUM -->
Current NT NUM
Before pushing: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
NUM
Sibling(child) of <var> is NUM
After pushing: NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching NUM line:120 NUM
NUM --> <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Before popping: <N5> --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N5>
47 44
72 1
 e -->
Current NT e
Before pushing: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N5>yo baby
here
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N5> is e
After pushing: e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:120 e
e --> <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <N4> --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<N4>
21 44
69 1
 e -->
Current NT e
Before pushing: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<N4>yo baby
here
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <N4> is e
After pushing: e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:120 e
e --> <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithRelOp> --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithRelOp>
32 44
65 1
 e -->
Current NT e
Before pushing: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithRelOp>yo baby
here
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithRelOp> is e
After pushing: e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:120 e
e --> <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <WithLogOp> --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
inside<WithLogOp>
5 44
62 1
 e -->
Current NT e
Before pushing: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
<WithLogOp>yo baby
here
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <WithLogOp> is e
After pushing: e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:120 e
e --> SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching SEMICOL line:120 SEMICOL
SEMICOL --> <statements> --> END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: END
Before popping: <statements> --> END --> <statements> --> END --> <otherModules> --> 
After popping: END --> <statements> --> END --> <otherModules> --> 
inside<statements>
50 6
26 1
 e -->
Current NT e
Before pushing: END --> <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
e --> END --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <statements> is e
After pushing: e --> END --> <statements> --> END --> <otherModules> --> 
In while
Matching END line:122 e
e --> END --> <statements> --> END --> <otherModules> --> 
After matching e case: END --> <statements> --> END --> <otherModules> --> 
In while
Matching END line:122 END
END --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: PRINT
Before popping: <statements> --> END --> <otherModules> --> 
After popping: END --> <otherModules> --> 
inside<statements>
50 12
25 2
 <statements> --> <statement> -->
Current NT <statements>
Before pushing: END --> <otherModules> --> 
<statements>yo baby
here
<statements> --> END --> <otherModules> --> 
Hi
<statements>
After pushing: <statements> --> END --> <otherModules> --> 
 <statements> --> <statement> -->
Current NT <statement>
Before pushing: <statements> --> END --> <otherModules> --> 
<statements>yo baby
here
<statement> --> <statements> --> END --> <otherModules> --> 
Sibling of <statement> is <statements>
Hi
<statement>
Sibling(child) of <statements> is <statement>
After pushing: <statement> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <statement> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<statement>
3 12
27 1
 <ioStmt> -->
Current NT <ioStmt>
Before pushing: <statements> --> END --> <otherModules> --> 
<statement>yo baby
here
<ioStmt> --> <statements> --> END --> <otherModules> --> 
Hi
<ioStmt>
Sibling(child) of <statement> is <ioStmt>
After pushing: <ioStmt> --> <statements> --> END --> <otherModules> --> 
In while
Before popping: <ioStmt> --> <statements> --> END --> <otherModules> --> 
After popping: <statements> --> END --> <otherModules> --> 
inside<ioStmt>
29 12
33 5
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT SEMICOL
Before pushing: <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
SEMICOL
After pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BC
Before pushing: SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BC is SEMICOL
Hi
BC
After pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT <var>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
<var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of <var> is BC
Hi
<var>
After pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT BO
Before pushing: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of BO is <var>
Hi
BO
After pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 SEMICOL --> BC --> <var> --> BO --> PRINT -->
Current NT PRINT
Before pushing: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<ioStmt>yo baby
here
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of PRINT is BO
Hi
PRINT
Sibling(child) of <ioStmt> is PRINT
After pushing: PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching PRINT line:123 PRINT
PRINT --> BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BO
Matching BO line:123 BO
BO --> <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: ID
Before popping: <var> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<var>
19 54
34 2
 <whichId> --> ID -->
Current NT <whichId>
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
<whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
<whichId>
After pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
 <whichId> --> ID -->
Current NT ID
Before pushing: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<var>yo baby
here
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Sibling of ID is <whichId>
Hi
ID
Sibling(child) of <var> is ID
After pushing: ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching ID line:123 ID
ID --> <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: BC
Before popping: <whichId> --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After popping: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
inside<whichId>
28 50
38 1
 e -->
Current NT e
Before pushing: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
<whichId>yo baby
here
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
Hi
e
Sibling(child) of <whichId> is e
After pushing: e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:123 e
e --> BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching e case: BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
In while
Matching BC line:123 BC
BC --> SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: SEMICOL --> <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: SEMICOL
Matching SEMICOL line:123 SEMICOL
SEMICOL --> <statements> --> END --> <otherModules> --> 
After matching normal: <statements> --> END --> <otherModules> --> 
pop done
In while
NEW TOKEN: $
error: rule not found 404 NT: <statements> and T: $
wrong
RootDECLARE child is null above
Root: DECLARE
Current declare	2	DECLARE	 N/A 	<moduleDeclaration>	1	DECLARE
RootDECLARE ka child is null below
Root: <moduleDeclaration>
Current ----	2	----	 N/A 	<moduleDeclarations>	0	<moduleDeclaration>
RootMODULE child is null above
Root: MODULE
Current module	2	MODULE	 N/A 	<moduleDeclaration>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current readArr	2	ID	 N/A 	<moduleDeclaration>	1	ID
RootID ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	2	SEMICOL	 N/A 	<moduleDeclaration>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <moduleDeclarations>
Current ----	2	----	 N/A 	<program>	0	<moduleDeclarations>
RootDECLARE child is null above
Root: DECLARE
Current declare	3	DECLARE	 N/A 	<moduleDeclaration>	1	DECLARE
RootDECLARE ka child is null below
Root: <moduleDeclaration>
Current ----	3	----	 N/A 	<moduleDeclarations>	0	<moduleDeclaration>
RootMODULE child is null above
Root: MODULE
Current module	3	MODULE	 N/A 	<moduleDeclaration>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current readArr	3	ID	 N/A 	<moduleDeclaration>	1	ID
RootID ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	3	SEMICOL	 N/A 	<moduleDeclaration>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <moduleDeclarations>
Current ----	2	----	 N/A 	<moduleDeclarations>	0	<moduleDeclarations>
Roote child is null above
Root: e
Current ----	6	----	 N/A 	<moduleDeclarations>	1	e
Roote ka child is null below
Root: <moduleDeclarations>
Current ----	3	----	 N/A 	<moduleDeclarations>	0	<moduleDeclarations>
Root<moduleDeclarations> ka child's sibling is null
Root: <program>
Current ----	1	----	 N/A 	ROOT	0	<program>
RootDEF child is null above
Root: DEF
Current <<	6	DEF	 N/A 	<module>	1	DEF
RootDEF ka child is null below
Root: <module>
Current ----	6	----	 N/A 	<otherModules>	0	<module>
RootMODULE child is null above
Root: MODULE
Current module	6	MODULE	 N/A 	<module>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current arraySum	6	ID	 N/A 	<module>	1	ID
RootID ka child is null below
RootENDDEF child is null above
Root: ENDDEF
Current >>	6	ENDDEF	 N/A 	<module>	1	ENDDEF
RootENDDEF ka child is null below
RootTAKES child is null above
Root: TAKES
Current takes	7	TAKES	 N/A 	<module>	1	TAKES
RootTAKES ka child is null below
RootINPUT child is null above
Root: INPUT
Current input	7	INPUT	 N/A 	<module>	1	INPUT
RootINPUT ka child is null below
RootSQBO child is null above
Root: SQBO
Current [	7	SQBO	 N/A 	<module>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current list	7	ID	 N/A 	<input_plist>	1	ID
RootID ka child is null below
Root: <input_plist>
Current ----	6	----	 N/A 	<module>	0	<input_plist>
RootCOLON child is null above
Root: COLON
Current :	7	COLON	 N/A 	<input_plist>	1	COLON
RootCOLON ka child is null below
RootARRAY child is null above
Root: ARRAY
Current array	7	ARRAY	 N/A 	<dataType>	1	ARRAY
RootARRAY ka child is null below
Root: <dataType>
Current ----	7	----	 N/A 	<input_plist>	0	<dataType>
RootSQBO child is null above
Root: SQBO
Current [	7	SQBO	 N/A 	<dataType>	1	SQBO
RootSQBO ka child is null below
RootNUM child is null above
Root: NUM
Current 1	7	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	7	----	 N/A 	<dataType>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	7	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	7	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	7	SQBC	 N/A 	<dataType>	1	SQBC
RootSQBC ka child is null below
RootOF child is null above
Root: OF
Current of	7	OF	 N/A 	<dataType>	1	OF
RootOF ka child is null below
RootREAL child is null above
Root: REAL
Current real	7	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	7	----	 N/A 	<dataType>	0	<type>
Root<type> ka child's sibling is null
RootCOMMA child is null above
Root: COMMA
Current ,	7	COMMA	 N/A 	<input_plist_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <input_plist_ex>
Current ----	7	----	 N/A 	<input_plist>	0	<input_plist_ex>
RootID child is null above
Root: ID
Current n	7	ID	 N/A 	<input_plist_ex>	1	ID
RootID ka child is null below
RootCOLON child is null above
Root: COLON
Current :	7	COLON	 N/A 	<input_plist_ex>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	7	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	7	----	 N/A 	<input_plist_ex>	0	<dataType>
Root<dataType> ka child's sibling is null
Roote child is null above
Root: e
Current ----	7	----	 N/A 	<input_plist_ex>	1	e
Roote ka child is null below
Root: <input_plist_ex>
Current ----	7	----	 N/A 	<input_plist_ex>	0	<input_plist_ex>
Root<input_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	7	SQBC	 N/A 	<module>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	7	SEMICOL	 N/A 	<module>	1	SEMICOL
RootSEMICOL ka child is null below
RootRETURNS child is null above
Root: RETURNS
Current returns	8	RETURNS	 N/A 	<ret>	1	RETURNS
RootRETURNS ka child is null below
Root: <ret>
Current ----	6	----	 N/A 	<module>	0	<ret>
RootSQBO child is null above
Root: SQBO
Current [	8	SQBO	 N/A 	<ret>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current sum	8	ID	 N/A 	<output_plist>	1	ID
RootID ka child is null below
Root: <output_plist>
Current ----	8	----	 N/A 	<ret>	0	<output_plist>
RootCOLON child is null above
Root: COLON
Current :	8	COLON	 N/A 	<output_plist>	1	COLON
RootCOLON ka child is null below
RootREAL child is null above
Root: REAL
Current real	8	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	8	----	 N/A 	<output_plist>	0	<type>
Root<type> ka child's sibling is null
Roote child is null above
Root: e
Current ----	8	----	 N/A 	<output_plist_ex>	1	e
Roote ka child is null below
Root: <output_plist_ex>
Current ----	8	----	 N/A 	<output_plist>	0	<output_plist_ex>
Root<output_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	8	SQBC	 N/A 	<ret>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	8	SEMICOL	 N/A 	<ret>	1	SEMICOL
RootSEMICOL ka child is null below
RootSTART child is null above
Root: START
Current start	9	START	 N/A 	<moduleDef>	1	START
RootSTART ka child is null below
Root: <moduleDef>
Current ----	6	----	 N/A 	<module>	0	<moduleDef>
RootDECLARE child is null above
Root: DECLARE
Current declare	10	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	10	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current index	10	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	10	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	10	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	10	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	10	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	10	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	10	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	10	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	10	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	9	----	 N/A 	<moduleDef>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	11	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	11	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current t	11	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	11	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	11	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	11	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	11	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootBOOLEAN child is null above
Root: BOOLEAN
Current boolean	11	BOOLEAN	 N/A 	<dataType>	1	BOOLEAN
RootBOOLEAN ka child is null below
Root: <dataType>
Current ----	11	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	11	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	11	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	10	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current sum	12	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	12	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	12	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	12	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootRNUM child is null above
Root: RNUM
Current 0.0	12	RNUM	0.000000	<var>	1	RNUM
RootRNUM ka child is null below
Root: <var>
Current ----	12	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	12	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	12	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	12	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	12	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	12	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	12	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	12	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	12	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	12	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	12	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	12	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	12	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	12	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	12	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	12	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	12	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	12	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	12	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	11	----	 N/A 	<statements>	0	<statements>
RootFOR child is null above
Root: FOR
Current for	13	FOR	 N/A 	<iterativeStmt>	1	FOR
RootFOR ka child is null below
Root: <iterativeStmt>
Current ----	13	----	 N/A 	<statement>	0	<iterativeStmt>
RootBO child is null above
Root: BO
Current (	13	BO	 N/A 	<iterativeStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current index	13	ID	 N/A 	<iterativeStmt>	1	ID
RootID ka child is null below
RootIN child is null above
Root: IN
Current in	13	IN	 N/A 	<iterativeStmt>	1	IN
RootIN ka child is null below
RootNUM child is null above
Root: NUM
Current 1	13	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	13	----	 N/A 	<iterativeStmt>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	13	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	13	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootBC child is null above
Root: BC
Current )	13	BC	 N/A 	<iterativeStmt>	1	BC
RootBC ka child is null below
RootSTART child is null above
Root: START
Current start	14	START	 N/A 	<iterativeStmt>	1	START
RootSTART ka child is null below
RootID child is null above
Root: ID
Current t	15	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	15	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	15	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	15	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current index	15	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	15	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	15	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	15	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	15	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	15	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	15	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	15	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	15	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	15	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	15	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	15	----	 N/A 	<AOBE>	0	<AnyTerm>
RootLE child is null above
Root: LE
Current <=	15	LE	 N/A 	<relationalOp>	1	LE
RootLE ka child is null below
Root: <relationalOp>
Current ----	15	----	 N/A 	<WithRelOp>	0	<relationalOp>
Root<relationalOp> ka child's sibling is null
Root: <WithRelOp>
Current ----	15	----	 N/A 	<AnyTerm>	0	<WithRelOp>
RootID child is null above
Root: ID
Current n	15	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	15	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	16	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	15	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	15	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	15	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	16	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	15	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	15	----	 N/A 	<BorNBAE>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	16	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	15	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <BorNBAE>
Current ----	15	----	 N/A 	<negOrPosAE>	0	<BorNBAE>
Root<BorNBAE> ka child's sibling is null
Root: <negOrPosAE>
Current ----	15	----	 N/A 	<WithRelOp>	0	<negOrPosAE>
Root<negOrPosAE> ka child's sibling is null
Roote child is null above
Root: e
Current ----	16	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	15	----	 N/A 	<WithRelOp>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	15	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	16	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	15	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	15	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	18	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	15	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	15	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	15	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	13	----	 N/A 	<iterativeStmt>	0	<statements>
RootID child is null above
Root: ID
Current sum	19	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	19	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	19	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	19	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current sum	19	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	19	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	19	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	19	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	19	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	19	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	19	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
RootPLUS child is null above
Root: PLUS
Current +	19	PLUS	 N/A 	<op1>	1	PLUS
RootPLUS ka child is null below
Root: <op1>
Current ----	19	----	 N/A 	<N4>	0	<op1>
Root<op1> ka child's sibling is null
Root: <N4>
Current ----	19	----	 N/A 	<arithmeticExpr>	0	<N4>
RootID child is null above
Root: ID
Current list	19	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	19	----	 N/A 	<factor>	0	<var>
RootSQBO child is null above
Root: SQBO
Current [	19	SQBO	 N/A 	<whichId>	1	SQBO
RootSQBO ka child is null below
Root: <whichId>
Current ----	19	----	 N/A 	<var>	0	<whichId>
RootID child is null above
Root: ID
Current index	19	ID	 N/A 	<whichId>	1	ID
RootID ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	19	SQBC	 N/A 	<whichId>	1	SQBC
RootSQBC ka child is null below
Root: <factor>
Current ----	19	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	19	----	 N/A 	<N4>	0	<term>
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	19	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	19	----	 N/A 	<N4>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	19	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	19	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	19	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	19	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	19	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	19	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	19	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	19	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	19	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	19	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	15	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	20	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	19	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	34	END	 N/A 	<iterativeStmt>	1	END
RootEND ka child is null below
Root: <statement>
Current ----	13	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	12	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	36	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	13	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	36	END	 N/A 	<moduleDef>	1	END
RootEND ka child is null below
Root: <otherModules>
Current ----	2	----	 N/A 	<program>	0	<otherModules>
RootDEF child is null above
Root: DEF
Current <<	39	DEF	 N/A 	<module>	1	DEF
RootDEF ka child is null below
Root: <module>
Current ----	39	----	 N/A 	<otherModules>	0	<module>
RootMODULE child is null above
Root: MODULE
Current module	39	MODULE	 N/A 	<module>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current arraySum	39	ID	 N/A 	<module>	1	ID
RootID ka child is null below
RootENDDEF child is null above
Root: ENDDEF
Current >>	39	ENDDEF	 N/A 	<module>	1	ENDDEF
RootENDDEF ka child is null below
RootTAKES child is null above
Root: TAKES
Current takes	40	TAKES	 N/A 	<module>	1	TAKES
RootTAKES ka child is null below
RootINPUT child is null above
Root: INPUT
Current input	40	INPUT	 N/A 	<module>	1	INPUT
RootINPUT ka child is null below
RootSQBO child is null above
Root: SQBO
Current [	40	SQBO	 N/A 	<module>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current list	40	ID	 N/A 	<input_plist>	1	ID
RootID ka child is null below
Root: <input_plist>
Current ----	39	----	 N/A 	<module>	0	<input_plist>
RootCOLON child is null above
Root: COLON
Current :	40	COLON	 N/A 	<input_plist>	1	COLON
RootCOLON ka child is null below
RootARRAY child is null above
Root: ARRAY
Current array	40	ARRAY	 N/A 	<dataType>	1	ARRAY
RootARRAY ka child is null below
Root: <dataType>
Current ----	40	----	 N/A 	<input_plist>	0	<dataType>
RootSQBO child is null above
Root: SQBO
Current [	40	SQBO	 N/A 	<dataType>	1	SQBO
RootSQBO ka child is null below
RootNUM child is null above
Root: NUM
Current 1	40	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	40	----	 N/A 	<dataType>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	40	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	40	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	40	SQBC	 N/A 	<dataType>	1	SQBC
RootSQBC ka child is null below
RootOF child is null above
Root: OF
Current of	40	OF	 N/A 	<dataType>	1	OF
RootOF ka child is null below
RootREAL child is null above
Root: REAL
Current real	40	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	40	----	 N/A 	<dataType>	0	<type>
Root<type> ka child's sibling is null
RootCOMMA child is null above
Root: COMMA
Current ,	40	COMMA	 N/A 	<input_plist_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <input_plist_ex>
Current ----	40	----	 N/A 	<input_plist>	0	<input_plist_ex>
RootID child is null above
Root: ID
Current n	40	ID	 N/A 	<input_plist_ex>	1	ID
RootID ka child is null below
RootCOLON child is null above
Root: COLON
Current :	40	COLON	 N/A 	<input_plist_ex>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	40	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	40	----	 N/A 	<input_plist_ex>	0	<dataType>
Root<dataType> ka child's sibling is null
Roote child is null above
Root: e
Current ----	40	----	 N/A 	<input_plist_ex>	1	e
Roote ka child is null below
Root: <input_plist_ex>
Current ----	40	----	 N/A 	<input_plist_ex>	0	<input_plist_ex>
Root<input_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	40	SQBC	 N/A 	<module>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	40	SEMICOL	 N/A 	<module>	1	SEMICOL
RootSEMICOL ka child is null below
RootRETURNS child is null above
Root: RETURNS
Current returns	41	RETURNS	 N/A 	<ret>	1	RETURNS
RootRETURNS ka child is null below
Root: <ret>
Current ----	39	----	 N/A 	<module>	0	<ret>
RootSQBO child is null above
Root: SQBO
Current [	41	SQBO	 N/A 	<ret>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current sum	41	ID	 N/A 	<output_plist>	1	ID
RootID ka child is null below
Root: <output_plist>
Current ----	41	----	 N/A 	<ret>	0	<output_plist>
RootCOLON child is null above
Root: COLON
Current :	41	COLON	 N/A 	<output_plist>	1	COLON
RootCOLON ka child is null below
RootREAL child is null above
Root: REAL
Current real	41	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	41	----	 N/A 	<output_plist>	0	<type>
Root<type> ka child's sibling is null
Roote child is null above
Root: e
Current ----	41	----	 N/A 	<output_plist_ex>	1	e
Roote ka child is null below
Root: <output_plist_ex>
Current ----	41	----	 N/A 	<output_plist>	0	<output_plist_ex>
Root<output_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	41	SQBC	 N/A 	<ret>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	41	SEMICOL	 N/A 	<ret>	1	SEMICOL
RootSEMICOL ka child is null below
RootSTART child is null above
Root: START
Current start	42	START	 N/A 	<moduleDef>	1	START
RootSTART ka child is null below
Root: <moduleDef>
Current ----	39	----	 N/A 	<module>	0	<moduleDef>
RootDECLARE child is null above
Root: DECLARE
Current declare	43	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	43	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current index	43	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	43	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	43	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	43	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	43	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	43	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	43	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	43	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	43	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	42	----	 N/A 	<moduleDef>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	44	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	44	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current t	44	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	44	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	44	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	44	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	44	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootBOOLEAN child is null above
Root: BOOLEAN
Current boolean	44	BOOLEAN	 N/A 	<dataType>	1	BOOLEAN
RootBOOLEAN ka child is null below
Root: <dataType>
Current ----	44	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	44	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	44	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	43	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current sum	45	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	45	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	45	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	45	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootRNUM child is null above
Root: RNUM
Current 3.0e+10	45	RNUM	30000001024.000000	<var>	1	RNUM
RootRNUM ka child is null below
Root: <var>
Current ----	45	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	45	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	45	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	45	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	45	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	45	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	45	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	45	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	45	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	45	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	45	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	45	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	45	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	45	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	45	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	45	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	45	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	45	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	45	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	44	----	 N/A 	<statements>	0	<statements>
RootFOR child is null above
Root: FOR
Current for	46	FOR	 N/A 	<iterativeStmt>	1	FOR
RootFOR ka child is null below
Root: <iterativeStmt>
Current ----	46	----	 N/A 	<statement>	0	<iterativeStmt>
RootBO child is null above
Root: BO
Current (	46	BO	 N/A 	<iterativeStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current index	46	ID	 N/A 	<iterativeStmt>	1	ID
RootID ka child is null below
RootIN child is null above
Root: IN
Current in	46	IN	 N/A 	<iterativeStmt>	1	IN
RootIN ka child is null below
RootNUM child is null above
Root: NUM
Current 1	46	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	46	----	 N/A 	<iterativeStmt>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	46	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	46	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootBC child is null above
Root: BC
Current )	46	BC	 N/A 	<iterativeStmt>	1	BC
RootBC ka child is null below
RootSTART child is null above
Root: START
Current start	47	START	 N/A 	<iterativeStmt>	1	START
RootSTART ka child is null below
RootID child is null above
Root: ID
Current t	48	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	48	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	48	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	48	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current index	48	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	48	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	48	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	48	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	48	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	48	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	48	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	48	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	48	----	 N/A 	<AOBE>	0	<AnyTerm>
RootLE child is null above
Root: LE
Current <=	48	LE	 N/A 	<relationalOp>	1	LE
RootLE ka child is null below
Root: <relationalOp>
Current ----	48	----	 N/A 	<WithRelOp>	0	<relationalOp>
Root<relationalOp> ka child's sibling is null
Root: <WithRelOp>
Current ----	48	----	 N/A 	<AnyTerm>	0	<WithRelOp>
RootID child is null above
Root: ID
Current n	48	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	48	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	48	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	48	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	48	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	48	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	48	----	 N/A 	<BorNBAE>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	48	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <BorNBAE>
Current ----	48	----	 N/A 	<negOrPosAE>	0	<BorNBAE>
Root<BorNBAE> ka child's sibling is null
Root: <negOrPosAE>
Current ----	48	----	 N/A 	<WithRelOp>	0	<negOrPosAE>
Root<negOrPosAE> ka child's sibling is null
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	48	----	 N/A 	<WithRelOp>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	48	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	48	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	48	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	48	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	48	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	48	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	48	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	48	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	46	----	 N/A 	<iterativeStmt>	0	<statements>
RootSWITCH child is null above
Root: SWITCH
Current switch	49	SWITCH	 N/A 	<condionalStmt>	1	SWITCH
RootSWITCH ka child is null below
Root: <condionalStmt>
Current ----	49	----	 N/A 	<statement>	0	<condionalStmt>
RootBO child is null above
Root: BO
Current (	49	BO	 N/A 	<condionalStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current t	49	ID	 N/A 	<condionalStmt>	1	ID
RootID ka child is null below
RootBC child is null above
Root: BC
Current )	49	BC	 N/A 	<condionalStmt>	1	BC
RootBC ka child is null below
RootSTART child is null above
Root: START
Current start	50	START	 N/A 	<condionalStmt>	1	START
RootSTART ka child is null below
RootCASE child is null above
Root: CASE
Current case	51	CASE	 N/A 	<caseStmts>	1	CASE
RootCASE ka child is null below
Root: <caseStmts>
Current ----	49	----	 N/A 	<condionalStmt>	0	<caseStmts>
RootTRUE child is null above
Root: TRUE
Current true	51	TRUE	 N/A 	<value>	1	TRUE
RootTRUE ka child is null below
Root: <value>
Current ----	51	----	 N/A 	<caseStmts>	0	<value>
Root<value> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	51	COLON	 N/A 	<caseStmts>	1	COLON
RootCOLON ka child is null below
RootPRINT child is null above
Root: PRINT
Current print	51	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	51	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	51	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current list	51	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	51	----	 N/A 	<ioStmt>	0	<var>
RootSQBO child is null above
Root: SQBO
Current [	51	SQBO	 N/A 	<whichId>	1	SQBO
RootSQBO ka child is null below
Root: <whichId>
Current ----	51	----	 N/A 	<var>	0	<whichId>
RootID child is null above
Root: ID
Current index	51	ID	 N/A 	<whichId>	1	ID
RootID ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	51	SQBC	 N/A 	<whichId>	1	SQBC
RootSQBC ka child is null below
RootBC child is null above
Root: BC
Current )	51	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	51	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	51	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	51	----	 N/A 	<caseStmts>	0	<statements>
RootID child is null above
Root: ID
Current sum	52	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	52	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	52	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	52	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current sum	52	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	52	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	52	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	52	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	52	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	52	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	52	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
RootPLUS child is null above
Root: PLUS
Current +	52	PLUS	 N/A 	<op1>	1	PLUS
RootPLUS ka child is null below
Root: <op1>
Current ----	52	----	 N/A 	<N4>	0	<op1>
Root<op1> ka child's sibling is null
Root: <N4>
Current ----	52	----	 N/A 	<arithmeticExpr>	0	<N4>
RootID child is null above
Root: ID
Current list	52	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	52	----	 N/A 	<factor>	0	<var>
RootSQBO child is null above
Root: SQBO
Current [	52	SQBO	 N/A 	<whichId>	1	SQBO
RootSQBO ka child is null below
Root: <whichId>
Current ----	52	----	 N/A 	<var>	0	<whichId>
RootID child is null above
Root: ID
Current index	52	ID	 N/A 	<whichId>	1	ID
RootID ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	52	SQBC	 N/A 	<whichId>	1	SQBC
RootSQBC ka child is null below
Root: <factor>
Current ----	52	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	52	----	 N/A 	<N4>	0	<term>
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	52	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	52	----	 N/A 	<N4>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	52	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	52	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	52	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	52	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	52	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	52	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	52	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	52	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	52	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	52	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	51	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	53	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	52	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootBREAK child is null above
Root: BREAK
Current break	53	BREAK	 N/A 	<caseStmts>	1	BREAK
RootBREAK ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	53	SEMICOL	 N/A 	<caseStmts>	1	SEMICOL
RootSEMICOL ka child is null below
RootCASE child is null above
Root: CASE
Current case	54	CASE	 N/A 	<MultiCase>	1	CASE
RootCASE ka child is null below
Root: <MultiCase>
Current ----	51	----	 N/A 	<caseStmts>	0	<MultiCase>
RootFALSE child is null above
Root: FALSE
Current false	54	FALSE	 N/A 	<value>	1	FALSE
RootFALSE ka child is null below
Root: <value>
Current ----	54	----	 N/A 	<MultiCase>	0	<value>
Root<value> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	54	COLON	 N/A 	<MultiCase>	1	COLON
RootCOLON ka child is null below
RootPRINT child is null above
Root: PRINT
Current print	54	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	54	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	54	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current sum	54	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	54	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	54	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	54	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	54	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	54	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	54	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	54	----	 N/A 	<MultiCase>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	55	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	55	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	55	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current index	55	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	55	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	55	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	55	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	55	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	55	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	55	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	54	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	57	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	55	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootBREAK child is null above
Root: BREAK
Current break	57	BREAK	 N/A 	<MultiCase>	1	BREAK
RootBREAK ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	57	SEMICOL	 N/A 	<MultiCase>	1	SEMICOL
RootSEMICOL ka child is null below
RootCASE child is null above
Root: CASE
Current case	58	CASE	 N/A 	<MultiCase>	1	CASE
RootCASE ka child is null below
Root: <MultiCase>
Current ----	54	----	 N/A 	<MultiCase>	0	<MultiCase>
RootFALSE child is null above
Root: FALSE
Current false	58	FALSE	 N/A 	<value>	1	FALSE
RootFALSE ka child is null below
Root: <value>
Current ----	58	----	 N/A 	<MultiCase>	0	<value>
Root<value> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	58	COLON	 N/A 	<MultiCase>	1	COLON
RootCOLON ka child is null below
RootPRINT child is null above
Root: PRINT
Current print	58	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	58	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	58	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current sum	58	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	58	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	58	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	58	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	58	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	58	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	58	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	58	----	 N/A 	<MultiCase>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	59	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	59	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	59	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current index	59	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	59	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	59	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	59	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	59	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	59	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	59	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	58	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	61	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	59	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootBREAK child is null above
Root: BREAK
Current break	61	BREAK	 N/A 	<MultiCase>	1	BREAK
RootBREAK ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	61	SEMICOL	 N/A 	<MultiCase>	1	SEMICOL
RootSEMICOL ka child is null below
RootCASE child is null above
Root: CASE
Current case	63	CASE	 N/A 	<MultiCase>	1	CASE
RootCASE ka child is null below
Root: <MultiCase>
Current ----	58	----	 N/A 	<MultiCase>	0	<MultiCase>
RootFALSE child is null above
Root: FALSE
Current false	63	FALSE	 N/A 	<value>	1	FALSE
RootFALSE ka child is null below
Root: <value>
Current ----	63	----	 N/A 	<MultiCase>	0	<value>
Root<value> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	63	COLON	 N/A 	<MultiCase>	1	COLON
RootCOLON ka child is null below
RootPRINT child is null above
Root: PRINT
Current print	63	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	63	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	63	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current sum	63	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	63	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	63	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	63	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	63	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	63	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	63	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	63	----	 N/A 	<MultiCase>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	64	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	64	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	64	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current index	64	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	64	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	64	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	64	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	64	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	64	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	64	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	63	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	66	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	64	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootBREAK child is null above
Root: BREAK
Current break	66	BREAK	 N/A 	<MultiCase>	1	BREAK
RootBREAK ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	66	SEMICOL	 N/A 	<MultiCase>	1	SEMICOL
RootSEMICOL ka child is null below
Roote child is null above
Root: e
Current ----	67	----	 N/A 	<MultiCase>	1	e
Roote ka child is null below
Root: <MultiCase>
Current ----	63	----	 N/A 	<MultiCase>	0	<MultiCase>
Root<MultiCase> ka child's sibling is null
Roote child is null above
Root: e
Current ----	67	----	 N/A 	<default>	1	e
Roote ka child is null below
Root: <default>
Current ----	49	----	 N/A 	<condionalStmt>	0	<default>
Root<default> ka child's sibling is null
RootEND child is null above
Root: END
Current end	67	END	 N/A 	<condionalStmt>	1	END
RootEND ka child is null below
Root: <statement>
Current ----	49	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	48	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	69	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	49	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	69	END	 N/A 	<iterativeStmt>	1	END
RootEND ka child is null below
Root: <statement>
Current ----	46	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	45	----	 N/A 	<statements>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	70	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	70	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	70	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current sum	70	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	70	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	70	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	70	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	70	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	70	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	70	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	46	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	71	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	70	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	71	END	 N/A 	<moduleDef>	1	END
RootEND ka child is null below
Root: <otherModules>
Current ----	6	----	 N/A 	<otherModules>	0	<otherModules>
Roote child is null above
Root: e
Current ----	72	----	 N/A 	<otherModules>	1	e
Roote ka child is null below
Root: <otherModules>
Current ----	39	----	 N/A 	<otherModules>	0	<otherModules>
Root<otherModules> ka child's sibling is null
RootDRIVERDEF child is null above
Root: DRIVERDEF
Current <<<	72	DRIVERDEF	 N/A 	<driverModule>	1	DRIVERDEF
RootDRIVERDEF ka child is null below
Root: <driverModule>
Current ----	2	----	 N/A 	<program>	0	<driverModule>
RootDRIVER child is null above
Root: DRIVER
Current driver	72	DRIVER	 N/A 	<driverModule>	1	DRIVER
RootDRIVER ka child is null below
RootPROGRAM child is null above
Root: PROGRAM
Current program	72	PROGRAM	 N/A 	<driverModule>	1	PROGRAM
RootPROGRAM ka child is null below
RootDRIVERENDDEF child is null above
Root: DRIVERENDDEF
Current >>>	72	DRIVERENDDEF	 N/A 	<driverModule>	1	DRIVERENDDEF
RootDRIVERENDDEF ka child is null below
RootSTART child is null above
Root: START
Current start	73	START	 N/A 	<moduleDef>	1	START
RootSTART ka child is null below
Root: <moduleDef>
Current ----	72	----	 N/A 	<driverModule>	0	<moduleDef>
RootDECLARE child is null above
Root: DECLARE
Current declare	74	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	74	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current A	74	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	74	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	74	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	74	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	74	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootARRAY child is null above
Root: ARRAY
Current array	74	ARRAY	 N/A 	<dataType>	1	ARRAY
RootARRAY ka child is null below
Root: <dataType>
Current ----	74	----	 N/A 	<declareStmt>	0	<dataType>
RootSQBO child is null above
Root: SQBO
Current [	74	SQBO	 N/A 	<dataType>	1	SQBO
RootSQBO ka child is null below
RootNUM child is null above
Root: NUM
Current 1	74	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	74	----	 N/A 	<dataType>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	74	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	74	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	74	SQBC	 N/A 	<dataType>	1	SQBC
RootSQBC ka child is null below
RootOF child is null above
Root: OF
Current of	74	OF	 N/A 	<dataType>	1	OF
RootOF ka child is null below
RootREAL child is null above
Root: REAL
Current real	74	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	74	----	 N/A 	<dataType>	0	<type>
Root<type> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	74	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	74	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	73	----	 N/A 	<moduleDef>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	75	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	75	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current k	75	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	75	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	75	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	75	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	75	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	75	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	75	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	75	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	75	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	74	----	 N/A 	<statements>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	76	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	76	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current s	76	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	76	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	76	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	76	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	76	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootREAL child is null above
Root: REAL
Current real	76	REAL	 N/A 	<dataType>	1	REAL
RootREAL ka child is null below
Root: <dataType>
Current ----	76	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	76	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	76	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	75	----	 N/A 	<statements>	0	<statements>
RootGET_VALUE child is null above
Root: GET_VALUE
Current get_value	77	GET_VALUE	 N/A 	<ioStmt>	1	GET_VALUE
RootGET_VALUE ka child is null below
Root: <ioStmt>
Current ----	77	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	77	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current k	77	ID	 N/A 	<ioStmt>	1	ID
RootID ka child is null below
RootBC child is null above
Root: BC
Current )	77	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	77	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	77	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	76	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	78	----	 N/A 	<optional>	1	e
Roote ka child is null below
Root: <optional>
Current ----	78	----	 N/A 	<moduleReuseStmt>	0	<optional>
Root<optional> ka child's sibling is null
Root: <moduleReuseStmt>
Current ----	78	----	 N/A 	<simpleStmt>	0	<moduleReuseStmt>
RootUSE child is null above
Root: USE
Current use	78	USE	 N/A 	<moduleReuseStmt>	1	USE
RootUSE ka child is null below
RootMODULE child is null above
Root: MODULE
Current module	78	MODULE	 N/A 	<moduleReuseStmt>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current readArr	78	ID	 N/A 	<moduleReuseStmt>	1	ID
RootID ka child is null below
RootWITH child is null above
Root: WITH
Current with	78	WITH	 N/A 	<moduleReuseStmt>	1	WITH
RootWITH ka child is null below
RootPARAMETERS child is null above
Root: PARAMETERS
Current parameters	78	PARAMETERS	 N/A 	<moduleReuseStmt>	1	PARAMETERS
RootPARAMETERS ka child is null below
RootID child is null above
Root: ID
Current A	78	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	78	----	 N/A 	<moduleReuseStmt>	0	<idList>
RootCOMMA child is null above
Root: COMMA
Current ,	78	COMMA	 N/A 	<idList_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <idList_ex>
Current ----	78	----	 N/A 	<idList>	0	<idList_ex>
RootID child is null above
Root: ID
Current k	78	ID	 N/A 	<idList_ex>	1	ID
RootID ka child is null below
Roote child is null above
Root: e
Current ----	78	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	78	----	 N/A 	<idList_ex>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	78	SEMICOL	 N/A 	<moduleReuseStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <simpleStmt>
Current ----	78	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	78	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	77	----	 N/A 	<statements>	0	<statements>
RootSQBO child is null above
Root: SQBO
Current [	79	SQBO	 N/A 	<optional>	1	SQBO
RootSQBO ka child is null below
Root: <optional>
Current ----	79	----	 N/A 	<moduleReuseStmt>	0	<optional>
RootID child is null above
Root: ID
Current s	79	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	79	----	 N/A 	<optional>	0	<idList>
Roote child is null above
Root: e
Current ----	79	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	79	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	79	SQBC	 N/A 	<optional>	1	SQBC
RootSQBC ka child is null below
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	79	ASSIGNOP	 N/A 	<optional>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <moduleReuseStmt>
Current ----	79	----	 N/A 	<simpleStmt>	0	<moduleReuseStmt>
RootUSE child is null above
Root: USE
Current use	79	USE	 N/A 	<moduleReuseStmt>	1	USE
RootUSE ka child is null below
RootMODULE child is null above
Root: MODULE
Current module	79	MODULE	 N/A 	<moduleReuseStmt>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current arraySum	79	ID	 N/A 	<moduleReuseStmt>	1	ID
RootID ka child is null below
RootWITH child is null above
Root: WITH
Current with	79	WITH	 N/A 	<moduleReuseStmt>	1	WITH
RootWITH ka child is null below
RootPARAMETERS child is null above
Root: PARAMETERS
Current parameters	79	PARAMETERS	 N/A 	<moduleReuseStmt>	1	PARAMETERS
RootPARAMETERS ka child is null below
RootID child is null above
Root: ID
Current A	79	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	79	----	 N/A 	<moduleReuseStmt>	0	<idList>
RootCOMMA child is null above
Root: COMMA
Current ,	79	COMMA	 N/A 	<idList_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <idList_ex>
Current ----	79	----	 N/A 	<idList>	0	<idList_ex>
RootID child is null above
Root: ID
Current k	79	ID	 N/A 	<idList_ex>	1	ID
RootID ka child is null below
Roote child is null above
Root: e
Current ----	79	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	79	----	 N/A 	<idList_ex>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	79	SEMICOL	 N/A 	<moduleReuseStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <simpleStmt>
Current ----	79	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	79	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	78	----	 N/A 	<statements>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	80	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	80	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	80	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current s	80	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	80	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	80	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	80	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	80	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	80	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	80	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	79	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	81	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	80	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	81	END	 N/A 	<moduleDef>	1	END
RootEND ka child is null below
RootDEF child is null above
Root: DEF
Current <<	88	DEF	 N/A 	<module>	1	DEF
RootDEF ka child is null below
Root: <module>
Current ----	88	----	 N/A 	<otherModules>	0	<module>
RootMODULE child is null above
Root: MODULE
Current module	88	MODULE	 N/A 	<module>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current readArr	88	ID	 N/A 	<module>	1	ID
RootID ka child is null below
RootENDDEF child is null above
Root: ENDDEF
Current >>	88	ENDDEF	 N/A 	<module>	1	ENDDEF
RootENDDEF ka child is null below
RootTAKES child is null above
Root: TAKES
Current takes	89	TAKES	 N/A 	<module>	1	TAKES
RootTAKES ka child is null below
RootINPUT child is null above
Root: INPUT
Current input	89	INPUT	 N/A 	<module>	1	INPUT
RootINPUT ka child is null below
RootSQBO child is null above
Root: SQBO
Current [	89	SQBO	 N/A 	<module>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current arr1	89	ID	 N/A 	<input_plist>	1	ID
RootID ka child is null below
Root: <input_plist>
Current ----	88	----	 N/A 	<module>	0	<input_plist>
RootCOLON child is null above
Root: COLON
Current :	89	COLON	 N/A 	<input_plist>	1	COLON
RootCOLON ka child is null below
RootARRAY child is null above
Root: ARRAY
Current array	89	ARRAY	 N/A 	<dataType>	1	ARRAY
RootARRAY ka child is null below
Root: <dataType>
Current ----	89	----	 N/A 	<input_plist>	0	<dataType>
RootSQBO child is null above
Root: SQBO
Current [	89	SQBO	 N/A 	<dataType>	1	SQBO
RootSQBO ka child is null below
RootNUM child is null above
Root: NUM
Current 1	89	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	89	----	 N/A 	<dataType>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	89	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	89	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	89	SQBC	 N/A 	<dataType>	1	SQBC
RootSQBC ka child is null below
RootOF child is null above
Root: OF
Current of	89	OF	 N/A 	<dataType>	1	OF
RootOF ka child is null below
RootREAL child is null above
Root: REAL
Current real	89	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	89	----	 N/A 	<dataType>	0	<type>
Root<type> ka child's sibling is null
RootCOMMA child is null above
Root: COMMA
Current ,	89	COMMA	 N/A 	<input_plist_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <input_plist_ex>
Current ----	89	----	 N/A 	<input_plist>	0	<input_plist_ex>
RootID child is null above
Root: ID
Current k	89	ID	 N/A 	<input_plist_ex>	1	ID
RootID ka child is null below
RootCOLON child is null above
Root: COLON
Current :	89	COLON	 N/A 	<input_plist_ex>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	89	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	89	----	 N/A 	<input_plist_ex>	0	<dataType>
Root<dataType> ka child's sibling is null
Roote child is null above
Root: e
Current ----	89	----	 N/A 	<input_plist_ex>	1	e
Roote ka child is null below
Root: <input_plist_ex>
Current ----	89	----	 N/A 	<input_plist_ex>	0	<input_plist_ex>
Root<input_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	89	SQBC	 N/A 	<module>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	89	SEMICOL	 N/A 	<module>	1	SEMICOL
RootSEMICOL ka child is null below
Roote child is null above
Root: e
Current ----	90	----	 N/A 	<ret>	1	e
Roote ka child is null below
Root: <ret>
Current ----	88	----	 N/A 	<module>	0	<ret>
Root<ret> ka child's sibling is null
RootSTART child is null above
Root: START
Current start	90	START	 N/A 	<moduleDef>	1	START
RootSTART ka child is null below
Root: <moduleDef>
Current ----	88	----	 N/A 	<module>	0	<moduleDef>
RootDECLARE child is null above
Root: DECLARE
Current declare	91	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	91	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current tempvar	91	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	91	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	91	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	91	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	91	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootREAL child is null above
Root: REAL
Current real	91	REAL	 N/A 	<dataType>	1	REAL
RootREAL ka child is null below
Root: <dataType>
Current ----	91	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	91	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	91	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	90	----	 N/A 	<moduleDef>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	92	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	92	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current i	92	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	92	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	92	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	92	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	92	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	92	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	92	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	92	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	92	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	91	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current i	93	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	93	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	93	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	93	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootNUM child is null above
Root: NUM
Current 1	93	NUM	1.000000	<var>	1	NUM
RootNUM ka child is null below
Root: <var>
Current ----	93	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	93	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	93	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	93	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	93	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	93	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	93	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	93	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	93	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	93	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	93	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	93	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	93	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	93	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	93	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	93	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	93	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	93	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	93	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	92	----	 N/A 	<statements>	0	<statements>
RootWHILE child is null above
Root: WHILE
Current while	94	WHILE	 N/A 	<iterativeStmt>	1	WHILE
RootWHILE ka child is null below
Root: <iterativeStmt>
Current ----	94	----	 N/A 	<statement>	0	<iterativeStmt>
RootBO child is null above
Root: BO
Current (	94	BO	 N/A 	<iterativeStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current i	94	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	94	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	94	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	94	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	94	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	94	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	94	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	94	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	94	----	 N/A 	<AOBE>	0	<AnyTerm>
RootLE child is null above
Root: LE
Current <=	94	LE	 N/A 	<relationalOp>	1	LE
RootLE ka child is null below
Root: <relationalOp>
Current ----	94	----	 N/A 	<WithRelOp>	0	<relationalOp>
Root<relationalOp> ka child's sibling is null
Root: <WithRelOp>
Current ----	94	----	 N/A 	<AnyTerm>	0	<WithRelOp>
RootID child is null above
Root: ID
Current k	94	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	94	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	94	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	94	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	94	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	94	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	94	----	 N/A 	<BorNBAE>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	94	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <BorNBAE>
Current ----	94	----	 N/A 	<negOrPosAE>	0	<BorNBAE>
Root<BorNBAE> ka child's sibling is null
Root: <negOrPosAE>
Current ----	94	----	 N/A 	<WithRelOp>	0	<negOrPosAE>
Root<negOrPosAE> ka child's sibling is null
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	94	----	 N/A 	<WithRelOp>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	94	----	 N/A 	<iterativeStmt>	0	<AOBE>
Roote child is null above
Root: e
Current ----	94	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	94	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	94	BC	 N/A 	<iterativeStmt>	1	BC
RootBC ka child is null below
RootSTART child is null above
Root: START
Current start	95	START	 N/A 	<iterativeStmt>	1	START
RootSTART ka child is null below
RootGET_VALUE child is null above
Root: GET_VALUE
Current get_value	96	GET_VALUE	 N/A 	<ioStmt>	1	GET_VALUE
RootGET_VALUE ka child is null below
Root: <ioStmt>
Current ----	96	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	96	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current tempvar	96	ID	 N/A 	<ioStmt>	1	ID
RootID ka child is null below
RootBC child is null above
Root: BC
Current )	96	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	96	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	96	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	94	----	 N/A 	<iterativeStmt>	0	<statements>
RootID child is null above
Root: ID
Current arr1	97	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	97	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootSQBO child is null above
Root: SQBO
Current [	97	SQBO	 N/A 	<lvalueARRStmt>	1	SQBO
RootSQBO ka child is null below
Root: <lvalueARRStmt>
Current ----	97	----	 N/A 	<whichStmt>	0	<lvalueARRStmt>
RootID child is null above
Root: ID
Current i	97	ID	 N/A 	<index>	1	ID
RootID ka child is null below
Root: <index>
Current ----	97	----	 N/A 	<lvalueARRStmt>	0	<index>
Root<index> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	97	SQBC	 N/A 	<lvalueARRStmt>	1	SQBC
RootSQBC ka child is null below
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	97	ASSIGNOP	 N/A 	<lvalueARRStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
RootID child is null above
Root: ID
Current tempvar	97	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	97	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	97	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	97	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	97	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	97	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	97	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	97	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	97	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	97	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	97	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	97	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	97	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	97	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	97	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	97	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	97	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	97	----	 N/A 	<lvalueARRStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	97	SEMICOL	 N/A 	<lvalueARRStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	97	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	97	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	97	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	96	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current i	98	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	98	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	98	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	98	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current i	98	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	98	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	98	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	98	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	98	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	98	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	98	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
RootPLUS child is null above
Root: PLUS
Current +	98	PLUS	 N/A 	<op1>	1	PLUS
RootPLUS ka child is null below
Root: <op1>
Current ----	98	----	 N/A 	<N4>	0	<op1>
Root<op1> ka child's sibling is null
Root: <N4>
Current ----	98	----	 N/A 	<arithmeticExpr>	0	<N4>
RootNUM child is null above
Root: NUM
Current 1	98	NUM	1.000000	<var>	1	NUM
RootNUM ka child is null below
Root: <var>
Current ----	98	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	98	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	98	----	 N/A 	<N4>	0	<term>
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	98	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	98	----	 N/A 	<N4>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	98	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	98	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	98	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	98	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	98	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	98	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	98	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	98	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	98	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	98	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	97	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	100	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	98	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	100	END	 N/A 	<iterativeStmt>	1	END
RootEND ka child is null below
Root: <statement>
Current ----	94	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	93	----	 N/A 	<statements>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	101	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	101	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	101	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current random	101	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	101	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	101	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	101	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	101	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	101	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	101	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	94	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	104	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	101	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	104	END	 N/A 	<moduleDef>	1	END
RootEND ka child is null below
Root: <otherModules>
Current ----	2	----	 N/A 	<program>	0	<otherModules>
RootDEF child is null above
Root: DEF
Current <<	110	DEF	 N/A 	<module>	1	DEF
RootDEF ka child is null below
Root: <module>
Current ----	110	----	 N/A 	<otherModules>	0	<module>
RootMODULE child is null above
Root: MODULE
Current module	110	MODULE	 N/A 	<module>	1	MODULE
RootMODULE ka child is null below
RootID child is null above
Root: ID
Current readArr	110	ID	 N/A 	<module>	1	ID
RootID ka child is null below
RootENDDEF child is null above
Root: ENDDEF
Current >>	110	ENDDEF	 N/A 	<module>	1	ENDDEF
RootENDDEF ka child is null below
RootTAKES child is null above
Root: TAKES
Current takes	111	TAKES	 N/A 	<module>	1	TAKES
RootTAKES ka child is null below
RootINPUT child is null above
Root: INPUT
Current input	111	INPUT	 N/A 	<module>	1	INPUT
RootINPUT ka child is null below
RootSQBO child is null above
Root: SQBO
Current [	111	SQBO	 N/A 	<module>	1	SQBO
RootSQBO ka child is null below
RootID child is null above
Root: ID
Current arr1	111	ID	 N/A 	<input_plist>	1	ID
RootID ka child is null below
Root: <input_plist>
Current ----	110	----	 N/A 	<module>	0	<input_plist>
RootCOLON child is null above
Root: COLON
Current :	111	COLON	 N/A 	<input_plist>	1	COLON
RootCOLON ka child is null below
RootARRAY child is null above
Root: ARRAY
Current array	111	ARRAY	 N/A 	<dataType>	1	ARRAY
RootARRAY ka child is null below
Root: <dataType>
Current ----	111	----	 N/A 	<input_plist>	0	<dataType>
RootSQBO child is null above
Root: SQBO
Current [	111	SQBO	 N/A 	<dataType>	1	SQBO
RootSQBO ka child is null below
RootNUM child is null above
Root: NUM
Current 1	111	NUM	1.000000	<range>	1	NUM
RootNUM ka child is null below
Root: <range>
Current ----	111	----	 N/A 	<dataType>	0	<range>
RootRANGEOP child is null above
Root: RANGEOP
Current ..	111	RANGEOP	 N/A 	<range>	1	RANGEOP
RootRANGEOP ka child is null below
RootNUM child is null above
Root: NUM
Current 15	111	NUM	15.000000	<range>	1	NUM
RootNUM ka child is null below
RootSQBC child is null above
Root: SQBC
Current ]	111	SQBC	 N/A 	<dataType>	1	SQBC
RootSQBC ka child is null below
RootOF child is null above
Root: OF
Current of	111	OF	 N/A 	<dataType>	1	OF
RootOF ka child is null below
RootREAL child is null above
Root: REAL
Current real	111	REAL	 N/A 	<type>	1	REAL
RootREAL ka child is null below
Root: <type>
Current ----	111	----	 N/A 	<dataType>	0	<type>
Root<type> ka child's sibling is null
RootCOMMA child is null above
Root: COMMA
Current ,	111	COMMA	 N/A 	<input_plist_ex>	1	COMMA
RootCOMMA ka child is null below
Root: <input_plist_ex>
Current ----	111	----	 N/A 	<input_plist>	0	<input_plist_ex>
RootID child is null above
Root: ID
Current k	111	ID	 N/A 	<input_plist_ex>	1	ID
RootID ka child is null below
RootCOLON child is null above
Root: COLON
Current :	111	COLON	 N/A 	<input_plist_ex>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	111	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	111	----	 N/A 	<input_plist_ex>	0	<dataType>
Root<dataType> ka child's sibling is null
Roote child is null above
Root: e
Current ----	111	----	 N/A 	<input_plist_ex>	1	e
Roote ka child is null below
Root: <input_plist_ex>
Current ----	111	----	 N/A 	<input_plist_ex>	0	<input_plist_ex>
Root<input_plist_ex> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	111	SQBC	 N/A 	<module>	1	SQBC
RootSQBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	111	SEMICOL	 N/A 	<module>	1	SEMICOL
RootSEMICOL ka child is null below
Roote child is null above
Root: e
Current ----	112	----	 N/A 	<ret>	1	e
Roote ka child is null below
Root: <ret>
Current ----	110	----	 N/A 	<module>	0	<ret>
Root<ret> ka child's sibling is null
RootSTART child is null above
Root: START
Current start	112	START	 N/A 	<moduleDef>	1	START
RootSTART ka child is null below
Root: <moduleDef>
Current ----	110	----	 N/A 	<module>	0	<moduleDef>
RootDECLARE child is null above
Root: DECLARE
Current declare	113	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	113	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current tempvar	113	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	113	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	113	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	113	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	113	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootREAL child is null above
Root: REAL
Current real	113	REAL	 N/A 	<dataType>	1	REAL
RootREAL ka child is null below
Root: <dataType>
Current ----	113	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	113	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	113	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	112	----	 N/A 	<moduleDef>	0	<statements>
RootDECLARE child is null above
Root: DECLARE
Current declare	114	DECLARE	 N/A 	<declareStmt>	1	DECLARE
RootDECLARE ka child is null below
Root: <declareStmt>
Current ----	114	----	 N/A 	<statement>	0	<declareStmt>
RootID child is null above
Root: ID
Current i	114	ID	 N/A 	<idList>	1	ID
RootID ka child is null below
Root: <idList>
Current ----	114	----	 N/A 	<declareStmt>	0	<idList>
Roote child is null above
Root: e
Current ----	114	----	 N/A 	<idList_ex>	1	e
Roote ka child is null below
Root: <idList_ex>
Current ----	114	----	 N/A 	<idList>	0	<idList_ex>
Root<idList_ex> ka child's sibling is null
RootCOLON child is null above
Root: COLON
Current :	114	COLON	 N/A 	<declareStmt>	1	COLON
RootCOLON ka child is null below
RootINTEGER child is null above
Root: INTEGER
Current integer	114	INTEGER	 N/A 	<dataType>	1	INTEGER
RootINTEGER ka child is null below
Root: <dataType>
Current ----	114	----	 N/A 	<declareStmt>	0	<dataType>
Root<dataType> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	114	SEMICOL	 N/A 	<declareStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	114	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	113	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current i	115	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	115	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	115	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	115	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootNUM child is null above
Root: NUM
Current 1	115	NUM	1.000000	<var>	1	NUM
RootNUM ka child is null below
Root: <var>
Current ----	115	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	115	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	115	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	115	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	115	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	115	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	115	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	115	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	115	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	115	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	115	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	115	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	115	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	115	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	115	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	115	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	115	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	115	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	115	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	114	----	 N/A 	<statements>	0	<statements>
RootWHILE child is null above
Root: WHILE
Current while	116	WHILE	 N/A 	<iterativeStmt>	1	WHILE
RootWHILE ka child is null below
Root: <iterativeStmt>
Current ----	116	----	 N/A 	<statement>	0	<iterativeStmt>
RootBO child is null above
Root: BO
Current (	116	BO	 N/A 	<iterativeStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current i	116	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	116	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	116	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	116	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	116	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	116	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	116	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	116	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	116	----	 N/A 	<AOBE>	0	<AnyTerm>
RootLE child is null above
Root: LE
Current <=	116	LE	 N/A 	<relationalOp>	1	LE
RootLE ka child is null below
Root: <relationalOp>
Current ----	116	----	 N/A 	<WithRelOp>	0	<relationalOp>
Root<relationalOp> ka child's sibling is null
Root: <WithRelOp>
Current ----	116	----	 N/A 	<AnyTerm>	0	<WithRelOp>
RootID child is null above
Root: ID
Current k	116	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	116	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	116	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	116	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	116	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	116	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	116	----	 N/A 	<BorNBAE>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	116	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <BorNBAE>
Current ----	116	----	 N/A 	<negOrPosAE>	0	<BorNBAE>
Root<BorNBAE> ka child's sibling is null
Root: <negOrPosAE>
Current ----	116	----	 N/A 	<WithRelOp>	0	<negOrPosAE>
Root<negOrPosAE> ka child's sibling is null
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	116	----	 N/A 	<WithRelOp>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	116	----	 N/A 	<iterativeStmt>	0	<AOBE>
Roote child is null above
Root: e
Current ----	116	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	116	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	116	BC	 N/A 	<iterativeStmt>	1	BC
RootBC ka child is null below
RootSTART child is null above
Root: START
Current start	117	START	 N/A 	<iterativeStmt>	1	START
RootSTART ka child is null below
RootGET_VALUE child is null above
Root: GET_VALUE
Current get_value	118	GET_VALUE	 N/A 	<ioStmt>	1	GET_VALUE
RootGET_VALUE ka child is null below
Root: <ioStmt>
Current ----	118	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	118	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current tempvar	118	ID	 N/A 	<ioStmt>	1	ID
RootID ka child is null below
RootBC child is null above
Root: BC
Current )	118	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	118	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	118	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	116	----	 N/A 	<iterativeStmt>	0	<statements>
RootID child is null above
Root: ID
Current arr1	119	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	119	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootSQBO child is null above
Root: SQBO
Current [	119	SQBO	 N/A 	<lvalueARRStmt>	1	SQBO
RootSQBO ka child is null below
Root: <lvalueARRStmt>
Current ----	119	----	 N/A 	<whichStmt>	0	<lvalueARRStmt>
RootID child is null above
Root: ID
Current i	119	ID	 N/A 	<index>	1	ID
RootID ka child is null below
Root: <index>
Current ----	119	----	 N/A 	<lvalueARRStmt>	0	<index>
Root<index> ka child's sibling is null
RootSQBC child is null above
Root: SQBC
Current ]	119	SQBC	 N/A 	<lvalueARRStmt>	1	SQBC
RootSQBC ka child is null below
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	119	ASSIGNOP	 N/A 	<lvalueARRStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
RootID child is null above
Root: ID
Current tempvar	119	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	119	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	119	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	119	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	119	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	119	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	119	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	119	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	119	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
Roote child is null above
Root: e
Current ----	119	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	119	----	 N/A 	<arithmeticExpr>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	119	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	119	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	119	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	119	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	119	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	119	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	119	----	 N/A 	<lvalueARRStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	119	SEMICOL	 N/A 	<lvalueARRStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	119	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	119	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	119	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	118	----	 N/A 	<statements>	0	<statements>
RootID child is null above
Root: ID
Current i	120	ID	 N/A 	<assignmentStmt>	1	ID
RootID ka child is null below
Root: <assignmentStmt>
Current ----	120	----	 N/A 	<simpleStmt>	0	<assignmentStmt>
RootASSIGNOP child is null above
Root: ASSIGNOP
Current :=	120	ASSIGNOP	 N/A 	<lvalueIDStmt>	1	ASSIGNOP
RootASSIGNOP ka child is null below
Root: <lvalueIDStmt>
Current ----	120	----	 N/A 	<whichStmt>	0	<lvalueIDStmt>
RootID child is null above
Root: ID
Current i	120	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	120	----	 N/A 	<factor>	0	<var>
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	120	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
Root: <factor>
Current ----	120	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	120	----	 N/A 	<arithmeticExpr>	0	<term>
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	120	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Root: <arithmeticExpr>
Current ----	120	----	 N/A 	<AnyTerm>	0	<arithmeticExpr>
RootPLUS child is null above
Root: PLUS
Current +	120	PLUS	 N/A 	<op1>	1	PLUS
RootPLUS ka child is null below
Root: <op1>
Current ----	120	----	 N/A 	<N4>	0	<op1>
Root<op1> ka child's sibling is null
Root: <N4>
Current ----	120	----	 N/A 	<arithmeticExpr>	0	<N4>
RootNUM child is null above
Root: NUM
Current 1	120	NUM	1.000000	<var>	1	NUM
RootNUM ka child is null below
Root: <var>
Current ----	120	----	 N/A 	<factor>	0	<var>
Root<var> ka child's sibling is null
Root: <factor>
Current ----	120	----	 N/A 	<term>	0	<factor>
Root<factor> ka child's sibling is null
Root: <term>
Current ----	120	----	 N/A 	<N4>	0	<term>
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<N5>	1	e
Roote ka child is null below
Root: <N5>
Current ----	120	----	 N/A 	<term>	0	<N5>
Root<N5> ka child's sibling is null
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<N4>	1	e
Roote ka child is null below
Root: <N4>
Current ----	120	----	 N/A 	<N4>	0	<N4>
Root<N4> ka child's sibling is null
Root: <AnyTerm>
Current ----	120	----	 N/A 	<AOBE>	0	<AnyTerm>
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<WithRelOp>	1	e
Roote ka child is null below
Root: <WithRelOp>
Current ----	120	----	 N/A 	<AnyTerm>	0	<WithRelOp>
Root<WithRelOp> ka child's sibling is null
Root: <AOBE>
Current ----	120	----	 N/A 	<expression>	0	<AOBE>
Roote child is null above
Root: e
Current ----	120	----	 N/A 	<WithLogOp>	1	e
Roote ka child is null below
Root: <WithLogOp>
Current ----	120	----	 N/A 	<AOBE>	0	<WithLogOp>
Root<WithLogOp> ka child's sibling is null
Root: <expression>
Current ----	120	----	 N/A 	<lvalueIDStmt>	0	<expression>
Root<expression> ka child's sibling is null
RootSEMICOL child is null above
Root: SEMICOL
Current ;	120	SEMICOL	 N/A 	<lvalueIDStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <whichStmt>
Current ----	120	----	 N/A 	<assignmentStmt>	0	<whichStmt>
Root<whichStmt> ka child's sibling is null
Root: <simpleStmt>
Current ----	120	----	 N/A 	<statement>	0	<simpleStmt>
Root<simpleStmt> ka child's sibling is null
Root: <statement>
Current ----	120	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	119	----	 N/A 	<statements>	0	<statements>
Roote child is null above
Root: e
Current ----	122	----	 N/A 	<statements>	1	e
Roote ka child is null below
Root: <statements>
Current ----	120	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child's sibling is null
RootEND child is null above
Root: END
Current end	122	END	 N/A 	<iterativeStmt>	1	END
RootEND ka child is null below
Root: <statement>
Current ----	116	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	115	----	 N/A 	<statements>	0	<statements>
RootPRINT child is null above
Root: PRINT
Current print	123	PRINT	 N/A 	<ioStmt>	1	PRINT
RootPRINT ka child is null below
Root: <ioStmt>
Current ----	123	----	 N/A 	<statement>	0	<ioStmt>
RootBO child is null above
Root: BO
Current (	123	BO	 N/A 	<ioStmt>	1	BO
RootBO ka child is null below
RootID child is null above
Root: ID
Current random	123	ID	 N/A 	<var>	1	ID
RootID ka child is null below
Root: <var>
Current ----	123	----	 N/A 	<ioStmt>	0	<var>
Roote child is null above
Root: e
Current ----	123	----	 N/A 	<whichId>	1	e
Roote ka child is null below
Root: <whichId>
Current ----	123	----	 N/A 	<var>	0	<whichId>
Root<whichId> ka child's sibling is null
RootBC child is null above
Root: BC
Current )	123	BC	 N/A 	<ioStmt>	1	BC
RootBC ka child is null below
RootSEMICOL child is null above
Root: SEMICOL
Current ;	123	SEMICOL	 N/A 	<ioStmt>	1	SEMICOL
RootSEMICOL ka child is null below
Root: <statement>
Current ----	123	----	 N/A 	<statements>	0	<statement>
Root<statement> ka child's sibling is null
Root: <statements>
Current ----	116	----	 N/A 	<statements>	0	<statements>
Root<statements> child is null above
Root: <statements>
Current ----	123	----	 N/A 	<statements>	0	<statements>
Root<statements> ka child is null below
RootEND child is null above
Root: END
Current start	112	START	 N/A 	<moduleDef>	1	END
RootEND ka child is null below
Root: <otherModules>
Current ----	88	----	 N/A 	<otherModules>	0	<otherModules>
Root<otherModules> child is null above
Root: <otherModules>
Current ----	110	----	 N/A 	<otherModules>	0	<otherModules>
Root<otherModules> ka child is null below
